{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/mixins/dashboard.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/mixins/dashboard.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYW5uZS1zb3BoaWVyb3kvRG93bmxvYWRzL01haW5zYWlsL21haW5zYWlsLW1haW50ZW5hbmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9hbm5lLXNvcGhpZXJveS9Eb3dubG9hZHMvTWFpbnNhaWwvbWFpbnNhaWwtbWFpbnRlbmFuY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvYW5uZS1zb3BoaWVyb3kvRG93bmxvYWRzL01haW5zYWlsL21haW5zYWlsLW1haW50ZW5hbmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cy5qcyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCBDb21wb25lbnQgZnJvbSAndnVlLWNsYXNzLWNvbXBvbmVudCc7CmltcG9ydCBCYXNlTWl4aW4gZnJvbSAnQC9jb21wb25lbnRzL21peGlucy9iYXNlJzsKaW1wb3J0IHsgYWxsRGFzaGJvYXJkUGFuZWxzIH0gZnJvbSAnQC9zdG9yZS92YXJpYWJsZXMnOwppbXBvcnQgeyBjYXBpdGFsaXplIH0gZnJvbSAnQC9wbHVnaW5zL2hlbHBlcnMnOwoKdmFyIERhc2hib2FyZE1peGluID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQmFzZU1peGluKSB7CiAgX2luaGVyaXRzKERhc2hib2FyZE1peGluLCBfQmFzZU1peGluKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihEYXNoYm9hcmRNaXhpbik7CgogIGZ1bmN0aW9uIERhc2hib2FyZE1peGluKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERhc2hib2FyZE1peGluKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRGFzaGJvYXJkTWl4aW4sIFt7CiAgICBrZXk6ICJtYWNyb01vZGUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciBfdGhpcyQkc3RvcmUkc3RhdGUkZ3U7CgogICAgICByZXR1cm4gKF90aGlzJCRzdG9yZSRzdGF0ZSRndSA9IHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5tYWNyb3MubW9kZSkgIT09IG51bGwgJiYgX3RoaXMkJHN0b3JlJHN0YXRlJGd1ICE9PSB2b2lkIDAgPyBfdGhpcyQkc3RvcmUkc3RhdGUkZ3UgOiAnc2ltcGxlJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtYWNyb2dyb3VwcyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIF90aGlzJCRzdG9yZSRnZXR0ZXJzJDsKCiAgICAgIHJldHVybiAoX3RoaXMkJHN0b3JlJGdldHRlcnMkID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snZ3VpL21hY3Jvcy9nZXRBbGxNYWNyb2dyb3VwcyddKSAhPT0gbnVsbCAmJiBfdGhpcyQkc3RvcmUkZ2V0dGVycyQgIT09IHZvaWQgMCA/IF90aGlzJCRzdG9yZSRnZXR0ZXJzJCA6IFtdOwogICAgfQogIH0sIHsKICAgIGtleTogIndlYmNhbXMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciBfdGhpcyQkc3RvcmUkZ2V0dGVycyQyOwoKICAgICAgcmV0dXJuIChfdGhpcyQkc3RvcmUkZ2V0dGVycyQyID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snZ3VpL3dlYmNhbXMvZ2V0V2ViY2FtcyddKSAhPT0gbnVsbCAmJiBfdGhpcyQkc3RvcmUkZ2V0dGVycyQyICE9PSB2b2lkIDAgPyBfdGhpcyQkc3RvcmUkZ2V0dGVycyQyIDogW107CiAgICB9CiAgfSwgewogICAga2V5OiAibWlzc2luZ1BhbmVsc01vYmlsZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIHBhbmVscyA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZGFzaGJvYXJkLm1vYmlsZUxheW91dCk7CgogICAgICByZXR1cm4gdGhpcy5jaGVja01pc3NpbmdQYW5lbHMocGFuZWxzKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtaXNzaW5nUGFuZWxzVGFibGV0IiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgcGFuZWxzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZGFzaGJvYXJkLnRhYmxldExheW91dDEpLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmRhc2hib2FyZC50YWJsZXRMYXlvdXQyKSk7CiAgICAgIHJldHVybiB0aGlzLmNoZWNrTWlzc2luZ1BhbmVscyhwYW5lbHMpOwogICAgfQogIH0sIHsKICAgIGtleTogIm1pc3NpbmdQYW5lbHNEZXNrdG9wIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgcGFuZWxzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZGFzaGJvYXJkLmRlc2t0b3BMYXlvdXQxKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5kYXNoYm9hcmQuZGVza3RvcExheW91dDIpKTsKICAgICAgcmV0dXJuIHRoaXMuY2hlY2tNaXNzaW5nUGFuZWxzKHBhbmVscyk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWlzc2luZ1BhbmVsc1dpZGVzY3JlZW4iLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciBwYW5lbHMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5kYXNoYm9hcmQud2lkZXNjcmVlbkxheW91dDEpLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmRhc2hib2FyZC53aWRlc2NyZWVuTGF5b3V0MiksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZGFzaGJvYXJkLndpZGVzY3JlZW5MYXlvdXQzKSk7CiAgICAgIHJldHVybiB0aGlzLmNoZWNrTWlzc2luZ1BhbmVscyhwYW5lbHMpOwogICAgfQogIH0sIHsKICAgIGtleTogImNoZWNrTWlzc2luZ1BhbmVscyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2hlY2tNaXNzaW5nUGFuZWxzKHBhbmVscykgewogICAgICB2YXIgYWxsUGFuZWxzID0gX3RvQ29uc3VtYWJsZUFycmF5KGFsbERhc2hib2FyZFBhbmVscyk7CgogICAgICB2YXIgbWlzc2luZ1BhbmVscyA9IFtdOyAvLyByZW1vdmUgbWFjcm9zIHBhbmVsIGFuZCBhZGQgbWFjcm9ncm91cHMgcGFuZWxzIGlmIG1hY3JvTW9kZSA9PT0gZXhwZXJ0CgogICAgICBpZiAodGhpcy5tYWNyb01vZGUgPT09ICdleHBlcnQnKSB7CiAgICAgICAgdGhpcy5tYWNyb2dyb3Vwcy5mb3JFYWNoKGZ1bmN0aW9uIChncm91cCkgewogICAgICAgICAgYWxsUGFuZWxzLnB1c2goJ21hY3JvZ3JvdXBfJyArIGdyb3VwLmlkKTsKICAgICAgICB9KTsKICAgICAgICBhbGxQYW5lbHMgPSBhbGxQYW5lbHMuZmlsdGVyKGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgICAgICByZXR1cm4gbmFtZSAhPT0gJ21hY3Jvcyc7CiAgICAgICAgfSk7CiAgICAgIH0gLy8gcmVtb3ZlIHdlYmNhbSBwYW5lbCwgaWYgbm8gd2ViY2FtIGV4aXN0cwoKCiAgICAgIGlmICh0aGlzLndlYmNhbXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgYWxsUGFuZWxzID0gYWxsUGFuZWxzLmZpbHRlcihmdW5jdGlvbiAobmFtZSkgewogICAgICAgICAgcmV0dXJuIG5hbWUgIT09ICd3ZWJjYW0nOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBhbGxQYW5lbHMuZm9yRWFjaChmdW5jdGlvbiAocGFuZWxuYW1lKSB7CiAgICAgICAgaWYgKCFwYW5lbHMuZmluZChmdW5jdGlvbiAocGFuZWwpIHsKICAgICAgICAgIHJldHVybiBwYW5lbC5uYW1lID09PSBwYW5lbG5hbWU7CiAgICAgICAgfSkpIG1pc3NpbmdQYW5lbHMucHVzaCh7CiAgICAgICAgICBuYW1lOiBwYW5lbG5hbWUsCiAgICAgICAgICB2aXNpYmxlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gbWlzc2luZ1BhbmVsczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRQYW5lbE5hbWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBhbmVsTmFtZShuYW1lKSB7CiAgICAgIGlmIChuYW1lLnN0YXJ0c1dpdGgoJ21hY3JvZ3JvdXBfJykpIHsKICAgICAgICB2YXIgX25hbWUkc3BsaXQkOwoKICAgICAgICB2YXIgZ3JvdXBJZCA9IChfbmFtZSRzcGxpdCQgPSBuYW1lLnNwbGl0KCdfJylbMV0pICE9PSBudWxsICYmIF9uYW1lJHNwbGl0JCAhPT0gdm9pZCAwID8gX25hbWUkc3BsaXQkIDogJyc7CiAgICAgICAgdmFyIGdyb3VwID0gdGhpcy5tYWNyb2dyb3Vwcy5maW5kKGZ1bmN0aW9uIChncm91cCkgewogICAgICAgICAgcmV0dXJuIGdyb3VwLmlkID09PSBncm91cElkOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBncm91cCA/IGdyb3VwLm5hbWUgOiAnTWFjcm9ncm91cCc7CiAgICAgIH0KCiAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCctJykpIHsKICAgICAgICB2YXIgcGFuZWxOYW1lID0gJyc7CiAgICAgICAgdmFyIHN1YlN0cmluZ3MgPSBuYW1lLnNwbGl0KCctJyk7CiAgICAgICAgc3ViU3RyaW5ncy5mb3JFYWNoKGZ1bmN0aW9uIChzdWJTdHIpIHsKICAgICAgICAgIHBhbmVsTmFtZSArPSBjYXBpdGFsaXplKHN1YlN0cik7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHRoaXMuJHQoJ1BhbmVscy4nICsgcGFuZWxOYW1lICsgJ1BhbmVsLkhlYWRsaW5lJyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLiR0KCdQYW5lbHMuJyArIGNhcGl0YWxpemUobmFtZSkgKyAnUGFuZWwuSGVhZGxpbmUnKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBEYXNoYm9hcmRNaXhpbjsKfShCYXNlTWl4aW4pOwoKRGFzaGJvYXJkTWl4aW4gPSBfX2RlY29yYXRlKFtDb21wb25lbnRdLCBEYXNoYm9hcmRNaXhpbik7CmV4cG9ydCBkZWZhdWx0IERhc2hib2FyZE1peGluOw=="},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/mixins/dashboard.ts"],"names":[],"mappings":"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","sourcesContent":["import Component from 'vue-class-component'\nimport BaseMixin from '@/components/mixins/base'\nimport {allDashboardPanels} from '@/store/variables'\nimport {capitalize} from '@/plugins/helpers'\nimport {GuiMacrosStateMacrogroup} from '@/store/gui/macros/types'\n\n@Component\nexport default class DashboardMixin extends BaseMixin {\n\n    get macroMode() {\n        return this.$store.state.gui.macros.mode ?? 'simple'\n    }\n\n    get macrogroups() {\n        return this.$store.getters['gui/macros/getAllMacrogroups'] ?? []\n    }\n\n\n    get webcams() {\n        return this.$store.getters['gui/webcams/getWebcams'] ?? []\n    }\n\n    get missingPanelsMobile() {\n        const panels = [\n            ...this.$store.state.gui.dashboard.mobileLayout,\n        ]\n\n        return this.checkMissingPanels(panels)\n    }\n\n    get missingPanelsTablet() {\n        const panels = [\n            ...this.$store.state.gui.dashboard.tabletLayout1,\n            ...this.$store.state.gui.dashboard.tabletLayout2,\n        ]\n\n        return this.checkMissingPanels(panels)\n    }\n\n    get missingPanelsDesktop() {\n        const panels = [\n            ...this.$store.state.gui.dashboard.desktopLayout1,\n            ...this.$store.state.gui.dashboard.desktopLayout2,\n        ]\n\n        return this.checkMissingPanels(panels)\n    }\n\n    get missingPanelsWidescreen() {\n        const panels = [\n            ...this.$store.state.gui.dashboard.widescreenLayout1,\n            ...this.$store.state.gui.dashboard.widescreenLayout2,\n            ...this.$store.state.gui.dashboard.widescreenLayout3,\n        ]\n\n        return this.checkMissingPanels(panels)\n    }\n\n    checkMissingPanels(panels: any[]) {\n        let allPanels = [...allDashboardPanels]\n        const missingPanels: any[] = []\n\n        // remove macros panel and add macrogroups panels if macroMode === expert\n        if (this.macroMode === 'expert') {\n            this.macrogroups.forEach((group: GuiMacrosStateMacrogroup) => {\n                allPanels.push('macrogroup_'+group.id)\n            })\n\n            allPanels = allPanels.filter((name) => name !== 'macros')\n        }\n\n        // remove webcam panel, if no webcam exists\n        if (this.webcams.length === 0) {\n            allPanels = allPanels.filter((name) => name !== 'webcam')\n        }\n\n        allPanels.forEach((panelname) => {\n            if (!panels.find((panel) => panel.name === panelname))\n                missingPanels.push({\n                    name: panelname,\n                    visible: true\n                })\n        })\n\n        return missingPanels\n    }\n\n    getPanelName(name: string) {\n        if (name.startsWith('macrogroup_')) {\n            const groupId = name.split('_')[1] ?? ''\n            const group = this.macrogroups.find((group: GuiMacrosStateMacrogroup) => group.id === groupId)\n\n            return (group) ? group.name : 'Macrogroup'\n        }\n\n        if (name.includes('-')) {\n            let panelName = ''\n            const subStrings = name.split('-')\n            subStrings.forEach((subStr) => {panelName += capitalize(subStr)})\n            return this.$t('Panels.' + panelName + 'Panel.Headline')\n        }\n\n        return this.$t('Panels.' + capitalize(name) + 'Panel.Headline')\n    }\n}"],"sourceRoot":""}]}