{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/server/getters.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/server/getters.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/server/getters.ts"],"names":[],"mappings":";;;;;;;AAEA,SAAQ,oBAAR,EAA8B,cAA9B,EAA8C,UAA9C,QAA+D,mBAA/D,C,CAEA;;AACA,OAAO,IAAM,OAAO,GAAiC;AAEjD,EAAA,gBAAgB,EAAE,0BAAC,KAAD;AAAA,WAAW,YAAgC;AAAA;;AAAA,UAA/B,OAA+B,uEAArB,IAAqB;AAAA,UAAf,KAAe,uEAAP,GAAO;AACzD,UAAM,MAAM,aAAG,mBAAI,KAAK,CAAC,MAAV,EAAkB,KAAlB,CAAwB,KAAK,GAAG,CAAC,CAAjC,CAAH,2CAA0C,EAAtD;;AAEA,UAAI,MAAM,CAAC,MAAP,GAAgB,EAApB,EAAwB;AACpB,YAAM,IAAI,GAAG,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,CAAD,CAAN,CAAU,IAA1B,GAAiC,IAAI,IAAJ,EAA9C;AACA,YAAI,OAAO,GAAG,EAAd;AAEA,QAAA,OAAO,IAAI,sFAAX;AACA,QAAA,OAAO,IAAI,uDAAX;AACA,QAAA,OAAO,IAAI,oFAAX;AACA,QAAA,OAAO,IAAI,iGAAX;AACA,QAAA,OAAO,IAAI,oEAAX;AAEA,QAAA,MAAM,CAAC,OAAP,CAAe;AACX,UAAA,IAAI,EAAE,IADK;AAEX,UAAA,UAAU,EAAE,UAAU,CAAC,IAAD,CAFX;AAGX,UAAA,OAAO,EAAE,OAHE;AAIX,UAAA,aAAa,EAAE,oBAAoB,CAAC,OAAD,CAJxB;AAKX,UAAA,IAAI,EAAE;AALK,SAAf;AAOH;;AAED,aAAQ,OAAD,GAAY,MAAM,CAAC,OAAP,EAAZ,GAA+B,MAAtC;AACH,KAvBiB;AAAA,GAF+B;AA2BjD,EAAA,SAAS,EAAE,mBAAC,KAAD;AAAA,WAAW,UAAC,OAAD,EAAkB,SAAlB,EAAuC;AACzD,UACI,OAAO,IAAI,KAAK,CAAC,MAAjB,IACA,SAAS,IAAI,KAAK,CAAC,MAAN,CAAa,OAAb,CAFjB,EAGE,OAAO,KAAK,CAAC,MAAN,CAAa,OAAb,EAAsB,SAAtB,CAAP;AAEF,aAAO,IAAP;AACH,KAPU;AAAA,GA3BsC;AAoCjD,EAAA,YAAY,EAAE,sBAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,WAA5B,EAA2C;AAyBrD,QAAI,MAAM,GAAqB,IAA/B,CAzBqD,CA2BrD;;AACA,QAAI,iBAAiB,KAArB,EAA4B;AAAA;;AACxB,UAAI,OAAO,GAAkB,IAA7B;;AACA,gCAAI,SAAS,CAAC,OAAd,+CAAI,mBAAmB,gBAAvB,EAAyC;AAAA;;AACrC,QAAA,OAAO,0BAAG,SAAS,CAAC,OAAb,wDAAG,oBAAmB,gBAAnB,CAAoC,KAApC,CAA0C,GAA1C,EAA+C,KAA/C,CAAqD,CAArD,EAAwD,CAAxD,EAA2D,IAA3D,CAAgE,GAAhE,CAAV;AACH;;AAED,UAAM,OAAO,kDAAG,KAAK,CAAC,WAAT,iFAAG,mBAAmB,QAAtB,2DAAG,uBAA6B,SAAhC,yEAA6C,CAA1D;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,oDAAC,SAAS,CAAC,OAAV,CAAkB,YAAnB,2DAAC,uBAAgC,OAAjC,yEAA4C,CAA5C,IAAiD,GAA5D,IAAmE,GAAhF;AACA,UAAM,WAAW,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,GAAG,OAAP,GAAiB,GAA5B,CAApB;AAEA,UAAI,iBAAiB,GAAG,SAAxB;AACA,UAAI,WAAW,GAAG,EAAlB,EAAsB,iBAAiB,GAAG,OAApB,CAAtB,KACK,IAAI,WAAW,GAAG,EAAlB,EAAsB,iBAAiB,GAAG,SAApB;AAE3B,UAAI,YAAY,GAAkB,IAAlC;AACA,UAAM,QAAQ,GAAG,qDAAC,SAAS,CAAC,OAAV,CAAkB,YAAnB,2DAAC,uBAAgC,QAAjC,2EAA6C,CAA7C,IAAkD,IAAnE;AACA,UAAM,QAAQ,GAAG,kDAAC,KAAK,CAAC,WAAP,iFAAC,oBAAmB,QAApB,0DAAC,sBAA6B,YAA9B,2EAA8C,CAA9C,IAAmD,IAApE;;AAEA,UAAI,QAAQ,GAAG,CAAX,IAAgB,QAAQ,GAAG,CAA/B,EAAkC;AAC9B,QAAA,YAAY,GAAG,cAAc,CAAC,QAAQ,GAAG,QAAZ,CAAd,GAAsC,KAAtC,GAA8C,cAAc,CAAC,QAAD,CAA3E;AACH,OAFD,MAEO,IAAI,QAAJ,EAAc;AACjB,QAAA,YAAY,GAAG,cAAc,CAAC,QAAD,CAA7B;AACH;;AAED,UAAI,UAAU,GAAG,WAAW,CAAC,2BAAD,CAA5B;;AACA,UAAI,UAAU,KAAK,IAAnB,EAAyB;AAAA;;AACrB,QAAA,UAAU,GAAG;AACT,UAAA,WAAW,qBAAE,KAAK,CAAC,QAAR,oDAAE,gBAAgB,OAAhB,CAAwB,CAAxB,CADJ;AAET,UAAA,iBAAiB,EAAE,IAFV;AAGT,UAAA,iBAAiB,EAAE;AAHV,SAAb;AAKH;;AAED,MAAA,MAAM,GAAG;AACL,QAAA,OAAO,mDAAE,KAAK,CAAC,WAAR,iFAAE,oBAAmB,QAArB,0DAAE,sBAA6B,SAA/B,2EAA4C,IAD9C;AAEL,QAAA,OAAO,mDAAE,KAAK,CAAC,WAAR,iFAAE,oBAAmB,QAArB,0DAAE,sBAA6B,QAA/B,2EAA2C,IAF7C;AAGL,QAAA,OAAO,EAAP,OAHK;AAIL,QAAA,EAAE,kDAAE,KAAK,CAAC,WAAR,iFAAE,oBAAmB,YAArB,0DAAE,sBAAiC,IAAnC,yEAA2C,IAJxC;AAKL,QAAA,YAAY,mDAAE,KAAK,CAAC,WAAR,iFAAE,oBAAmB,YAArB,0DAAE,sBAAiC,YAAnC,2EAAmD,IAL1D;AAML,QAAA,IAAI,EAAJ,IANK;AAOL,QAAA,WAAW,EAAE,WAAW,GAAG,GAAd,GAAoB,WAApB,GAAkC,GAP1C;AAQL,QAAA,iBAAiB,EAAjB,iBARK;AASL,QAAA,YAAY,EAAZ,YATK;AAUL,QAAA,OAAO,EAAE,cAAc,CAAC,QAAQ,GAAG,QAAZ,CAVlB;AAWL,QAAA,QAAQ,EAAE,cAAc,CAAC,QAAD,CAXnB;AAYL,QAAA,QAAQ,EAAE,cAAc,CAAC,QAAD,CAZnB;AAaL,QAAA,UAAU,EAAV;AAbK,OAAT;AAeH;;AAED,WAAO,MAAP;AACH;AAnHgD,CAA9C","sourcesContent":["import {GetterTree} from 'vuex'\nimport {ServerState} from '@/store/server/types'\nimport {formatConsoleMessage, formatFilesize, formatTime} from '@/plugins/helpers'\n\n// eslint-disable-next-line\nexport const getters: GetterTree<ServerState, any> = {\n\n    getConsoleEvents: (state) => (reverse = true, limit = 500) => {\n        const events = [...state.events].slice(limit * -1) ?? []\n\n        if (events.length < 20) {\n            const date = events.length ? events[0].date : new Date()\n            let message = ''\n\n            message += '- Type <a class=\"command text--blue\">HELP</a> to get a list of available commands.\\n'\n            message += '- Click on the \"?\" button to get a searchable list.\\n'\n            message += '- Commands in the console are clickable and will be placed into the input field.\\n'\n            message += '- Use the tab key to complete your inputs. If there are several options, a list is displayed.\\n'\n            message += '- Use the ⇵ arrow keys to navigate through the previous entries.\\n'\n\n            events.unshift({\n                date: date,\n                formatTime: formatTime(date),\n                message: message,\n                formatMessage: formatConsoleMessage(message),\n                type: 'response',\n            })\n        }\n\n        return (reverse) ? events.reverse() : events\n    },\n\n    getConfig: (state) => (section: string, attribute: string) => {\n        if (\n            section in state.config &&\n            attribute in state.config[section]\n        ) return state.config[section][attribute]\n\n        return null\n    },\n\n    getHostStats: (state, getters, rootState, rootGetters) => {\n        interface HostStats {\n            cpuName: string | null\n            cpuDesc: string | null\n            version: string | null\n            os: string | null\n            release_info?: {\n                name: string\n                version_id: string\n                id: string\n            } | null\n            load: number\n            loadPercent: number\n            loadProgressColor: string\n            memoryFormat: string | null\n            memUsed: string\n            memAvail: string\n            memTotal: string\n            tempSensor: {\n                temperature: number\n                measured_min_temp: number | null,\n                measured_max_temp: number | null\n            }\n        }\n\n        let output: HostStats | null = null\n\n        //state.printer.system_stats\n        if ('system_info' in state) {\n            let version: null | string = null\n            if (rootState.printer?.software_version) {\n                version = rootState.printer?.software_version.split('-').slice(0, 4).join('-')\n            }\n\n            const cpuCors = state.system_info?.cpu_info?.cpu_count ?? 1\n            const load = Math.round((rootState.printer.system_stats?.sysload ?? 0) * 100) / 100\n            const loadPercent = Math.round(load / cpuCors * 100)\n\n            let loadProgressColor = 'primary'\n            if (loadPercent > 95) loadProgressColor = 'error'\n            else if (loadPercent > 80) loadProgressColor = 'warning'\n\n            let memoryFormat: null | string = null\n            const memAvail = (rootState.printer.system_stats?.memavail ?? 0) * 1024\n            const memTotal = (state.system_info?.cpu_info?.total_memory ?? 0) * 1024\n\n            if (memAvail > 0 && memTotal > 0) {\n                memoryFormat = formatFilesize(memTotal - memAvail) + ' / ' + formatFilesize(memTotal)\n            } else if (memTotal) {\n                memoryFormat = formatFilesize(memTotal)\n            }\n\n            let tempSensor = rootGetters['printer/getHostTempSensor']\n            if (tempSensor === null) {\n                tempSensor = {\n                    temperature: state.cpu_temp?.toFixed(0),\n                    measured_min_temp: null,\n                    measured_max_temp: null\n                }\n            }\n\n            output = {\n                cpuName: state.system_info?.cpu_info?.processor ?? null,\n                cpuDesc: state.system_info?.cpu_info?.cpu_desc ?? null,\n                version,\n                os: state.system_info?.distribution?.name ?? null,\n                release_info: state.system_info?.distribution?.release_info ?? null,\n                load,\n                loadPercent: loadPercent < 100 ? loadPercent : 100,\n                loadProgressColor,\n                memoryFormat,\n                memUsed: formatFilesize(memTotal - memAvail),\n                memAvail: formatFilesize(memAvail),\n                memTotal: formatFilesize(memTotal),\n                tempSensor,\n            }\n        }\n\n        return output\n    },\n}"],"sourceRoot":""}]}