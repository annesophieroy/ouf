{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGeneralTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGeneralTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGeneralTab.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Component from 'vue-class-component'\nimport { Mixins } from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport Panel from '@/components/ui/Panel.vue'\nimport Vue from 'vue'\n\n@Component({\n    components: {Panel, SettingsRow}\n})\nexport default class SettingsGeneralTab extends Mixins(BaseMixin) {\n    private dialogBackupMainsail = false\n    private dialogResetMainsail = false\n    private dialogRestoreMainsail = false\n\n    private dbCheckboxes: string[] = []\n\n    private restoreableNamespaces: { name: string, label: string}[] = []\n    private restoreObjects: any = {}\n\n    private mainsailKeys: { name: string, label: string}[] = []\n    private availableNamespaces: string[] = []\n\n    $refs!: {\n        uploadBackupFile: HTMLInputElement\n    }\n\n    get availableKeys() {\n        return [\n            {\n                name: 'general',\n                label: this.$t('Settings.GeneralTab.General')+''\n            }, {\n                name: 'console',\n                label: this.$t('Settings.ConsoleTab.Console')+''\n            }, {\n                name: 'control',\n                label: this.$t('Settings.ControlTab.Control')+''\n            }, {\n                name: 'dashboard',\n                label: this.$t('Settings.DashboardTab.Dashboard')+''\n            }, {\n                name: 'editor',\n                label: this.$t('Settings.EditorTab.Editor')+''\n            }, {\n                name: 'gcodeviewer',\n                label: this.$t('Settings.GCodeViewerTab.GCodeViewer')+''\n            }, {\n                name: 'gcodehistory',\n                label: this.$t('Settings.GeneralTab.DbConsoleHistory')+''\n            }, {\n                name: 'macros',\n                label: this.$t('Settings.MacrosTab.Macros')+''\n            }, {\n                name: 'presets',\n                label: this.$t('Settings.PresetsTab.PreheatPresets')+''\n            }, {\n                name: 'remoteprinters',\n                label: this.$t('Settings.RemotePrintersTab.RemotePrinters')+''\n            }, {\n                name: 'timelapse',\n                label: this.$t('Settings.TimelapseTab.Timelapse')+''\n            }, {\n                name: 'uiSettings',\n                label: this.$t('Settings.UiSettingsTab.UiSettings')+''\n            }, {\n                name: 'view',\n                label: this.$t('Settings.GeneralTab.DbView')+''\n            }, {\n                name: 'webcams',\n                label: this.$t('Settings.WebcamsTab.Webcams')+''\n            }\n        ]\n    }\n\n    get printerName() {\n        return this.$store.state.gui.general.printername\n    }\n\n    set printerName(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.printername', value: newVal})\n    }\n\n    get currentLanguage() {\n        return this.$store.state.gui.general.language\n    }\n\n    set currentLanguage(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.language', value: newVal })\n    }\n\n    get availableLanguages() {\n        // eslint-disable-next-line no-undef\n        const locales = require.context('@/locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i)\n        const languages: any = []\n\n        locales.keys().map((key: string) => {\n            const langKey = key.slice(2, key.lastIndexOf('.'))\n\n            languages.push({\n                text: locales(key).title,\n                value: langKey\n            })\n        })\n\n        return languages\n    }\n\n    get calcEstimateItems() {\n        return [\n            { value: 'file', text: 'File' },\n            { value: 'filament', text: 'Filament' },\n        ]\n    }\n\n    get calcEstimateTime() {\n        return this.$store.state.gui.general.calcEstimateTime\n    }\n\n    set calcEstimateTime(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.calcEstimateTime', value: newVal })\n    }\n\n    get calcEtaTimeItems() {\n        return [\n            { value: 'file', text: 'File' },\n            { value: 'filament', text: 'Filament' },\n            { value: 'slicer', text: 'Slicer' },\n        ]\n    }\n\n    get calcEtaTime() {\n        return this.$store.state.gui.general.calcEtaTime\n    }\n\n    set calcEtaTime(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.calcEtaTime', value: newVal })\n    }\n\n    get moonrakerDbNamespaces() {\n        return this.$store.state.server.dbNamespaces ?? []\n    }\n\n    get moonrakerComponents() {\n        return this.$store.state.server.components ?? []\n    }\n\n    async refreshNamespaces() {\n        this.availableNamespaces = []\n\n        const url = this.$store.getters['socket/getUrl'] + '/server/database/list'\n        const response = await fetch(url)\n        if (response) {\n            const objects = await response.json()\n            this.availableNamespaces = [...objects.result?.namespaces] ?? []\n        }\n    }\n\n    async refreshMainsailKeys() {\n        this.mainsailKeys = []\n\n        const url = this.$store.getters['socket/getUrl'] + '/server/database/item?namespace=mainsail'\n        const response = await fetch(url)\n        if (response) {\n            const objects = await response.json()\n            if (objects?.result?.value) {\n                Object.keys(objects?.result?.value).forEach((tmp: string) => {\n                    if (tmp !== 'initVersion') {\n                        const namespace = this.availableKeys.find((namespace) => namespace.name === tmp)\n                        const tmpNamespace = namespace ? namespace : { name: tmp, label: tmp }\n                        this.mainsailKeys.push(tmpNamespace)\n                    }\n                })\n\n                this.mainsailKeys = this.mainsailKeys.sort((a, b) => {\n                    if (a.name === 'general') return -1\n                    if (b.name === 'general') return 1\n\n                    const stringA = a.label.toString().toLowerCase()\n                    const stringB = b.label.toString().toLowerCase()\n\n                    if (stringA < stringB) return -1\n                    if (stringA > stringB) return 1\n\n                    return 0\n                })\n            }\n        }\n    }\n\n    changeNamespace(name: string) {\n        if (this.dbCheckboxes.includes(name)) {\n            const index = this.dbCheckboxes.indexOf(name)\n            if (index >= 0) this.dbCheckboxes.splice(index, 1)\n        } else this.dbCheckboxes.push(name)\n    }\n\n    async resetMainsail() {\n        await this.refreshNamespaces()\n        if (this.availableNamespaces.includes('mainsail')) await this.refreshMainsailKeys()\n        else this.mainsailKeys = []\n\n        this.dbCheckboxes = []\n        this.dialogResetMainsail = true\n    }\n\n    async resetMainsailAction() {\n        await this.$store.dispatch('socket/addLoading', 'resetMainsail')\n        await this.$store.dispatch('gui/resetMoonrakerDB', this.dbCheckboxes)\n    }\n\n    async backupDb() {\n        this.$store.dispatch('socket/addLoading', 'backupDbButton')\n        await this.refreshNamespaces()\n        if (this.availableNamespaces.includes('mainsail')) await this.refreshMainsailKeys()\n        else this.mainsailKeys = []\n\n        this.dbCheckboxes = []\n        this.dialogBackupMainsail = true\n    }\n\n    async backupMainsail() {\n        await this.$store.dispatch('socket/addLoading', 'backupMainsail')\n        await this.$store.dispatch('gui/backupMoonrakerDB', this.dbCheckboxes)\n        await this.$store.dispatch('socket/removeLoading', 'backupMainsail')\n        this.dialogBackupMainsail = false\n    }\n\n    async restoreDb() {\n        this.$store.dispatch('socket/addLoading', 'restoreUploadButton')\n        this.$refs?.uploadBackupFile?.click()\n    }\n\n    uploadRestore() {\n        if (this.$refs.uploadBackupFile.files?.length) {\n            const backup = this.$refs.uploadBackupFile.files[0]\n            if (backup) {\n                const reader = new FileReader()\n                reader.readAsText(backup, 'UTF-8')\n                reader.onload = (evt) => {\n                    this.restoreableNamespaces = []\n                    try {\n                        this.restoreObjects = JSON.parse(evt?.target?.result+'')\n\n                        Object.keys(this.restoreObjects).forEach((tmp: string) => {\n                            const namespace = this.availableKeys.find((namespace) => namespace.name === tmp)\n                            const tmpNamespace = namespace ? namespace : { name: tmp, label: tmp }\n\n                            this.restoreableNamespaces.push(tmpNamespace)\n                        })\n\n                        this.restoreableNamespaces = this.restoreableNamespaces.sort((a, b) => {\n                            if (a.name === 'general') return -1\n                            if (b.name === 'general') return 1\n\n                            const stringA = a.label.toString().toLowerCase()\n                            const stringB = b.label.toString().toLowerCase()\n\n                            if (stringA < stringB) return -1\n                            if (stringA > stringB) return 1\n\n                            return 0\n                        })\n\n                        this.dbCheckboxes = []\n                        this.dialogRestoreMainsail = true\n                    } catch (e) {\n                        Vue.$toast.error(this.$t('Settings.GeneralTab.CannotReadJson')+'')\n                    }\n                }\n                reader.onerror = (evt) => {\n                    window.console.error(evt)\n                }\n            }\n\n            this.$refs.uploadBackupFile.value = ''\n        }\n    }\n\n    async restoreDbAction () {\n        this.$store.dispatch('socket/addLoading', 'restoreDbAction')\n\n        this.$store.dispatch('gui/restoreMoonrakerDB', {\n            dbCheckboxes: this.dbCheckboxes,\n            restoreObjects: this.restoreObjects\n        })\n    }\n}\n"],"sourceRoot":""}]}