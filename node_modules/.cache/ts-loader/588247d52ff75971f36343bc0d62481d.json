{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/gcodeviewer/actions.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/gcodeviewer/actions.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBhY3Rpb25zID0gewogIHJlc2V0OiBmdW5jdGlvbiByZXNldChfcmVmKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICBjb21taXQoJ3Jlc2V0Jyk7CiAgfSwKICBzZXRWaWV3ZXJCYWNrdXA6IGZ1bmN0aW9uIHNldFZpZXdlckJhY2t1cChfcmVmMiwgYmFja3VwKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgY29tbWl0KCdzZXRWaWV3ZXJCYWNrdXAnLCBiYWNrdXApOwogIH0sCiAgc2V0Q2FudmFzQmFja3VwOiBmdW5jdGlvbiBzZXRDYW52YXNCYWNrdXAoX3JlZjMsIGJhY2t1cCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgIGNvbW1pdCgnc2V0Q2FudmFzQmFja3VwJywgYmFja3VwKTsKICB9LAogIHNldExvYWRlZEZpbGVCYWNrdXA6IGZ1bmN0aW9uIHNldExvYWRlZEZpbGVCYWNrdXAoX3JlZjQsIGJhY2t1cCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIGNvbW1pdCgnc2V0TG9hZGVkRmlsZUJhY2t1cCcsIGJhY2t1cCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/gcodeviewer/actions.ts"],"names":[],"mappings":"AAIA,OAAO,IAAM,OAAO,GAA4C;AAC5D,EAAA,KAD4D,uBAC5C;AAAA,QAAR,MAAQ,QAAR,MAAQ;AACZ,IAAA,MAAM,CAAC,OAAD,CAAN;AACH,GAH2D;AAK5D,EAAA,eAL4D,kCAKhC,MALgC,EAK1B;AAAA,QAAhB,MAAgB,SAAhB,MAAgB;AAC9B,IAAA,MAAM,CAAC,iBAAD,EAAoB,MAApB,CAAN;AACH,GAP2D;AAS5D,EAAA,eAT4D,kCAShC,MATgC,EAS1B;AAAA,QAAhB,MAAgB,SAAhB,MAAgB;AAC9B,IAAA,MAAM,CAAC,iBAAD,EAAoB,MAApB,CAAN;AACH,GAX2D;AAa5D,EAAA,mBAb4D,sCAa5B,MAb4B,EAatB;AAAA,QAAhB,MAAgB,SAAhB,MAAgB;AAClC,IAAA,MAAM,CAAC,qBAAD,EAAwB,MAAxB,CAAN;AACH;AAf2D,CAAzD","sourcesContent":["import {ActionTree} from 'vuex'\nimport {GcodeviewerState} from '@/store/gcodeviewer/types'\nimport {RootState} from '@/store/types'\n\nexport const actions: ActionTree<GcodeviewerState, RootState> = {\n    reset({ commit }) {\n        commit('reset')\n    },\n\n    setViewerBackup({ commit }, backup) {\n        commit('setViewerBackup', backup)\n    },\n\n    setCanvasBackup({ commit }, backup) {\n        commit('setCanvasBackup', backup)\n    },\n\n    setLoadedFileBackup({ commit }, backup) {\n        commit('setLoadedFileBackup', backup)\n    }\n}"],"sourceRoot":""}]}