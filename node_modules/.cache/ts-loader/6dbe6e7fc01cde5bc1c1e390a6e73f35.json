{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopbar.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopbar.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopbar.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {validGcodeExtensions} from '@/store/variables'\nimport Component from 'vue-class-component'\nimport axios from 'axios'\nimport { formatFilesize } from '@/plugins/helpers'\nimport TheTopCornerMenu from '@/components/TheTopCornerMenu.vue'\nimport TheSettingsMenu from '@/components/TheSettingsMenu.vue'\nimport TheThrottledStates from '@/components/TheThrottledStates.vue'\nimport Panel from '@/components/ui/Panel.vue'\nimport PrinterSelector from '@/components/ui/PrinterSelector.vue'\nimport MainsailLogo from '@/components/ui/MainsailLogo.vue'\nimport {topbarHeight} from '@/store/variables'\n\ntype uploadSnackbar = {\n    status: boolean\n    filename: string\n    percent: number\n    speed: number\n    total: number\n    cancelTokenSource: any\n    lastProgress: {\n        time: number\n        loaded: number\n    }\n}\n\n@Component({\n    components: {\n        Panel,\n        TheThrottledStates,\n        TheSettingsMenu,\n        TheTopCornerMenu,\n        PrinterSelector,\n        MainsailLogo\n    }\n})\nexport default class TheTopbar extends Mixins(BaseMixin) {\n    topbarHeight = topbarHeight\n\n    showEmergencyStopDialog = false\n\n    uploadSnackbar: uploadSnackbar = {\n        status: false,\n        filename: '',\n        percent: 0,\n        speed: 0,\n        total: 0,\n        cancelTokenSource: null,\n        lastProgress: {\n            time: 0,\n            loaded: 0\n        }\n    }\n\n    formatFilesize = formatFilesize\n\n    $refs!: {\n        fileUploadAndStart: HTMLFormElement\n    }\n\n    get naviDrawer() {\n        return this.$store.state.naviDrawer\n    }\n\n    set naviDrawer(newVal) {\n        this.$store.dispatch('setNaviDrawer', newVal)\n    }\n\n    get validGcodeExtensions() {\n        return validGcodeExtensions\n    }\n\n    get currentPage() {\n        return this.$route.fullPath\n    }\n\n    get saveConfigPending() {\n        return this.$store.state.printer.configfile?.save_config_pending ?? false\n    }\n\n    get printerName():string {\n        if (this.$store.state.gui.general.printername.length)\n            return this.$store.state.gui.general.printername\n\n        return this.$store.state.printer.hostname\n    }\n\n    get boolWideNavDrawer() {\n        return this.$store.state.gui.uiSettings.boolWideNavDrawer ?? false\n    }\n\n    get countPrinters() {\n        return this.$store.getters['farm/countPrinters']\n    }\n\n    get boolHideUploadAndPrintButton() {\n        return this.$store.state.gui.uiSettings.boolHideUploadAndPrintButton ?? false\n    }\n\n    get sidebarLogo(): string {\n        return this.$store.getters['files/getSidebarLogo']\n    }\n\n    get logoColor(): string {\n        return this.$store.state.gui.uiSettings.logo\n    }\n\n    btnEmergencyStop() {\n        const confirmOnEmergencyStop = this.$store.state.gui.uiSettings.confirmOnEmergencyStop\n        if (confirmOnEmergencyStop) {\n            this.showEmergencyStopDialog = true\n        }\n        else {\n            this.emergencyStop()\n        }\n    }\n\n    emergencyStop() {\n        this.showEmergencyStopDialog = false\n        this.$socket.emit('printer.emergency_stop', {}, { loading: 'topbarEmergencyStop' })\n    }\n\n    saveConfig() {\n        this.$store.dispatch('server/addEvent', { message: 'SAVE_CONFIG', type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'SAVE_CONFIG' }, { loading: 'topbarSaveConfig' })\n    }\n\n    btnUploadAndStart() {\n        this.$refs.fileUploadAndStart.click()\n    }\n\n    async uploadAndStart() {\n        if (this.$refs.fileUploadAndStart?.files.length) {\n            this.$store.dispatch('socket/addLoading', { name: 'btnUploadAndStart' })\n            let successFiles = []\n            for (const file of this.$refs.fileUploadAndStart?.files) {\n                const result = await this.doUploadAndStart(file)\n                successFiles.push(result)\n            }\n\n            this.$store.dispatch('socket/removeLoading', { name: 'btnUploadAndStart' })\n            for(const file of successFiles) {\n                const text = this.$t('App.TopBar.UploadOfFileSuccessful', {file:file}).toString()\n                this.$toast.success(text)\n            }\n\n            this.$refs.fileUploadAndStart.value = ''\n            if (this.currentPage !== '/') await this.$router.push('/')\n        }\n    }\n\n    doUploadAndStart(file: File) {\n        const formData = new FormData()\n        const filename = file.name\n\n        this.uploadSnackbar.filename = filename\n        this.uploadSnackbar.status = true\n        this.uploadSnackbar.percent = 0\n        this.uploadSnackbar.speed = 0\n        this.uploadSnackbar.lastProgress.loaded = 0\n        this.uploadSnackbar.lastProgress.time = 0\n\n        formData.append('file', file, filename)\n        formData.append('print', 'true')\n\n        return new Promise(resolve => {\n            this.uploadSnackbar.cancelTokenSource = axios.CancelToken.source()\n            axios.post(this.apiUrl + '/server/files/upload',\n                formData, {\n                    cancelToken: this.uploadSnackbar.cancelTokenSource.token,\n                    headers: { 'Content-Type': 'multipart/form-data' },\n                    onUploadProgress: (progressEvent: ProgressEvent) => {\n                        this.uploadSnackbar.percent = (progressEvent.loaded * 100) / progressEvent.total\n                        if (this.uploadSnackbar.lastProgress.time) {\n                            const time = progressEvent.timeStamp - this.uploadSnackbar.lastProgress.time\n                            const data = progressEvent.loaded - this.uploadSnackbar.lastProgress.loaded\n\n                            if (time) this.uploadSnackbar.speed = data / (time / 1000)\n                        }\n\n                        this.uploadSnackbar.lastProgress.time = progressEvent.timeStamp\n                        this.uploadSnackbar.lastProgress.loaded = progressEvent.loaded\n                        this.uploadSnackbar.total = progressEvent.total\n                    }\n                }\n            ).then((result) => {\n                this.uploadSnackbar.status = false\n                resolve(result.data.result)\n            }).catch(() => {\n                this.uploadSnackbar.status = false\n                this.$store.dispatch('socket/removeLoading', { name: 'btnUploadAndStart' })\n                const text = this.$t('App.TopBar.CannotUploadTheFile').toString()\n                this.$toast.error(text)\n            })\n        })\n    }\n\n    cancelUpload(): void {\n        this.uploadSnackbar.cancelTokenSource.cancel()\n        this.uploadSnackbar.status = false\n    }\n}\n"],"sourceRoot":""}]}