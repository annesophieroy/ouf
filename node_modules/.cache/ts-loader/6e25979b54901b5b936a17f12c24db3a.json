{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/pages/Heightmap.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/pages/Heightmap.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/pages/Heightmap.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport ControlMixin from '@/components/mixins/control'\n\nimport { createComponent } from 'echarts-for-vue'\nimport * as echarts from 'echarts'\nimport {ECharts} from 'echarts/core'\nimport 'echarts-gl'\nimport Panel from '@/components/ui/Panel.vue'\n\ninterface HeightmapSerie {\n    type: string\n    name: string\n    data: number[][]\n    dataShape?: number[]\n    itemStyle?: {\n        opacity?: number\n        color?: number[]\n    }\n    wireframe: {\n        show: boolean\n    }\n}\n\n@Component({\n    components: {\n        Panel,\n        ECharts: createComponent({ echarts }),\n    }\n})\nexport default class PageHeightmap extends Mixins(BaseMixin, ControlMixin) {\n\n    $refs!: {\n        // eslint-disable-next-line\n        heightmap: any,\n        inputDialogRenameHeightmapName: HTMLInputElement,\n    }\n\n    private renameDialog = false\n    private removeDialogProfile = ''\n    private removeDialog = false\n    private calibrateDialog = false\n    private newName = ''\n    private oldName = ''\n\n    private heightmapScale = 0.5\n    private probedOpacity = 1\n    private meshOpacity = 1\n    private flatOpacity = 0.5\n\n    private colorAxisName = 'rgba(255,255,255,0.5)'\n    private colorAxisLabel = 'rgba(255,255,255,0.5)'\n    private colorAxisLine = 'rgba(255,255,255,0.2)'\n    private colorAxisTick = 'rgba(255,255,255,0.2)'\n    private colorSplitLine = 'rgba(255,255,255,0.2)'\n\n    private colorAxisPointer = 'rgba(255,255,255,0.8)'\n\n    private colorVisualMap = 'rgba(255,255,255,0.8)'\n    private fontSizeVisualMap = 14\n\n    get chartOptions() {\n        return {\n            tooltip: {\n                backgroundColor: 'rgba(0,0,0,0.9)',\n                borderWidth: 0,\n                textStyle: {\n                    color: '#fff',\n                    fontSize: '14px'\n                },\n                padding: 15,\n                formatter: this.tooltipFormatter\n            },\n            darkMode: true,\n            animation: false,\n            legend: {\n                show: false,\n                selected: this.selected\n            },\n            visualMap: {\n                show: true,\n                min: this.visualMapRange[0],\n                max: this.visualMapRange[1],\n                calculable: true,\n                dimension: 2,\n                inRange: {\n                    color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n                },\n                seriesIndex: this.visualMapSeriesIndex,\n                left: this.isMobile ? 10 : 30,\n                top: 20,\n                bottom: 0,\n                itemWidth: this.isMobile ? 10 : 30,\n                itemHeight: 350,\n                precision: 3,\n                textStyle: {\n                    color: this.colorVisualMap,\n                    fontSize: this.fontSizeVisualMap\n                },\n            },\n            xAxis3D: {\n                type: 'value',\n                nameTextStyle: {\n                    color: this.colorAxisName\n                },\n                min: this.rangeX[0],\n                max: this.rangeX[1],\n                minInterval: 1\n            },\n            yAxis3D: {\n                type: 'value',\n                nameTextStyle: {\n                    color: this.colorAxisName\n                },\n                min: this.rangeY[0],\n                max: this.rangeY[1],\n            },\n            zAxis3D: {\n                type: 'value',\n                min: this.heightmapScale * -1,\n                max: this.heightmapScale,\n                nameTextStyle: {\n                    color: this.colorAxisName\n                },\n                axisPointer: {\n                    label: {\n                        formatter: function(value: any) {\n                            value = parseFloat(value)\n                            return value.toFixed(2)\n                        }\n                    }\n                }\n\n            },\n            grid3D: {\n                axisLabel: {\n                    textStyle: {\n                        color: this.colorAxisLabel\n                    }\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: this.colorAxisLine\n                    }\n                },\n                axisTick: {\n                    lineStyle: {\n                        color: this.colorAxisTick\n                    }\n                },\n                splitLine: {\n                    lineStyle: {\n                        color: this.colorSplitLine\n                    }\n                },\n                axisPointer: {\n                    lineStyle: {\n                        color: this.colorAxisPointer\n                    },\n                    label: {\n                        textStyle: {\n                            color: this.colorAxisPointer\n                        }\n                    }\n                }\n            },\n            series: this.series\n        }\n    }\n\n    get chart (): ECharts | null {\n        const heightmap = this.$refs.heightmap\n        return heightmap?.inst ?? null\n    }\n\n    get profiles () {\n        return this.$store.getters['printer/getBedMeshProfiles']\n    }\n\n    get bed_mesh() {\n        return this.$store.state.printer.bed_mesh ?? null\n    }\n\n    @Watch('bed_mesh', { deep: true })\n    bed_meshChanged() {\n        this.chart?.setOption(this.chartOptions)\n    }\n\n    get showProbed(): boolean {\n        return this.$store.state.gui.view.heightmap.probed ?? true\n    }\n\n    set showProbed(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.heightmap.probed', value: newVal })\n    }\n\n    get showMesh(): boolean {\n        return this.$store.state.gui.view.heightmap.mesh ?? true\n    }\n\n    set showMesh(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.heightmap.mesh', value: newVal })\n    }\n\n    get showFlat(): boolean {\n        return this.$store.state.gui.view.heightmap.flat ?? true\n    }\n\n    set showFlat(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.heightmap.flat', value: newVal })\n    }\n\n    get wireframe(): boolean {\n        return this.$store.state.gui.view.heightmap.wireframe ?? true\n    }\n\n    set wireframe(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.heightmap.wireframe', value: newVal })\n    }\n\n    get scale(): boolean {\n        return this.$store.state.gui.view.heightmap.scale ?? true\n    }\n\n    set scale(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.heightmap.scale', value: newVal })\n    }\n\n    get scaleVisualMap(): boolean {\n        return this.$store.state.gui.view.heightmap.scaleVisualMap ?? false\n    }\n\n    set scaleVisualMap(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.heightmap.scaleVisualMap', value: newVal })\n    }\n\n    get rangeX(): number[] {\n        const axis_minimum = this.$store.state.printer.toolhead?.axis_minimum\n        const axis_maximum = this.$store.state.printer.toolhead?.axis_maximum\n\n        return [axis_minimum[0] ?? 0, axis_maximum[0] ?? 0]\n    }\n\n    get rangeY(): number[] {\n        const axis_minimum = this.$store.state.printer.toolhead?.axis_minimum ?? [0,0]\n        const axis_maximum = this.$store.state.printer.toolhead?.axis_maximum ?? [0,0]\n\n        return [axis_minimum[1] ?? 0, axis_maximum[1] ?? 0]\n    }\n\n    get heightmapLimit(): number[] {\n        let min = 0\n        let max = 0\n\n        if (this.bed_mesh) {\n            const points = []\n            if (this.showProbed) {\n                for (const row of this.bed_mesh.probed_matrix) for (const col of row) points.push(col)\n            }\n            if (this.showMesh) {\n                for (const row of this.bed_mesh.mesh_matrix) for (const col of row) points.push(col)\n            }\n\n            min = Math.min(min, ...points)\n            max = Math.max(max, ...points)\n        }\n\n        return [min, max]\n    }\n\n    get probedHeightmapLimit(): number[] {\n        let min = 0\n        let max = 0\n\n        if (this.bed_mesh) {\n            const points = []\n            for (const row of this.bed_mesh.probed_matrix) for (const col of row) points.push(col)\n\n            min = Math.min(min, ...points)\n            max = Math.max(max, ...points)\n        }\n\n        return [min, max]\n    }\n\n    get heightmapRangeLimit(): number[] {\n        const [min, max] = this.heightmapLimit\n\n        const minRange = Math.round(Math.max(Math.abs(min), Math.abs(max)) * 10) / 10\n        const maxRange = Math.max(minRange, 0.5)\n\n        return [minRange, maxRange]\n    }\n\n    get selected(): { [key: string]: boolean } {\n        return {\n            'probed': this.showProbed,\n            'mesh': this.showMesh,\n            'flat': this.showFlat,\n        }\n    }\n\n    get series(): HeightmapSerie[] {\n        const series = []\n\n        if (this.bed_mesh) {\n            series.push(this.seriesProbed)\n            series.push(this.seriesMesh)\n            series.push(this.seriesFlat)\n        }\n\n        return series\n    }\n\n    get seriesProbed(): HeightmapSerie {\n        const serie: HeightmapSerie = {\n            type: 'surface',\n            name: 'probed',\n            data: [],\n            itemStyle: {\n                opacity: this.probedOpacity\n            },\n            wireframe: {\n                show: this.wireframe\n            }\n        }\n\n        if (this.bed_mesh) {\n            const xCount = this.bed_mesh.probed_matrix[0].length\n            const yCount = this.bed_mesh.probed_matrix.length\n            const xMin = this.bed_mesh.mesh_min[0]\n            const xMax = this.bed_mesh.mesh_max[0]\n            const yMin = this.bed_mesh.mesh_min[1]\n            const yMax = this.bed_mesh.mesh_max[1]\n            const xStep = (xMax - xMin) / (xCount - 1)\n            const yStep = (yMax - yMin) / (yCount - 1)\n\n            const data: any[] = []\n\n            let yPoint = 0\n            this.bed_mesh.probed_matrix.forEach((meshRow: number[]) => {\n                let xPoint = 0\n                meshRow.forEach((value: number) => {\n                    data.push([\n                        (xMin + xStep * xPoint),\n                        (yMin + yStep * yPoint),\n                        value\n                    ])\n                    xPoint++\n                })\n                yPoint++\n            })\n\n            serie.data = data\n            serie.dataShape = [yCount, xCount]\n        }\n\n        return serie\n    }\n\n    get seriesMesh(): HeightmapSerie {\n        const serie: HeightmapSerie = {\n            type: 'surface',\n            name: 'mesh',\n            data: [],\n            itemStyle: {\n                opacity: this.meshOpacity\n            },\n            wireframe: {\n                show: this.wireframe,\n            }\n        }\n\n        if (this.bed_mesh) {\n            const xCount = this.bed_mesh.mesh_matrix[0].length\n            const yCount = this.bed_mesh.mesh_matrix.length\n            const xMin = this.bed_mesh.mesh_min[0]\n            const xMax = this.bed_mesh.mesh_max[0]\n            const yMin = this.bed_mesh.mesh_min[1]\n            const yMax = this.bed_mesh.mesh_max[1]\n            const xStep = (xMax - xMin) / (xCount - 1)\n            const yStep = (yMax - yMin) / (yCount - 1)\n\n            const data: any[] = []\n\n            let yPoint = 0\n            this.bed_mesh.mesh_matrix.forEach((meshRow: number[]) => {\n                let xPoint = 0\n                meshRow.forEach((value: number) => {\n                    data.push([\n                        (xMin + xStep * xPoint),\n                        (yMin + yStep * yPoint),\n                        value\n                    ])\n                    xPoint++\n                })\n                yPoint++\n            })\n\n            serie.data = data\n            serie.dataShape = [yCount, xCount]\n        }\n\n        return serie\n    }\n\n    get seriesFlat(): HeightmapSerie {\n        const serie: HeightmapSerie = {\n            type: 'surface',\n            name: 'flat',\n            data: [],\n            itemStyle: {\n                color: [1, 1, 1, 1],\n                opacity: this.flatOpacity\n            },\n            wireframe: {\n                show: this.wireframe\n            }\n        }\n\n        const config = this.$store.state.printer.configfile?.settings?.bed_mesh\n        if (config) {\n            let probe_count = [1,1]\n            if (config.probe_count && typeof config.probe_count === 'string') {\n                probe_count = config.probe_count.split(',')\n            } else if (config.probe_count) {\n                probe_count = config.probe_count\n            } else if (config.round_probe_count) {\n                probe_count = [config.round_probe_count, config.round_probe_count]\n            }\n\n            let mesh_min = []\n            let mesh_max = []\n\n            if (config.mesh_min && config.mesh_max) {\n                // is no delta\n                mesh_min = (typeof config.mesh_min === 'string') ? config.mesh_min.split(',') : config.mesh_min\n                mesh_max = (typeof config.mesh_max === 'string') ? config.mesh_max.split(',') : config.mesh_max\n            } else {\n                // delta min/max\n                mesh_min = [\n                    config.mesh_radius * -1,\n                    config.mesh_radius * -1\n                ]\n\n                mesh_max = [\n                    config.mesh_radius,\n                    config.mesh_radius\n                ]\n            }\n\n            const xCount = probe_count[0]\n            const yCount = probe_count[1]\n            const xMin = parseFloat(mesh_min[0])\n            const xMax = parseFloat(mesh_max[0])\n            const yMin = parseFloat(mesh_min[1])\n            const yMax = parseFloat(mesh_max[1])\n            const xStep = (xMax - xMin) / (xCount - 1)\n            const yStep = (yMax - yMin) / (yCount - 1)\n\n            const data: number[][] = []\n\n            for (let y = 0; y < yCount; y++) {\n                for (let x = 0; x < xCount; x++) {\n                    data.push([\n                        xMin + xStep * x,\n                        yMin + yStep * y,\n                        0\n                    ])\n                }\n            }\n\n            serie.data = data\n            serie.dataShape = [yCount, xCount]\n        }\n\n        return serie\n    }\n\n    get visualMapRange(): number[] {\n        if (!this.scaleVisualMap) return [-0.1, 0.1]\n\n        return this.heightmapLimit\n    }\n\n    get visualMapSeriesIndex(): number[] {\n        const output = []\n\n        if (this.showProbed) output.push(0)\n        else if (this.showMesh) output.push(1)\n\n        return output\n    }\n\n    get bedMeshMaxPoint() {\n        if (this.bed_mesh.profile_name === '') return { row: 0, col: 0, positionX: 0, positionY: 0, value: 0 }\n\n        const [ , max] = this.probedHeightmapLimit\n\n        let row = 0\n        let col = 0\n        this.bed_mesh.probed_matrix.forEach((rowPoints: number[], index: number) => {\n            if (Math.max(...rowPoints) === max) {\n                row = index + 1\n                col = rowPoints.findIndex((point: number) => point === max) + 1\n            }\n        })\n\n        const positionX = Math.round((this.bed_mesh.mesh_min[0] + (this.bed_mesh.mesh_max[0] - this.bed_mesh.mesh_min[0]) / this.bed_mesh.probed_matrix[0].length * (col - 1)) * 10) / 10\n        const positionY = Math.round((this.bed_mesh.mesh_min[1] + (this.bed_mesh.mesh_max[1] - this.bed_mesh.mesh_min[1]) / this.bed_mesh.probed_matrix.length * (row - 1)) * 10) / 10\n\n        return {\n            row,\n            col,\n            positionX,\n            positionY,\n            value: Math.round(max * 1000) / 1000\n        }\n    }\n\n    get bedMeshMinPoint() {\n        if (this.bed_mesh.profile_name === '') return { row: 0, col: 0, positionX: 0, positionY: 0, value: 0 }\n\n        const [min, ] = this.probedHeightmapLimit\n\n        let row = 0\n        let col = 0\n        this.bed_mesh.probed_matrix.forEach((rowPoints: number[], index: number) => {\n            if (Math.min(...rowPoints) === min) {\n                row = index + 1\n                col = rowPoints.findIndex((point: number) => point === min) + 1\n            }\n        })\n\n        const positionX = Math.round((this.bed_mesh.mesh_min[0] + (this.bed_mesh.mesh_max[0] - this.bed_mesh.mesh_min[0]) / this.bed_mesh.probed_matrix[0].length * (col - 1)) * 10) / 10\n        const positionY = Math.round((this.bed_mesh.mesh_min[1] + (this.bed_mesh.mesh_max[1] - this.bed_mesh.mesh_min[1]) / this.bed_mesh.probed_matrix.length * (row - 1)) * 10) / 10\n\n        return {\n            row,\n            col,\n            positionX,\n            positionY,\n            value: Math.round(min * 1000) / 1000\n        }\n    }\n\n    get meshLoaded() {\n        if(this.bed_mesh !== null) {\n            return this.bed_mesh.profile_name !== ''\n        } else {\n            return false\n        }\n    }\n\n    tooltipFormatter(data: any): string {\n        const outputArray: string[] = []\n        outputArray.push('<b>'+data.seriesName+'</b>')\n\n        Object.keys(data.encode).sort().forEach((axisName: string) => {\n            outputArray.push('<b>' + axisName.toUpperCase() + '</b>: '+data.data[data.encode[axisName][0]].toFixed(axisName === 'z' ? 3 : 1) + ' mm')\n        })\n\n        return outputArray.join('<br />')\n    }\n\n    loadProfile(name: string): void {\n        this.$store.dispatch('server/addEvent', { message: 'BED_MESH_PROFILE LOAD='+name, type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'BED_MESH_PROFILE LOAD='+name }, { loading: 'bedMeshLoad_'+name })\n    }\n\n    openRenameProfile(): void {\n        this.newName = this.bed_mesh?.profile_name ?? ''\n        this.oldName = this.bed_mesh.profile_name\n        this.renameDialog = true\n\n        setTimeout(() => {\n            this.$refs.inputDialogRenameHeightmapName?.focus()\n        }, 200)\n    }\n\n    renameProfile(): void {\n        this.renameDialog = false\n\n        this.$store.dispatch('server/addEvent', { message: 'BED_MESH_PROFILE SAVE='+this.newName, type: 'command' })\n        this.$store.dispatch('server/addEvent', { message: 'BED_MESH_PROFILE REMOVE='+this.oldName, type: 'command' })\n\n        this.$socket.emit('printer.gcode.script', { script: 'BED_MESH_PROFILE SAVE='+this.newName }, { loading: 'bedMeshRename' })\n        this.$socket.emit('printer.gcode.script', { script: 'BED_MESH_PROFILE REMOVE='+this.oldName }, { loading: 'bedMeshRename' })\n\n        this.newName = ''\n        this.oldName = ''\n    }\n\n    openRemoveProfile(name: string): void {\n        this.removeDialogProfile = name\n        this.removeDialog = true\n    }\n\n    removeProfile(): void {\n        this.removeDialog = false\n        this.$store.dispatch('server/addEvent', { message: 'BED_MESH_PROFILE REMOVE='+this.removeDialogProfile, type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'BED_MESH_PROFILE REMOVE='+this.removeDialogProfile }, {\n            action: 'printer/removeBedMeshProfile',\n            actionPayload: {name: this.removeDialogProfile},\n            loading: 'bedMeshRename_'+this.removeDialogProfile\n        })\n        this.removeDialogProfile = ''\n    }\n\n    homePrinter(): void {\n        this.$store.dispatch('server/addEvent', { message: 'G28', type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'G28' }, { loading: 'homeAll' })\n    }\n\n    clearBedMesh(): void {\n        this.$store.dispatch('server/addEvent', { message: 'BED_MESH_CLEAR', type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'BED_MESH_CLEAR' }, { loading: 'bedMeshClear' })\n    }\n\n    calibrateMesh(): void {\n        this.calibrateDialog = false\n        this.$store.dispatch('server/addEvent', { message: 'BED_MESH_CALIBRATE', type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'BED_MESH_CALIBRATE' }, { loading: 'bedMeshCalibrate' })\n    }\n\n    beforeDestroy(): void {\n        if (typeof window === 'undefined') return\n        if (this.chart) this.chart.dispose()\n    }\n}\n"],"sourceRoot":""}]}