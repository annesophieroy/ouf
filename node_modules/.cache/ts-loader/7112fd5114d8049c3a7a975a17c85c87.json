{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/StatusPanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/StatusPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/StatusPanel.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgRA,OAAO,SAAP,MAAsB,qBAAtB;AACA,SAAS,MAAT,EAAiB,KAAjB,QAA8B,wBAA9B;AACA,SAAS,iBAAT,EAA4B,iBAA5B,EAA+C,eAA/C,QAAsE,mBAAtE;AACA,OAAO,SAAP,MAAsB,0BAAtB;AACA,OAAO,iBAAP,MAA8B,2CAA9B;AACA,OAAO,gBAAP,MAA6B,0CAA7B;AACA,OAAO,mBAAP,MAAgC,6CAAhC;AACA,OAAO,gBAAP,MAA6B,0CAA7B;AACA,OAAO,oBAAP,MAAiC,8CAAjC;AACA,OAAO,wBAAP,MAAqC,kDAArC;AACA,OAAO,KAAP,MAAkB,2BAAlB;;AAaA,IAAqB,WAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,8DACc,CADd;;AAAA,sEAEsB,KAFtB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,SAQI,eAAoB;AAAA;;AAChB,gEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,WAAjC,2DAAO,uBAAuC,QAA9C,yEAA0D,EAA1D;AACH;AAVL;AAAA;AAAA,SAYI,eAAmB;AAAA;;AACf,iEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,cAAjC,2DAAO,uBAA0C,OAAjD,2EAA4D,EAA5D;AACH;AAdL;AAAA;AAAA,SAgBI,eAAuB;AAAA;;AACnB,iEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,WAAjC,2DAAO,uBAAuC,OAA9C,2EAAyD,EAAzD;AACH;AAlBL;AAAA;AAAA,SAoBI,eAAa;AACT,aAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,sBAApB,CAAP;AACH;AAtBL;AAAA;AAAA,SAwBI,eAAe;AACX,aAAO,KAAK,SAAL,CAAe,WAAf,GAA6B,KAAK,EAAL,CAAQ,6BAAR,CAA7B,GAAsE,KAAK,EAAL,CAAQ,6BAAR,CAA7E;AACH;AA1BL;AAAA;AAAA,SA4BI,eAAiB;AAAA;;AACb,iEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,WAAjC,2DAAO,uBAAuC,aAA9C,2EAA+D,CAA/D;AACH;AA9BL;AAAA;AAAA,SAgCI,eAAgB;AAAA;;AACZ,uCAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,YAAjC,2EAAiD,EAAjD;AACH;AAlCL;AAAA;AAAA,SAoCI,eAAc;AAAA;;AACV,mEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,WAAjC,4DAAO,wBAAuC,cAA9C,6EAAgE,CAAhE;AACH;AAtCL;AAAA;AAAA,SAwCI,eAAoB;AAAA;;AAChB,mEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,WAAjC,4DAAO,wBAAuC,cAA9C,6EAAgE,CAAhE;AACH;AA1CL;AAAA;AAAA,SA4CI,eAAgB;AACZ,aAAO,IAAI,CAAC,KAAL,CAAW,KAAK,MAAL,CAAY,OAAZ,CAAoB,yBAApB,IAAiD,GAA5D,CAAP;AACH;AA9CL;AAAA;AAAA,SAgDI,eAAsB;AAClB,UAAI,KAAK,aAAL,KAAuB,EAA3B,EAA+B;AAAA;;AAC3B,YAAM,kBAAkB,8BAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,YAA7B,4DAAG,wBAAwC,KAAnE;AAEA,YACI,KAAK,aAAL,KAAuB,SAAvB,IACA,kBAAkB,KAAK,UAF3B,EAGE,OAAO,MAAP;;AAEF,YAAI,KAAK,aAAL,KAAuB,EAAvB,IAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAAgC,KAAK,aAArC,CAAjC,EAAsF;AAClF,iBAAO,KAAK,YAAL,GAAkB,IAAlB,GAAuB,KAAK,aAAL,CAAmB,MAAnB,CAA0B,CAA1B,EAA6B,WAA7B,EAAvB,GAAoE,KAAK,aAAL,CAAmB,KAAnB,CAAyB,CAAzB,CAA3E;AACH;;AAED,eAAO,KAAK,aAAL,CAAmB,MAAnB,CAA0B,CAA1B,EAA6B,WAA7B,KAA6C,KAAK,aAAL,CAAmB,KAAnB,CAAyB,CAAzB,CAApD;AACH;;AAED,aAAO,KAAK,EAAL,CAAQ,4BAAR,CAAP;AACH;AAjEL;AAAA;AAAA,SAmEI,eAAkB;AACd,aAAO,CACH;AACI,QAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,+BAAR,CADV;AAEI,QAAA,KAAK,EAAE,SAFX;AAGI,QAAA,IAAI,EAAE,WAHV;AAII,QAAA,WAAW,EAAE,kBAJjB;AAKI,QAAA,MAAM,EAAE,CAAC,UAAD,CALZ;AAMI,QAAA,KAAK,EAAE,KAAK;AANhB,OADG,EAQA;AACC,QAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,gCAAR,CADP;AAEC,QAAA,KAAK,EAAE,SAFR;AAGC,QAAA,IAAI,EAAE,UAHP;AAIC,QAAA,WAAW,EAAE,mBAJd;AAKC,QAAA,MAAM,EAAE,CAAC,QAAD,CALT;AAMC,QAAA,KAAK,EAAE,KAAK;AANb,OARA,EAeA;AACC,QAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,gCAAR,CADP;AAEC,QAAA,KAAK,EAAE,OAFR;AAGC,QAAA,IAAI,EAAE,UAHP;AAIC,QAAA,WAAW,EAAE,mBAJd;AAKC,QAAA,MAAM,EAAE,KAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAAsB,UAAtB,CAAiC,kBAAjC,GAAsD,CAAC,QAAD,EAAW,UAAX,CAAtD,GAA+E,CAAC,QAAD,CALxF;AAMC,QAAA,KAAK,EAAE,KAAK;AANb,OAfA,EAsBA;AACC,QAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,gDAAR,CADP;AAEC,QAAA,KAAK,EAAE,SAFR;AAGC,QAAA,IAAI,EAAE,sBAHP;AAIC,QAAA,WAAW,EAAE,EAJd;AAKC,QAAA,MAAM,EAAE,KAAK,gBAAL,CAAsB,MAAtB,GAA+B,CAAC,QAAD,EAAW,UAAX,CAA/B,GAAwD,EALjE;AAMC,QAAA,KAAK,EAAE,KAAK;AANb,OAtBA,EA6BA;AACC,QAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,oCAAR,CADP;AAEC,QAAA,KAAK,EAAE,SAFR;AAGC,QAAA,IAAI,EAAE,WAHP;AAIC,QAAA,WAAW,EAAE,kBAJd;AAKC,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,WAAtB,CALT;AAMC,QAAA,KAAK,EAAE,KAAK;AANb,OA7BA,EAoCA;AACC,QAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,+BAAR,CADP;AAEC,QAAA,KAAK,EAAE,SAFR;AAGC,QAAA,IAAI,EAAE,aAHP;AAIC,QAAA,WAAW,EAAE,oBAJd;AAKC,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,WAAtB,CALT;AAMC,QAAA,KAAK,EAAE,KAAK;AANb,OApCA,CAAP;AA6CH;AAjHL;AAAA;AAAA,SAmHI,eAA0B;AAAA;;AACtB,aAAO,KAAK,cAAL,CAAoB,MAApB,CAA2B,UAAC,MAAD,EAAW;AACzC,eAAO,MAAM,CAAC,MAAP,CAAc,QAAd,CAAuB,MAAI,CAAC,aAA5B,CAAP;AACH,OAFM,CAAP;AAGH;AAvHL;AAAA;AAAA,SAyHI,eAAiB;AAAA;;AACb,0BAAO,IAAI,CAAC,GAAL,4BAAS,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,aAAnC,uFAAS,wBAAyC,aAAlD,4DAAS,wBAAwD,OAAxD,CAAgE,CAAhE,CAAT,CAAP,iDAAuF,IAAvF;AACH;AA3HL;AAAA;AAAA,SA6HI,eAA0B;AAAA;;AACtB,UAAM,sBAAsB,yDAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,aAA7B,4DAAG,wBAAyC,sBAA5C,6EAAsE,IAAlG;AACA,UAAI,sBAAsB,KAAK,IAA/B,EAAqC,OAAO,IAAP;AAErC,aAAO,sBAAsB,GAAG,CAAzB,GAA6B,sBAA7B,GAAsD,CAA7D;AACH;AAlIL;AAAA;AAAA,SAoII,eAAa;AACT,UAAI,KAAK,sBAAL,KAAgC,IAApC,EAA0C,OAAO,IAAP;AAE1C,UAAM,oBAAoB,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,iBAAL,GAAyB,CAAlC,EAAqC,CAArC,IAA0C,IAAI,CAAC,EAA5E;AACA,UAAM,WAAW,GAAG,oBAAoB,GAAG,KAAK,sBAAhD;AAEA,aAAO,WAAP,aAAO,WAAP,uBAAO,WAAW,CAAE,OAAb,CAAqB,CAArB,CAAP;AACH;AA3IL;AAAA;AAAA,SA6II,eAAmB;AAAA;;AACf,UAAM,eAAe,yDAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,UAA7B,4DAAG,wBAAsC,KAAzC,6EAAkD,CAAvE;AACA,UAAM,YAAY,yDAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,UAA7B,4DAAG,wBAAsC,YAAzC,6EAAyD,CAA3E;AACA,UAAM,YAAY,yDAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,QAA7B,4DAAG,wBAAoC,YAAvC,6EAAuD,CAAzE;AAEA,UAAM,KAAK,GAAG,eAAe,GAAG,EAAlB,GAAuB,YAArC;AACA,UAAI,KAAK,GAAG,YAAZ,EAA0B,OAAO,YAAP;AAE1B,aAAO,KAAK,CAAC,OAAN,CAAc,CAAd,CAAP;AACH;AAtJL;AAAA;AAAA,SAwJI,eAAc;AACV,UACI,wBAAwB,KAAK,YAA7B,IACA,kBAAkB,KAAK,YADvB,IAEA,mBAAmB,KAAK,YAH5B,EAIE;AACE,YAAM,GAAG,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,KAAK,YAAL,CAAkB,aAAlB,GAAkC,KAAK,YAAL,CAAkB,kBAArD,IAA2E,KAAK,YAAL,CAAkB,YAA7F,GAA4G,CAAtH,CAAZ;AACA,eAAO,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,CAAvB;AACH;;AAED,aAAO,CAAP;AACH;AAnKL;AAAA;AAAA,SAqKI,eAAiB;AACb,UACI,KAAK,UAAL,GAAkB,CAAlB,IACA,wBAAwB,KAAK,YAD7B,IAEA,kBAAkB,KAAK,YAH3B,EAIE;AACE,YAAI,aAAa,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,KAAK,SAAL,CAAe,OAAf,GAAyB,KAAK,YAAL,CAAkB,kBAA5C,IAAkE,KAAK,YAAL,CAAkB,YAApF,GAAmG,CAA7G,CAApB;AACA,QAAA,aAAa,GAAI,aAAa,IAAI,KAAK,UAAvB,GAAqC,aAArC,GAAqD,KAAK,UAA1E;AAEA,eAAO,aAAa,GAAG,CAAhB,GAAoB,aAApB,GAAoC,CAA3C;AACH;;AAED,aAAO,CAAP;AACH;AAlLL;AAAA;AAAA,SAoLI,eAAuB;AACnB,aAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,8BAApB,CAAP;AACH;AAtLL;AAAA;AAAA,SAwLI,eAA2B;AACvB,aAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,kCAApB,CAAP;AACH;AA1LL;AAAA;AAAA,SA4LI,eAAyB;AACrB,aAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,gCAApB,CAAP;AACH;AA9LL;AAAA;AAAA,SAgMI,eAAsB;AAClB,aAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,6BAApB,CAAP;AACH;AAlML;AAAA;AAAA,SAoMI,eAAO;AACH,aAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,6BAApB,CAAP;AACH;AAtML;AAAA;AAAA,SAwMI,eAAqB;AAAA;;AACjB,mEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,UAAjC,uFAAO,wBAAsC,QAA7C,uFAAO,wBAAgD,QAAvD,4DAAO,wBAA0D,iBAAjE,6EAAsF,IAAtF;AACH;AA1ML;AAAA;AAAA,SA4MI,eAAkB;AACd,UACI,gBAAgB,KAAK,YAArB,IACA,KAAK,YAAL,CAAkB,UAAlB,CAA6B,MAFjC,EAGE;AACE,YAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,UAAlB,CAA6B,IAA7B,CAAkC,UAAC,KAAD;AAAA,iBAChD,KAAK,CAAC,KAAN,IAAe,iBAAf,IAAoC,KAAK,CAAC,KAAN,IAAe,iBAAnD,IACA,KAAK,CAAC,MAAN,IAAgB,iBADhB,IACqC,KAAK,CAAC,MAAN,IAAgB,iBAFL;AAAA,SAAlC,CAAlB;;AAKA,YAAI,SAAS,IAAI,mBAAmB,SAApC,EAA+C;AAC3C,cAAI,YAAY,GAAG,EAAnB;;AACA,cAAI,KAAK,YAAL,CAAkB,QAAlB,CAA2B,WAA3B,CAAuC,GAAvC,MAAgD,CAAC,CAArD,EAAwD;AACpD,YAAA,YAAY,GAAG,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAA3B,CAAkC,CAAlC,EAAqC,KAAK,YAAL,CAAkB,QAAlB,CAA2B,WAA3B,CAAuC,GAAvC,IAA4C,CAAjF,CAAf;AACH;;AAED,cAAI,SAAS,IAAI,mBAAmB,SAApC,EAA+C;AAC3C,6BAAU,KAAK,MAAf,kCAA6C,SAAS,CAAC,YAAY,GAAC,SAAS,CAAC,aAAxB,CAAtD,wBAA0G,KAAK,YAAL,CAAkB,QAA5H;AACH;AACJ;AACJ;;AAED,aAAO,EAAP;AACH;AAnOL;AAAA;AAAA,SAqOI,eAAgB;AACZ,UACI,gBAAgB,KAAK,YAArB,IACA,KAAK,YAAL,CAAkB,UAAlB,CAA6B,MAFjC,EAGE;AACE,YAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,UAAlB,CAA6B,IAA7B,CAAkC,UAAC,KAAD;AAAA,iBAAgB,KAAK,CAAC,KAAN,IAAe,eAA/B;AAAA,SAAlC,CAAlB;;AAEA,YAAI,SAAS,IAAI,mBAAmB,SAApC,EAA+C;AAC3C,cAAI,YAAY,GAAG,EAAnB;;AACA,cAAI,KAAK,YAAL,CAAkB,QAAlB,CAA2B,WAA3B,CAAuC,GAAvC,MAAgD,CAAC,CAArD,EAAwD;AACpD,YAAA,YAAY,GAAG,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAA3B,CAAkC,CAAlC,EAAqC,KAAK,YAAL,CAAkB,QAAlB,CAA2B,WAA3B,CAAuC,GAAvC,IAA4C,CAAjF,CAAf;AACH;;AAED,cAAI,SAAS,IAAI,mBAAmB,SAApC,EAA+C;AAC3C,6BAAU,KAAK,MAAf,kCAA6C,SAAS,CAAC,YAAY,GAAC,SAAS,CAAC,aAAxB,CAAtD,wBAA0G,KAAK,YAAL,CAAkB,QAA5H;AACH;AACJ;AACJ;;AAED,aAAO,EAAP;AACH;AAzPL;AAAA;AAAA,SA2PI,eAAsB;AAClB,UACI,gBAAgB,KAAK,YAArB,IACA,KAAK,YAAL,CAAkB,UAAlB,CAA6B,MAFjC,EAGE;AACE,YAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,UAAlB,CAA6B,IAA7B,CAAkC,UAAC,KAAD;AAAA,iBAAgB,KAAK,CAAC,KAAN,IAAe,eAA/B;AAAA,SAAlC,CAAlB;;AAEA,YAAI,SAAS,IAAI,YAAY,SAA7B,EAAwC;AACpC,iBAAO,SAAS,CAAC,MAAjB;AACH;AACJ;;AAED,aAAO,GAAP;AACH;AAxQL;AAAA;AAAA,SA0QI,eAAqB;AACjB,UACI,gBAAgB,KAAK,YAArB,IACA,KAAK,YAAL,CAAkB,UAAlB,CAA6B,MAFjC,EAGE;AACE,YAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,UAAlB,CAA6B,IAA7B,CAAkC,UAAC,KAAD;AAAA,iBAAgB,KAAK,CAAC,KAAN,IAAe,eAA/B;AAAA,SAAlC,CAAlB;;AAEA,YAAI,SAAS,IAAI,WAAW,SAA5B,EAAuC;AACnC,iBAAO,SAAS,CAAC,KAAjB;AACH;AACJ;;AAED,aAAO,GAAP;AACH;AAvRL;AAAA;AAAA,SAyRI,eAAoB;AAAA;;AAChB,UAAM,OAAO,4BAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAAsB,UAAtB,CAAiC,gBAApC,yEAAwD,IAArE;AAEA,aAAO,KAAK,gBAAL,IAAyB,OAAzB,IAAoC,KAAK,YAAhD;AACH;AA7RL;AAAA;AAAA,SA+RI,eAAoB;AAAA;;AAChB,mEAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,cAAjC,4DAAO,wBAA0C,OAAjD,6EAA4D,EAA5D;AACH;AAjSL;AAAA;AAAA,WAmSI,0BAAiB,MAAjB,EAAgC;AAC5B,WAAK,eAAL,GAAuB,MAAvB;AACH;AArSL;AAAA;AAAA,WAuSI,uBAAW;AACP,WAAK,OAAL,CAAa,IAAb,CAAkB,qBAAlB,EAAyC,EAAzC,EAA8C;AAAE,QAAA,OAAO,EAAE;AAAX,OAA9C;AACH;AAzSL;AAAA;AAAA,WA2SI,wBAAY;AACR,WAAK,OAAL,CAAa,IAAb,CAAkB,sBAAlB,EAA0C,EAA1C,EAA+C;AAAE,QAAA,OAAO,EAAE;AAAX,OAA/C;AACH;AA7SL;AAAA;AAAA,WA+SI,4BAAgB;AACZ,WAAK,eAAL,GAAuB,IAAvB;AACH;AAjTL;AAAA;AAAA,WAmTI,wBAAY;AACR,WAAK,OAAL,CAAa,IAAb,CAAkB,sBAAlB,EAA0C,EAA1C,EAA+C;AAAE,QAAA,OAAO,EAAE;AAAX,OAA/C;AACH;AArTL;AAAA;AAAA,WAuTI,uBAAW;AACP,WAAK,OAAL,CAAa,IAAb,CAAkB,sBAAlB,EAA0C;AAAC,QAAA,MAAM,EAAE;AAAT,OAA1C,EAAyE;AAAE,QAAA,OAAO,EAAE;AAAX,OAAzE;AACH;AAzTL;AAAA;AAAA,WA2TI,yBAAa;AACT,WAAK,OAAL,CAAa,IAAb,CAAkB,qBAAlB,EAAyC;AAAE,QAAA,QAAQ,EAAE,KAAK;AAAjB,OAAzC,EAA8E;AAAE,QAAA,OAAO,EAAE;AAAX,OAA9E;AACH;AA7TL;AAAA;AAAA,WA+TI,+BAAmB;AACf,WAAK,OAAL,CAAa,IAAb,CAAkB,sBAAlB,EAA0C;AAAC,QAAA,MAAM,EAAE;AAAT,OAA1C;AACH;AAjUL;AAAA;AAAA,WAmUI,oBAAW,OAAX,EAA0B;AACtB,UAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,OAAO,GAAG,IAArB,CAAR;AACA,MAAA,OAAO,IAAI,IAAX;AACA,UAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,KAAL,CAAW,OAAO,GAAG,EAArB,CAAP,EAAiC,KAAjC,CAAuC,CAAC,CAAxC,CAAR;AACA,UAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,EAAX,EAAe,OAAf,CAAuB,CAAvB,CAAP,EAAkC,KAAlC,CAAwC,CAAC,CAAzC,CAAR;AAEA,aAAO,CAAC,GAAC,GAAF,GAAM,CAAN,GAAQ,GAAR,GAAY,CAAnB;AACH;AA1UL;AAAA;AAAA,WA4UI,wBAAe,IAAf,EAA2B;AACvB,UAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,IAAT,CAAb;AACA,UAAM,CAAC,GAAG,IAAI,CAAC,QAAL,MAAmB,EAAnB,GAAwB,IAAI,CAAC,QAAL,EAAxB,GAA0C,MAAI,IAAI,CAAC,QAAL,EAAxD;AACA,UAAM,CAAC,GAAG,IAAI,CAAC,UAAL,MAAqB,EAArB,GAA0B,IAAI,CAAC,UAAL,EAA1B,GAA8C,MAAI,IAAI,CAAC,UAAL,EAA5D;AAEA,UAAM,IAAI,GAAG,IAAI,GAAG,IAAI,IAAJ,GAAW,OAAX,EAApB;AACA,aAAO,CAAC,GAAC,GAAF,GAAM,CAAN,IAAU,IAAI,GAAG,KAAG,EAAH,GAAM,EAAN,GAAS,IAAjB,GAAyB,MAAI,IAAI,CAAC,KAAL,CAAW,IAAI,IAAI,KAAG,EAAH,GAAM,EAAN,GAAS,IAAb,CAAf,CAA7B,GAAkE,EAA3E,CAAP;AACH;AAnVL;AAAA;AAAA,WAsVI,0BAAiB,MAAjB,EAA+B;AAC3B,UAAI,MAAM,IAAI,KAAK,OAAL,GAAe,MAA7B,EAAqC,KAAK,OAAL,GAAe,MAAf;AACxC;AAxVL;AAAA;AAAA,WA0VI,6BAAiB;AACb,UAAI,KAAK,KAAL,CAAW,YAAf,EAA6B;AACzB,YAAM,WAAW,GAAG,KAAK,KAAL,CAAW,YAAX,CAAwB,GAAxB,CAA4B,WAAhD;AACA,YAAM,cAAc,GAAG,KAAK,iBAA5B;AACA,YAAM,MAAM,GAAG,WAAW,GAAG,cAA7B;AAEA,aAAK,KAAL,CAAW,YAAX,CAAwB,GAAxB,CAA4B,KAA5B,CAAkC,MAAlC,GAA2C,CAAC,KAAK,kBAAL,GAA0B,MAA3B,EAAmC,OAAnC,KAA6C,IAAxF;AACH;AACJ;AAlWL;AAAA;AAAA,WAoWI,4BAAgB;AACZ,UAAI,KAAK,KAAL,CAAW,YAAf,EAA6B;AACzB,aAAK,KAAL,CAAW,YAAX,CAAwB,GAAxB,CAA4B,KAA5B,CAAkC,MAAlC,GAA2C,OAA3C;AACH;AACJ;AAxWL;AAAA;AAAA,WA0WI,oBAAQ;AAAA;;AACJ,UAAM,SAAS,GAAI,QAAQ,CAAC,aAAT,+BAA2B,KAAK,KAAL,CAAW,YAAtC,0DAA2B,sBAAyB,GAApD,CAAnB;AACA,UAAI,SAAJ,EAAe,KAAK,iBAAL;AAClB;AA7WL;AAAA;AAAA,WA+WI,mBAAO;AACH,MAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,QAAvC;AACH;AAjXL;AAAA;AAAA,WAmXI,qBAAS;AACL,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,QAA1C;AACH;AArXL;;AAAA;AAAA,EAAyC,MAAM,CAAC,SAAD,CAA/C,CAAA;;AAsVI,UAAA,CAAA,CADC,KAAK,CAAC,WAAD,CACN,CAAA,E,qBAAA,E,kBAAA,EAEC,IAFD,CAAA;;AAtViB,WAAW,GAAA,UAAA,CAAA,CAX/B,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AACR,IAAA,iBAAiB,EAAjB,iBADQ;AAER,IAAA,oBAAoB,EAApB,oBAFQ;AAGR,IAAA,gBAAgB,EAAhB,gBAHQ;AAIR,IAAA,gBAAgB,EAAhB,gBAJQ;AAKR,IAAA,mBAAmB,EAAnB,mBALQ;AAMR,IAAA,KAAK,EAAL,KANQ;AAOR,IAAA,wBAAwB,EAAxB;AAPQ;AADL,CAAD,CAWsB,CAAA,EAAX,WAAW,CAAX;eAAA,W","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Component from 'vue-class-component'\nimport { Mixins, Watch } from 'vue-property-decorator'\nimport { thumbnailSmallMin, thumbnailSmallMax, thumbnailBigMin } from '@/store/variables'\nimport BaseMixin from '@/components/mixins/base'\nimport DependenciesPanel from '@/components/panels/DependenciesPanel.vue'\nimport MinSettingsPanel from '@/components/panels/MinSettingsPanel.vue'\nimport MoonrakerStatePanel from '@/components/panels/MoonrakerStatePanel.vue'\nimport KlippyStatePanel from '@/components/panels/KlippyStatePanel.vue'\nimport KlipperWarningsPanel from '@/components/panels/KlipperWarningsPanel.vue'\nimport StatusPanelExcludeObject from '@/components/panels/StatusPanelExcludeObject.vue'\nimport Panel from '@/components/ui/Panel.vue'\n\n@Component({\n    components: {\n        DependenciesPanel,\n        KlipperWarningsPanel,\n        KlippyStatePanel,\n        MinSettingsPanel,\n        MoonrakerStatePanel,\n        Panel,\n        StatusPanelExcludeObject,\n    }\n})\nexport default class StatusPanel extends Mixins(BaseMixin) {\n    maxFlow = 0\n    boolShowObjects = false\n\n    $refs!: {\n        bigThumbnail: any\n    }\n\n    get current_filename() {\n        return this.$store.state.printer.print_stats?.filename ?? ''\n    }\n\n    get display_message() {\n        return this.$store.state.printer.display_status?.message ?? ''\n    }\n\n    get print_stats_message() {\n        return this.$store.state.printer.print_stats?.message ?? ''\n    }\n\n    get positions() {\n        return this.$store.getters['printer/getPositions']\n    }\n\n    get coordinates() {\n        return this.positions.coordinates ? this.$t('Panels.StatusPanel.Absolute') : this.$t('Panels.StatusPanel.Relative')\n    }\n\n    get filament_used() {\n        return this.$store.state.printer.print_stats?.filament_used ?? 0\n    }\n\n    get current_file() {\n        return this.$store.state.printer.current_file ?? {}\n    }\n\n    get print_time() {\n        return this.$store.state.printer.print_stats?.print_duration ?? 0\n    }\n\n    get print_time_total() {\n        return this.$store.state.printer.print_stats?.total_duration ?? 0\n    }\n\n    get printPercent() {\n        return Math.round(this.$store.getters['printer/getPrintPercent'] * 100)\n    }\n\n    get printerStateOutput() {\n        if (this.printer_state !== '') {\n            const idle_timeout_state = this.$store.state.printer.idle_timeout?.state\n\n            if (\n                this.printer_state === 'standby' &&\n                idle_timeout_state === 'Printing'\n            ) return 'Busy'\n\n            if (this.printer_state !== '' && ['paused', 'printing'].includes(this.printer_state)) {\n                return this.printPercent+'% '+this.printer_state.charAt(0).toUpperCase() + this.printer_state.slice(1)\n            }\n\n            return this.printer_state.charAt(0).toUpperCase() + this.printer_state.slice(1)\n        }\n\n        return this.$t('Panels.StatusPanel.Unknown')\n    }\n\n    get toolbarButtons() {\n        return [\n            {\n                text: this.$t('Panels.StatusPanel.PausePrint'),\n                color: 'warning',\n                icon: 'mdi-pause',\n                loadingName: 'statusPrintPause',\n                status: ['printing'],\n                click: this.btnPauseJob\n            }, {\n                text: this.$t('Panels.StatusPanel.ResumePrint'),\n                color: 'success',\n                icon: 'mdi-play',\n                loadingName: 'statusPrintResume',\n                status: ['paused'],\n                click: this.btnResumeJob\n            }, {\n                text: this.$t('Panels.StatusPanel.CancelPrint'),\n                color: 'error',\n                icon: 'mdi-stop',\n                loadingName: 'statusPrintCancel',\n                status: this.$store.state.gui.uiSettings.displayCancelPrint ? ['paused', 'printing'] : ['paused'],\n                click: this.btnCancelJob\n            }, {\n                text: this.$t('Panels.StatusPanel.ExcludeObject.ExcludeObject'),\n                color: 'warning',\n                icon: 'mdi-selection-remove',\n                loadingName: '',\n                status: this.printing_objects.length ? ['paused', 'printing'] : [],\n                click: this.btnExcludeObject\n            }, {\n                text: this.$t('Panels.StatusPanel.ClearPrintStats'),\n                color: 'primary',\n                icon: 'mdi-broom',\n                loadingName: 'statusPrintClear',\n                status: ['error', 'complete', 'cancelled'],\n                click: this.btnClearJob\n            }, {\n                text: this.$t('Panels.StatusPanel.ReprintJob'),\n                color: 'primary',\n                icon: 'mdi-printer',\n                loadingName: 'statusPrintReprint',\n                status: ['error', 'complete', 'cancelled'],\n                click: this.btnReprintJob\n            }\n        ]\n    }\n\n    get filteredToolbarButtons() {\n        return this.toolbarButtons.filter((button) => {\n            return button.status.includes(this.printer_state)\n        })\n    }\n\n    get live_velocity() {\n        return Math.abs(this.$store.state.printer.motion_report?.live_velocity?.toFixed(0)) ?? null\n    }\n\n    get live_extruder_velocity() {\n        const live_extruder_velocity = this.$store.state.printer.motion_report?.live_extruder_velocity ?? null\n        if (live_extruder_velocity === null) return null\n\n        return live_extruder_velocity > 0 ? live_extruder_velocity : 0\n    }\n\n    get live_flow() {\n        if (this.live_extruder_velocity === null) return null\n\n        const filamentCrossSection = Math.pow(this.filament_diameter / 2, 2) * Math.PI\n        const currentFlow = filamentCrossSection * this.live_extruder_velocity\n\n        return currentFlow?.toFixed(1)\n    }\n\n    get requested_speed() {\n        const requested_speed = this.$store.state.printer.gcode_move?.speed ?? 0\n        const speed_factor = this.$store.state.printer.gcode_move?.speed_factor ?? 0\n        const max_velocity = this.$store.state.printer.toolhead?.max_velocity ?? 0\n\n        const speed = requested_speed / 60 * speed_factor\n        if (speed > max_velocity) return max_velocity\n\n        return speed.toFixed(0)\n    }\n\n    get max_layers() {\n        if (\n            'first_layer_height' in this.current_file &&\n            'layer_height' in this.current_file &&\n            'object_height' in this.current_file\n        ) {\n            const max = Math.ceil((this.current_file.object_height - this.current_file.first_layer_height) / this.current_file.layer_height + 1)\n            return max > 0 ? max : 0\n        }\n\n        return 0\n    }\n\n    get current_layer() {\n        if (\n            this.print_time > 0 &&\n            'first_layer_height' in this.current_file &&\n            'layer_height' in this.current_file\n        ) {\n            let current_layer = Math.ceil((this.positions.gcode_z - this.current_file.first_layer_height) / this.current_file.layer_height + 1)\n            current_layer = (current_layer <= this.max_layers) ? current_layer : this.max_layers\n\n            return current_layer > 0 ? current_layer : 0\n        }\n\n        return 0\n    }\n\n    get estimated_time_file() {\n        return this.$store.getters['printer/getEstimatedTimeFile']\n    }\n\n    get estimated_time_filament() {\n        return this.$store.getters['printer/getEstimatedTimeFilament']\n    }\n\n    get estimated_time_slicer() {\n        return this.$store.getters['printer/getEstimatedTimeSlicer']\n    }\n\n    get estimated_time_avg() {\n        return this.$store.getters['printer/getEstimatedTimeAvg']\n    }\n\n    get eta() {\n        return this.$store.getters['printer/getEstimatedTimeETA']\n    }\n\n    get filament_diameter() {\n        return this.$store.state.printer.configfile?.settings?.extruder?.filament_diameter ?? 1.75\n    }\n\n    get thumbnailSmall() {\n        if (\n            'thumbnails' in this.current_file &&\n            this.current_file.thumbnails.length\n        ) {\n            const thumbnail = this.current_file.thumbnails.find((thumb: any) =>\n                thumb.width >= thumbnailSmallMin && thumb.width <= thumbnailSmallMax &&\n                thumb.height >= thumbnailSmallMin && thumb.height <= thumbnailSmallMax\n            )\n\n            if (thumbnail && 'relative_path' in thumbnail) {\n                let relative_url = ''\n                if (this.current_file.filename.lastIndexOf('/') !== -1) {\n                    relative_url = this.current_file.filename.substr(0, this.current_file.filename.lastIndexOf('/')+1)\n                }\n\n                if (thumbnail && 'relative_path' in thumbnail) {\n                    return `${this.apiUrl}/server/files/gcodes/${encodeURI(relative_url+thumbnail.relative_path)}?timestamp=${this.current_file.modified}`\n                }\n            }\n        }\n\n        return ''\n    }\n\n    get thumbnailBig() {\n        if (\n            'thumbnails' in this.current_file &&\n            this.current_file.thumbnails.length\n        ) {\n            const thumbnail = this.current_file.thumbnails.find((thumb: any) => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail && 'relative_path' in thumbnail) {\n                let relative_url = ''\n                if (this.current_file.filename.lastIndexOf('/') !== -1) {\n                    relative_url = this.current_file.filename.substr(0, this.current_file.filename.lastIndexOf('/')+1)\n                }\n\n                if (thumbnail && 'relative_path' in thumbnail) {\n                    return `${this.apiUrl}/server/files/gcodes/${encodeURI(relative_url+thumbnail.relative_path)}?timestamp=${this.current_file.modified}`\n                }\n            }\n        }\n\n        return ''\n    }\n\n    get thumbnailBigHeight() {\n        if (\n            'thumbnails' in this.current_file &&\n            this.current_file.thumbnails.length\n        ) {\n            const thumbnail = this.current_file.thumbnails.find((thumb: any) => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail && 'height' in thumbnail) {\n                return thumbnail.height\n            }\n        }\n\n        return 200\n    }\n\n    get thumbnailBigWidth() {\n        if (\n            'thumbnails' in this.current_file &&\n            this.current_file.thumbnails.length\n        ) {\n            const thumbnail = this.current_file.thumbnails.find((thumb: any) => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail && 'width' in thumbnail) {\n                return thumbnail.width\n            }\n        }\n\n        return 300\n    }\n\n    get boolBigThumbnail() {\n        const setting = this.$store.state.gui.uiSettings.boolBigThumbnail ?? true\n\n        return this.current_filename && setting && this.thumbnailBig\n    }\n\n    get printing_objects() {\n        return this.$store.state.printer.exclude_object?.objects ?? []\n    }\n\n    updateShowDialog(newVal: boolean) {\n        this.boolShowObjects = newVal\n    }\n\n    btnPauseJob() {\n        this.$socket.emit('printer.print.pause', { }, { loading: 'statusPrintPause' })\n    }\n\n    btnResumeJob() {\n        this.$socket.emit('printer.print.resume', { }, { loading: 'statusPrintResume' })\n    }\n\n    btnExcludeObject() {\n        this.boolShowObjects = true\n    }\n\n    btnCancelJob() {\n        this.$socket.emit('printer.print.cancel', { }, { loading: 'statusPrintCancel' })\n    }\n\n    btnClearJob() {\n        this.$socket.emit('printer.gcode.script', {script: 'SDCARD_RESET_FILE'}, { loading: 'statusPrintClear' })\n    }\n\n    btnReprintJob() {\n        this.$socket.emit('printer.print.start', { filename: this.current_filename }, { loading: 'statusPrintReprint' })\n    }\n\n    clearDisplayMessage() {\n        this.$socket.emit('printer.gcode.script', {script: 'M117'})\n    }\n\n    formatTime(seconds: number) {\n        let h = Math.floor(seconds / 3600)\n        seconds %= 3600\n        let m = ('0' + Math.floor(seconds / 60)).slice(-2)\n        let s = ('0' + (seconds % 60).toFixed(0)).slice(-2)\n\n        return h+':'+m+':'+s\n    }\n\n    formatDateTime(msec: number) {\n        const date = new Date(msec)\n        const h = date.getHours() >= 10 ? date.getHours() : '0'+date.getHours()\n        const m = date.getMinutes() >= 10 ? date.getMinutes() : '0'+date.getMinutes()\n\n        const diff = msec - new Date().getTime()\n        return h+':'+m+((diff > 60*60*24*1000) ? '+'+Math.round(diff / (60*60*24*1000)) : '')\n    }\n\n    @Watch('live_flow')\n    live_flowChanged(newVal: number) {\n        if (newVal && this.maxFlow < newVal) this.maxFlow = newVal\n    }\n\n    focusBigThumbnail() {\n        if (this.$refs.bigThumbnail) {\n            const clientWidth = this.$refs.bigThumbnail.$el.clientWidth\n            const thumbnailWidth = this.thumbnailBigWidth\n            const factor = clientWidth / thumbnailWidth\n\n            this.$refs.bigThumbnail.$el.style.height = (this.thumbnailBigHeight * factor).toFixed()+'px'\n        }\n    }\n\n    blurBigThumbnail() {\n        if (this.$refs.bigThumbnail) {\n            this.$refs.bigThumbnail.$el.style.height = '200px'\n        }\n    }\n\n    onResize() {\n        const isFocused = (document.activeElement === this.$refs.bigThumbnail?.$el)\n        if (isFocused) this.focusBigThumbnail()\n    }\n\n    created() {\n        window.addEventListener('resize', this.onResize)\n    }\n\n    destroyed() {\n        window.removeEventListener('resize', this.onResize)\n    }\n}\n"],"sourceRoot":""}]}