{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/files/mutations.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/files/mutations.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/files/mutations.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { getDefaultState } from './index'\nimport { findDirectory } from '@/plugins/helpers'\nimport {MutationTree} from 'vuex'\nimport {\n    FileState,\n    FileStateFile\n} from '@/store/files/types'\nimport {allowedMetadata} from '@/store/variables'\n\nexport const mutations: MutationTree<FileState> = {\n    reset(state) {\n        Object.assign(state, getDefaultState())\n    },\n\n    createRootDir(state, payload) {\n        state.filetree.push({\n            isDirectory: true,\n            filename: payload.name,\n            modified: new Date(),\n            permissions: payload.permissions,\n            childrens: [],\n            disk_usage: {\n                free: 0,\n                total: 0,\n                used: 0\n            }\n        })\n    },\n\n    setMetadataRequested(state, payload) {\n        let filename = 'gcodes/'+payload.filename\n        const dirArray = filename.split('/')\n        filename = dirArray[dirArray.length-1]\n        const path = findDirectory(state.filetree, dirArray)\n\n        const fileIndex = path?.findIndex((element: FileStateFile) => element.filename === filename)\n        if (path && fileIndex !== undefined && fileIndex !== -1) {\n            // eslint-disable-next-line\n\t\t\tconst currentFile = {...path[fileIndex]} as any\n            currentFile.metadataRequested = true\n\n            Vue.set(path, fileIndex, currentFile)\n        } else window.console.error('file not found in filetree: '+payload.filename)\n    },\n\n    setMetadata(state, payload) {\n        let filename = 'gcodes/'+payload.filename\n        const dirArray = filename.split('/')\n        filename = dirArray[dirArray.length-1]\n        const path = findDirectory(state.filetree, dirArray)\n\n        const fileIndex = path?.findIndex((element: FileStateFile) => element.filename === filename)\n        if (path && fileIndex !== undefined && fileIndex !== -1) {\n            // eslint-disable-next-line\n\t\t\tconst currentFile = {...path[fileIndex]} as any\n            allowedMetadata.forEach((key: string) => {\n                if (key in payload) currentFile[key] = payload[key]\n            })\n            currentFile.metadataRequested = true\n            currentFile.metadataPulled = true\n\n            Vue.set(path, fileIndex, currentFile)\n        } else window.console.error('file not found in filetree: '+payload.filename)\n    },\n\n    setCreateFile(state, payload) {\n        let filename = payload.item.path\n        if (payload.item.path.lastIndexOf('/') >= 0) filename = payload.item.path.substr(payload.item.path.lastIndexOf('/')).replace('/', '')\n        const path = payload.item.path.substr(0, payload.item.path.lastIndexOf('/'))\n        const parent = findDirectory(state.filetree, (payload.item.root+'/'+path).split('/'))\n\n        if (parent) {\n            const indexFile = parent.findIndex((element: FileStateFile) => (!element.isDirectory && element.filename === filename))\n\n            if (indexFile === -1) {\n                const modified = new Date(payload.item.modified * 1000)\n\n                parent.push({\n                    isDirectory: false,\n                    filename: filename,\n                    modified: modified,\n                    permissions: payload.item.permissions,\n                    size: payload.item.size,\n                    metadataRequested: false,\n                    metadataPulled: false,\n                })\n            } else {\n                parent[indexFile].modified = new Date(payload.item.modified * 1000)\n                parent[indexFile].size = payload.item.size\n                parent[indexFile].metadataRequested = false\n                parent[indexFile].metadataPulled = false\n\n                const extension = filename.substr(filename.lastIndexOf('.') + 1)\n                if (payload.item.root === 'gcodes' && extension === 'gcode') {\n                    Vue.$socket.emit('server.files.metadata', { filename: payload.item.path }, { action: 'files/getMetadata' })\n                }\n            }\n        }\n    },\n\n    setMoveFile(state, payload) {\n        let filenameOld = payload.source_item.path\n        let pathnameOld = payload.source_item.root\n\n        const lastSlashOld = payload.source_item.path.lastIndexOf('/')\n        if (lastSlashOld !== -1) {\n            filenameOld = payload.source_item.path.substr(lastSlashOld + 1)\n            pathnameOld = payload.source_item.root+'/'+payload.source_item.path.substr(0, lastSlashOld + 1)\n        }\n\n        let filenameNew = payload.item.path\n        let pathnameNew = payload.item.root\n\n        const lastSlashNew = payload.item.path.lastIndexOf('/')\n        if (lastSlashNew !== -1) {\n            filenameNew = payload.item.path.substr(lastSlashNew + 1)\n            pathnameNew = payload.item.root+'/'+payload.item.path.substr(0, lastSlashNew + 1)\n        }\n\n        const pathOld = findDirectory(state.filetree, pathnameOld.split('/'))\n        const indexFile = pathOld?.findIndex((element: FileStateFile) => element.filename === filenameOld)\n\n        if (indexFile && pathOld && pathOld[indexFile]) {\n            const file = pathOld.splice(indexFile, 1)[0]\n            file.filename = filenameNew\n\n            //cleanup thumbnails and force reload\n            if (\n                pathnameOld !== pathnameNew &&\n\t\t\t\t'metadataPulled' in file &&\n\t\t\t\tfile.metadataPulled &&\n\t\t\t\t'thumbnails' in file\n            ) {\n                file.metadataPulled = false\n                delete file.thumbnails\n            }\n\n            const newPath = findDirectory(state.filetree, pathnameNew.split('/'))\n\t\t\tnewPath?.push(file)\n        }\n    },\n\n    setModifyFile(state, payload) {\n        let filename = payload.item.path\n        let filepath = payload.item.root\n\n        const lastSlash = payload.item.path.lastIndexOf('/')\n        if (lastSlash !== -1) {\n            filename = payload.item.path.substr(lastSlash + 1)\n            filepath = payload.item.root+'/'+payload.item.path.substr(0, lastSlash + 1)\n        }\n\n        const path = findDirectory(state.filetree, filepath.split('/'))\n        const indexFile = path?.findIndex((element: FileStateFile) => element.filename === filename)\n\n        if (indexFile !== undefined && indexFile > -1 && path && path[indexFile]) {\n            if (\n                'metadataPulled' in path[indexFile] &&\n\t\t\t\tpath[indexFile].metadataPulled\n            ) {\n                path[indexFile].metadataPulled = false\n\n                if ('thumbnails' in path[indexFile])\n                    delete path[indexFile].thumbnails\n            }\n\n            path[indexFile].modified = new Date(payload.item.modified*1000)\n            path[indexFile].size = payload.item.size\n        }\n    },\n\n    setMoveDir(state, payload) {\n        let dirnameOld = payload.source_item.path\n        let pathnameOld = payload.source_item.root\n\n        const lastSlashOld = payload.source_item.path.lastIndexOf('/')\n        if (lastSlashOld !== -1) {\n            dirnameOld = payload.source_item.path.substr(lastSlashOld + 1)\n            pathnameOld = payload.source_item.root+'/'+payload.source_item.path.substr(0, lastSlashOld + 1)\n        }\n\n        let dirnameNew = payload.item.path\n        let pathnameNew = payload.item.root\n\n        const lastSlashNew = payload.item.path.lastIndexOf('/')\n        if (lastSlashNew !== -1) {\n            dirnameNew = payload.item.path.substr(lastSlashNew + 1)\n            pathnameNew = payload.item.root+'/'+payload.item.path.substr(0, lastSlashNew + 1)\n        }\n\n        const pathOld = findDirectory(state.filetree, pathnameOld.split('/'))\n        const indexDir = pathOld?.findIndex((element: FileStateFile) => element.filename === dirnameOld)\n\n        if (indexDir !== undefined && pathOld && pathOld[indexDir]) {\n            const dir = pathOld.splice(indexDir, 1)[0]\n            dir.filename = dirnameNew\n\n            const pathNew = findDirectory(state.filetree, pathnameNew.split('/'))\n\t\t\tpathNew?.push(dir)\n        }\n    },\n\n    setDeleteFile(state, payload) {\n        let currentPath = payload.item.path.substr(0, payload.item.path.lastIndexOf('/'))\n        const delPath = payload.item.path.substr(payload.item.path.lastIndexOf('/')+1)\n        currentPath = findDirectory(state.filetree, (payload.item.root+'/'+currentPath).split('/'))\n        const index = currentPath.findIndex((element: FileStateFile) => element.filename === delPath)\n\n        if (index >= 0 && currentPath[index]) currentPath.splice(index, 1)\n    },\n\n    setCreateDir(state, payload) {\n        const dirname = payload.item.path.substr(payload.item.path.lastIndexOf('/') + 1)\n        const path = payload.item.path.substr(0, payload.item.path.lastIndexOf('/'))\n        const parent = findDirectory(state.filetree, (payload.item.root+'/'+path).split('/'))\n\n        if (parent) {\n            parent.push({\n                isDirectory: true,\n                filename: dirname,\n                modified: payload.item.modified ?? new Date(),\n                permissions: payload.item.permissions,\n                childrens: [],\n            })\n        }\n    },\n\n    setDeleteDir(state, payload) {\n        let currentPath = payload.item.path.substr(0, payload.item.path.lastIndexOf('/'))\n        const delPath = payload.item.path.substr(payload.item.path.lastIndexOf('/')+1)\n        currentPath = findDirectory(state.filetree, (payload.item.root+'/'+currentPath).split('/'))\n        const index = currentPath.findIndex((element: FileStateFile) => element.filename === delPath)\n\n        if (index >= 0 && currentPath[index]) currentPath.splice(index, 1)\n    },\n\n    setRootUpdate(state, payload) {\n        const index = state.filetree.findIndex(root => root.filename === payload.item.root)\n        if (index !== -1 && state.filetree[index].childrens?.length) {\n\t\t\tstate.filetree[index].childrens?.splice(0, state.filetree[index].childrens?.length)\n        }\n    },\n\n    setDiskUsage(state, payload) {\n        const parentPath = payload.path.substr(0, payload.path.lastIndexOf('/'))\n        const pathName = payload.path.substr(payload.path.lastIndexOf('/') + 1)\n        const parent = findDirectory(state.filetree, parentPath.split('/'))\n        const directory = parent?.find((element) => element.isDirectory && element.filename === pathName)\n\n        if (directory) Vue.set(directory, 'disk_usage', payload.disk_usage)\n    },\n\n    setRootPermissions(state, payload) {\n        const rootState = state.filetree.find((dir: FileStateFile) => dir.filename === payload.name)\n        if (rootState) Vue.set(rootState, 'permissions', payload.permissions)\n    }\n}"],"sourceRoot":""}]}