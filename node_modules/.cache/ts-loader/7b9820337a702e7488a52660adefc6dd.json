{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/TempChart.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/TempChart.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/TempChart.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\nimport { convertName } from '@/plugins/helpers'\nimport Component from 'vue-class-component'\nimport {Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport {PrinterTempHistoryStateSerie, PrinterTempHistoryStateSourceEntry} from '@/store/printer/tempHistory/types'\n\nimport { createComponent } from 'echarts-for-vue'\nimport * as echarts from 'echarts'\nimport {ECharts} from 'echarts/core'\n\ninterface echartsTooltipObj {\n    [key: string]: any\n}\n\n@Component({\n    components: {\n        ECharts: createComponent({ echarts }),\n    }\n})\nexport default class TempChart extends Mixins(BaseMixin) {\n    convertName = convertName\n\n    $refs!: {\n        tempchart: any\n    }\n\n    private isVisible = true\n    public chartOptions = {\n        darkMode: true,\n        animation: false,\n        tooltip: {\n            animation: false,\n            trigger: 'axis',\n            backgroundColor: 'rgba(0,0,0,0.9)',\n            borderWidth: 0,\n            textStyle: {\n                color: '#fff',\n                fontSize: '14px'\n            },\n            padding: 15,\n            formatter: this.tooltipFormater,\n            confine: true,\n            className: 'echarts-tooltip',\n            position: function (pos: any, params: any, dom: any, rect: any, size: any) {\n                // tooltip will be fixed on the right if mouse hovering on the left,\n                // and on the left if hovering on the right.\n                const obj: echartsTooltipObj = {top: 60}\n                obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5\n                return obj\n            }\n        },\n        grid: {\n            top: 35,\n            right: 15,\n            bottom: 30,\n            left: 25,\n        },\n        legend: {\n            animation: false,\n            show: false,\n            selected: {}\n        },\n        /*dataZoom: [{\n            type: 'inside',\n        }],*/\n        xAxis: {\n            type: 'time',\n            splitNumber: 5,\n            minInterval: 60*1000,\n            splitLine: {\n                show: true,\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.06)',\n                },\n            },\n            axisLabel: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                margin: 10,\n            },\n        },\n        yAxis: [\n            {\n                name: this.$t('Panels.ToolsPanel.TemperaturesInChart'),\n                type: 'value',\n                min: 0,\n                max: (value: any) => {\n                    if (!this.autoscale) return this.maxTemp\n\n                    return Math.ceil((value.max + 5) / 20) * 20\n                },\n                minInterval: 20,\n                maxInterval: 100,\n                nameLocation: 'end',\n                nameGap: 5,\n                nameTextStyle: {\n                    color: 'rgba(255, 255, 255, 0.24)',\n                    align: 'left',\n                },\n                splitLine: {\n                    lineStyle: {\n                        color: 'rgba(255, 255, 255, 0.12)',\n                    },\n                },\n                axisLabel: {\n                    color: 'rgba(255, 255, 255, 0.24)',\n                    formatter: '{value}',\n                    rotate: 90,\n                    //showMaxLabel: false,\n                    showMinLabel: true,\n                    margin: 5,\n                },\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: 'rgba(255, 255, 255, 0.12)',\n                    },\n                },\n            }, {\n                show: this.boolDisplayPwmAxis,\n                name: 'PWM [%]',\n                min: 0,\n                max: 1,\n                minInterval: 0.25,\n                type: 'value',\n                nameLocation: 'end',\n                nameGap: 5,\n                nameTextStyle: {\n                    color: 'rgba(255, 255, 255, 0.24)',\n                    align: 'right',\n                },\n                splitLine: {\n                    show: false,\n                },\n                axisLabel: {\n                    color: 'rgba(255, 255, 255, 0.24)',\n                    formatter: (value: number) => { return value * 100 },\n                    showMinLabel: true,\n                    rotate: 90,\n                    margin: 5,\n                },\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: 'rgba(255, 255, 255, 0.12)',\n                    },\n                }\n            }\n        ],\n        media: [{\n            query: {\n                minWidth: 500,\n            },\n            option: {\n                grid: {\n                    right: 15,\n                    left: 40,\n                },\n                yAxis: [\n                    {\n                        maxInterval: 50,\n                        axisLabel: {\n                            showMinLabel: false,\n                            showMaxLabel: true,\n                            rotate: 0\n                        }\n                    },\n                    {\n                        maxInterval: 25,\n                        axisLabel: {\n                            showMinLabel: false,\n                            rotate: 0\n                        }\n                    },\n                ],\n            }\n        }],\n        dataset: {\n            source: []\n        },\n        series: []\n    }\n\n    get chart (): ECharts | null {\n        const tempchart = this.$refs.tempchart\n        return tempchart?.inst ?? null\n    }\n\n    get maxHistory() {\n        return this.$store.getters['server/getConfig']('server', 'temperature_store_size') ?? 1200\n    }\n\n    get series() {\n        return this.$store.state.printer.tempHistory.series ?? {}\n    }\n\n    get source() {\n        return this.$store.state.printer.tempHistory.source ?? []\n    }\n\n    get autoscale() {\n        return this.$store.state.gui.view.tempchart.autoscale ?? true\n    }\n\n    get maxTemp() {\n        return this.$store.getters['printer/getMaxTemp'] ?? 300\n    }\n\n    get boolDisplayPwmAxis() {\n        return this.$store.getters['printer/tempHistory/getBoolDisplayPwmAxis']\n    }\n\n    get selectedLegends() {\n        return this.$store.getters['printer/tempHistory/getSelectedLegends']\n    }\n\n    mounted() {\n        this.initChart()\n    }\n\n    beforeDestroy() {\n        if (typeof window === 'undefined') return\n        if (this.chart) this.chart.dispose()\n    }\n\n    initChart() {\n        this.chartOptions.series = this.series\n        this.chartOptions.legend.selected = this.selectedLegends\n        this.updateChartPwmAxis()\n    }\n\n    updateChart() {\n        if (this.chart && this.isVisible) {\n            //const t0 = performance.now()\n            const limitDate = new Date(Date.now() - this.maxHistory * 1000)\n            let newSource = [...this.source].filter((entry: PrinterTempHistoryStateSourceEntry) => {\n                return entry.date >= limitDate\n            })\n\n            this.chart?.setOption({\n                dataset: {\n                    source: newSource\n                },\n            })\n\n            //const t1 = performance.now()\n            //window.console.debug('calc chart', (t1-t0).toFixed(), newSource.length, this.source.length)\n\n            // reset tempHistory if working sources are smaller than 80%\n            if (this.source.length > 0 && newSource.length < this.maxHistory * 0.8) {\n                this.$socket.emit('server.temperature_store', {}, { action: 'printer/tempHistory/init' })\n            }\n        }\n    }\n\n    updateChartPwmAxis() {\n        if (this.boolDisplayPwmAxis) {\n            this.chartOptions.yAxis[1].show = true\n            this.chartOptions.grid.right = 25\n            this.chartOptions.media[0].option.grid.right = 35\n        } else {\n            this.chartOptions.yAxis[1].show = false\n            this.chartOptions.grid.right = 15\n            this.chartOptions.media[0].option.grid.right = 15\n        }\n    }\n\n    visibilityChanged (isVisible: boolean) {\n        this.isVisible = isVisible\n\n        if (isVisible) {\n            this.initChart()\n        }\n    }\n\n    tooltipFormater(datasets: any) {\n        let output = ''\n\n        const mainDatasets = datasets.filter((dataset: any) => {\n            if (dataset.seriesName === 'date') return false\n            if (dataset.seriesName.includes('-')) {\n                if (dataset.seriesName.lastIndexOf('-') > -1) {\n                    const suffix = dataset.seriesName.slice(dataset.seriesName.lastIndexOf('-') + 1)\n                    return !['target', 'power'].includes(suffix)\n                }\n\n                return true\n            }\n\n            return true\n        })\n        if (datasets.length) {\n            let outputTime = datasets[0]['axisValueLabel']\n            outputTime = outputTime.substr(outputTime.indexOf(' '))\n\n            output +=\n                '<div class=\"row\">' +\n                '<div class=\"col py-1\" style=\\'border-bottom: 1px solid rgba(255, 255, 255, 0.24);\\'>' +\n                '<span class=\\'v-icon mdi mdi-clock theme-dark\\' style=\\'font-size: 14px; margin-right: 5px;\\'></span>' +\n                '<span class=\\'font-weight-bold\\'>'+outputTime+'</span>' +\n                '</div>' +\n                '</div>'\n        }\n\n        mainDatasets.forEach((dataset: any) => {\n            output += '<div class=\"row\">'\n\n            output += '<div class=\"col-auto py-0\">'\n            output += dataset.marker\n            output += '<span class=\\'ml-2\\'>'+convertName(dataset.seriesName)+':</span>'\n            output += '</div>'\n\n            output += '<div class=\"col text-right py-0 font-weight-bold\">'\n\n            if (dataset.seriesName in dataset.value) output += dataset.value[dataset.seriesName].toFixed(1)\n            if (dataset.seriesName+'-target' in dataset.value) output += ' / '+dataset.value[dataset.seriesName+'-target'].toFixed(1)\n            output += '°C'\n\n            if (dataset.seriesName+'-power' in dataset.value) output += ' [ '+(dataset.value[dataset.seriesName+'-power']*100).toFixed(0)+'% ]'\n            if (dataset.seriesName+'-speed' in dataset.value) output += ' [ '+(dataset.value[dataset.seriesName+'-speed']*100).toFixed(0)+'% ]'\n\n            output += '</div>'\n            output += '</div>'\n        })\n\n        return output\n    }\n\n    @Watch('series', { deep: true })\n    seriesChanged(newVal: PrinterTempHistoryStateSerie[]) {\n        if (this.chart && this.chart?.isDisposed() !== true) {\n            this.chart.setOption({\n                series: newVal\n            })\n        }\n    }\n\n    @Watch('source')\n    sourceChanged() {\n        if (this.chart?.isDisposed() !== true) {\n            this.updateChart()\n        }\n    }\n\n    @Watch('selectedLegends')\n    selectedLegendsChanged(newVal: any, oldVal:any) {\n        if (this.chart?.isDisposed() !== true) {\n            Object.keys(newVal).forEach((key) => {\n                if (newVal[key] !== oldVal[key]) {\n                    const actionType = newVal[key] ? 'legendSelect' : 'legendUnSelect'\n                    this.chart?.dispatchAction({ type: actionType, name: key })\n                }\n            })\n        }\n    }\n\n    @Watch('boolDisplayPwmAxis')\n    boolDisplayPwmAxisChanged() {\n        this.updateChartPwmAxis()\n    }\n}\n"],"sourceRoot":""}]}