{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/thread-loader/dist/cjs.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-3!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/Machine/UpdatePanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/Machine/UpdatePanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/thread-loader/dist/cjs.js","mtime":1645990064416},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYW5uZS1zb3BoaWVyb3kvRG93bmxvYWRzL01haW5zYWlsL21haW5zYWlsLW1haW50ZW5hbmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9Vc2Vycy9hbm5lLXNvcGhpZXJveS9Eb3dubG9hZHMvTWFpbnNhaWwvbWFpbnNhaWwtbWFpbnRlbmFuY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZi5qcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9hbm5lLXNvcGhpZXJveS9Eb3dubG9hZHMvTWFpbnNhaWwvbWFpbnNhaWwtbWFpbnRlbmFuY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvYW5uZS1zb3BoaWVyb3kvRG93bmxvYWRzL01haW5zYWlsL21haW5zYWlsLW1haW50ZW5hbmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cy5qcyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIuanMiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9hbm5lLXNvcGhpZXJveS9Eb3dubG9hZHMvTWFpbnNhaWwvbWFpbnNhaWwtbWFpbnRlbmFuY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBNaXhpbnMgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IEJhc2VNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvYmFzZSc7CmltcG9ydCBzZW12ZXIgZnJvbSAnc2VtdmVyJzsKaW1wb3J0IFBhbmVsIGZyb20gJ0AvY29tcG9uZW50cy91aS9QYW5lbC52dWUnOwoKdmFyIFVwZGF0ZVBhbmVsID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfTWl4aW5zKSB7CiAgX2luaGVyaXRzKFVwZGF0ZVBhbmVsLCBfTWl4aW5zKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihVcGRhdGVQYW5lbCk7CgogIGZ1bmN0aW9uIFVwZGF0ZVBhbmVsKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVcGRhdGVQYW5lbCk7CgogICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbC5hcHBseShfc3VwZXIsIFt0aGlzXS5jb25jYXQoYXJncykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgIm9wZW5Db21taXRzIiwgW10pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgImRhdGVPcHRpb25zIiwgewogICAgICB5ZWFyOiAnbnVtZXJpYycsCiAgICAgIG1vbnRoOiAnc2hvcnQnLAogICAgICBkYXk6ICdudW1lcmljJwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiY29tbWl0c092ZXJsYXkiLCB7CiAgICAgIGJvb2w6IGZhbHNlLAogICAgICBvd25lcjogJycsCiAgICAgIG1vZHVsOiAnJywKICAgICAgcmVwb05hbWU6ICcnLAogICAgICBjb21taXRzOiBbXSwKICAgICAgZ3JvdXBlZENvbW1pdHM6IFtdCiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVXBkYXRlUGFuZWwsIFt7CiAgICBrZXk6ICJsYW5ndWFnZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIF90aGlzJCRzdG9yZSRzdGF0ZSRndTsKCiAgICAgIHJldHVybiAoX3RoaXMkJHN0b3JlJHN0YXRlJGd1ID0gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmdlbmVyYWwubGFuZ3VhZ2UpICE9PSBudWxsICYmIF90aGlzJCRzdG9yZSRzdGF0ZSRndSAhPT0gdm9pZCAwID8gX3RoaXMkJHN0b3JlJHN0YXRlJGd1IDogJ2VuJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJlbmFibGVVcGRhdGVNYW5hZ2VyIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2VydmVyLmNvbXBvbmVudHMuaW5jbHVkZXMoJ3VwZGF0ZV9tYW5hZ2VyJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAidmVyc2lvbl9pbmZvIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2VydmVyLnVwZGF0ZU1hbmFnZXIudmVyc2lvbl9pbmZvOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZWFibGVTb2Z0d2FyZXMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydzZXJ2ZXIvdXBkYXRlTWFuYWdlci9nZXRVcGRhdGVhYmxlU29mdHdhcmVzJ107CiAgICB9CiAgfSwgewogICAga2V5OiAic2hvd1VwZGF0ZUFsbCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXMsCiAgICAgICAgICBfdGhpcyR2ZXJzaW9uX2luZm8sCiAgICAgICAgICBfdGhpcyR2ZXJzaW9uX2luZm8kc3k7CgogICAgICB2YXIgdXBkYXRlYWJsZU1vZHVscyA9IDA7CiAgICAgIE9iamVjdC5rZXlzKHRoaXMudXBkYXRlYWJsZVNvZnR3YXJlcykuZm9yRWFjaChmdW5jdGlvbiAobW9kdWxlbmFtZSkgewogICAgICAgIHZhciBtb2R1bGUgPSBfdGhpczIudXBkYXRlYWJsZVNvZnR3YXJlc1ttb2R1bGVuYW1lXTsKICAgICAgICBpZiAoJ3ZlcnNpb24nIGluIG1vZHVsZSAmJiAncmVtb3RlX3ZlcnNpb24nIGluIG1vZHVsZSAmJiBzZW12ZXIudmFsaWQobW9kdWxlLnJlbW90ZV92ZXJzaW9uKSAmJiBzZW12ZXIudmFsaWQobW9kdWxlLnZlcnNpb24pICYmIHNlbXZlci5ndChtb2R1bGUucmVtb3RlX3ZlcnNpb24sIG1vZHVsZS52ZXJzaW9uKSkgdXBkYXRlYWJsZU1vZHVscysrOwogICAgICB9KTsKICAgICAgaWYgKCgoX3RoaXMkdmVyc2lvbl9pbmZvID0gdGhpcy52ZXJzaW9uX2luZm8pID09PSBudWxsIHx8IF90aGlzJHZlcnNpb25faW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF90aGlzJHZlcnNpb25faW5mbyRzeSA9IF90aGlzJHZlcnNpb25faW5mby5zeXN0ZW0pID09PSBudWxsIHx8IF90aGlzJHZlcnNpb25faW5mbyRzeSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdmVyc2lvbl9pbmZvJHN5LnBhY2thZ2VfY291bnQpID4gMCkgdXBkYXRlYWJsZU1vZHVscysrOwogICAgICByZXR1cm4gdXBkYXRlYWJsZU1vZHVscyA+IDE7CiAgICB9CiAgfSwgewogICAga2V5OiAiYnRuU3luYyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYnRuU3luYygpIHsKICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ21hY2hpbmUudXBkYXRlLnN0YXR1cycsIHsKICAgICAgICByZWZyZXNoOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBhY3Rpb246ICdzZXJ2ZXIvdXBkYXRlTWFuYWdlci9nZXRTdGF0dXMnLAogICAgICAgIGxvYWRpbmc6ICdsb2FkaW5nQnRuU3luY1VwZGF0ZU1hbmFnZXInCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEJ0bkNvbG9yIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCdG5Db2xvcihvYmplY3QpIHsKICAgICAgaWYgKF90eXBlb2Yob2JqZWN0KSA9PT0gJ29iamVjdCcgJiYgb2JqZWN0ICE9PSBmYWxzZSkgewogICAgICAgIHZhciBfb2JqZWN0JGNvbW1pdHNfYmVoaW47CgogICAgICAgIGlmICgnZGVidWdfZW5hYmxlZCcgaW4gb2JqZWN0ICYmICFvYmplY3QuZGVidWdfZW5hYmxlZCAmJiAnZGV0YWNoZWQnIGluIG9iamVjdCAmJiBvYmplY3QuZGV0YWNoZWQpIHJldHVybiAnb3JhbmdlJzsKICAgICAgICBpZiAoJ2lzX2RpcnR5JyBpbiBvYmplY3QgJiYgb2JqZWN0LmlzX2RpcnR5KSByZXR1cm4gJ29yYW5nZSc7CiAgICAgICAgaWYgKCdpc192YWxpZCcgaW4gb2JqZWN0ICYmICFvYmplY3QuaXNfdmFsaWQpIHJldHVybiAncmVkJzsKICAgICAgICBpZiAoJ3ZlcnNpb24nIGluIG9iamVjdCAmJiAncmVtb3RlX3ZlcnNpb24nIGluIG9iamVjdCAmJiBzZW12ZXIudmFsaWQob2JqZWN0LnJlbW90ZV92ZXJzaW9uKSAmJiBzZW12ZXIudmFsaWQob2JqZWN0LnZlcnNpb24pICYmIHNlbXZlci5ndChvYmplY3QucmVtb3RlX3ZlcnNpb24sIG9iamVjdC52ZXJzaW9uKSkgcmV0dXJuICdwcmltYXJ5JzsKICAgICAgICBpZiAoKChfb2JqZWN0JGNvbW1pdHNfYmVoaW4gPSBvYmplY3QuY29tbWl0c19iZWhpbmQpICE9PSBudWxsICYmIF9vYmplY3QkY29tbWl0c19iZWhpbiAhPT0gdm9pZCAwID8gX29iamVjdCRjb21taXRzX2JlaGluIDogW10pLmxlbmd0aCkgcmV0dXJuICdwcmltYXJ5JzsKICAgICAgICBpZiAoJ3ZlcnNpb24nIGluIG9iamVjdCAmJiAncmVtb3RlX3ZlcnNpb24nIGluIG9iamVjdCAmJiAob2JqZWN0LnZlcnNpb24gPT09ICc/JyB8fCBvYmplY3QucmVtb3RlX3ZlcnNpb24gPT09ICc/JykpIHJldHVybiAnZ3JheSc7CiAgICAgICAgcmV0dXJuICdncmVlbic7CiAgICAgIH0KCiAgICAgIHJldHVybiAncmVkJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRCdG5UZXh0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCdG5UZXh0KG9iamVjdCkgewogICAgICBpZiAoX3R5cGVvZihvYmplY3QpID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IGZhbHNlKSB7CiAgICAgICAgdmFyIF9vYmplY3QkY29tbWl0c19iZWhpbjI7CgogICAgICAgIGlmICgnZGVidWdfZW5hYmxlZCcgaW4gb2JqZWN0ICYmICFvYmplY3QuZGVidWdfZW5hYmxlZCAmJiAnZGV0YWNoZWQnIGluIG9iamVjdCAmJiBvYmplY3QuZGV0YWNoZWQpIHJldHVybiB0aGlzLiR0KCdNYWNoaW5lLlVwZGF0ZVBhbmVsLkRldGFjaGVkJyk7CiAgICAgICAgaWYgKCdpc192YWxpZCcgaW4gb2JqZWN0ICYmICFvYmplY3QuaXNfdmFsaWQpIHJldHVybiB0aGlzLiR0KCdNYWNoaW5lLlVwZGF0ZVBhbmVsLkludmFsaWQnKTsKICAgICAgICBpZiAoJ2lzX2RpcnR5JyBpbiBvYmplY3QgJiYgb2JqZWN0LmlzX2RpcnR5KSByZXR1cm4gdGhpcy4kdCgnTWFjaGluZS5VcGRhdGVQYW5lbC5EaXJ0eScpOwogICAgICAgIGlmICgndmVyc2lvbicgaW4gb2JqZWN0ICYmICdyZW1vdGVfdmVyc2lvbicgaW4gb2JqZWN0ICYmIHNlbXZlci52YWxpZChvYmplY3QucmVtb3RlX3ZlcnNpb24pICYmIHNlbXZlci52YWxpZChvYmplY3QudmVyc2lvbikgJiYgc2VtdmVyLmd0KG9iamVjdC5yZW1vdGVfdmVyc2lvbiwgb2JqZWN0LnZlcnNpb24pKSByZXR1cm4gdGhpcy4kdCgnTWFjaGluZS5VcGRhdGVQYW5lbC5VcGRhdGUnKTsKICAgICAgICBpZiAoKChfb2JqZWN0JGNvbW1pdHNfYmVoaW4yID0gb2JqZWN0LmNvbW1pdHNfYmVoaW5kKSAhPT0gbnVsbCAmJiBfb2JqZWN0JGNvbW1pdHNfYmVoaW4yICE9PSB2b2lkIDAgPyBfb2JqZWN0JGNvbW1pdHNfYmVoaW4yIDogW10pLmxlbmd0aCkgcmV0dXJuIHRoaXMuJHQoJ01hY2hpbmUuVXBkYXRlUGFuZWwuVXBkYXRlJyk7CiAgICAgICAgaWYgKCd2ZXJzaW9uJyBpbiBvYmplY3QgJiYgJ3JlbW90ZV92ZXJzaW9uJyBpbiBvYmplY3QgJiYgKG9iamVjdC52ZXJzaW9uID09PSAnPycgfHwgb2JqZWN0LnJlbW90ZV92ZXJzaW9uID09PSAnPycpKSByZXR1cm4gdGhpcy4kdCgnTWFjaGluZS5VcGRhdGVQYW5lbC5Vbmtub3duJyk7CiAgICAgICAgcmV0dXJuIHRoaXMuJHQoJ01hY2hpbmUuVXBkYXRlUGFuZWwuVXBUb0RhdGUnKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuJHQoJ01hY2hpbmUuVXBkYXRlUGFuZWwuRVJST1InKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRCdG5JY29uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCdG5JY29uKG9iamVjdCkgewogICAgICBpZiAoX3R5cGVvZihvYmplY3QpID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IGZhbHNlKSB7CiAgICAgICAgdmFyIF9vYmplY3QkY29tbWl0c19iZWhpbjM7CgogICAgICAgIGlmICgnZGVidWdfZW5hYmxlZCcgaW4gb2JqZWN0ICYmICFvYmplY3QuZGVidWdfZW5hYmxlZCAmJiAnZGV0YWNoZWQnIGluIG9iamVjdCAmJiBvYmplY3QuZGV0YWNoZWQpIHJldHVybiAnYWxlcnQtY2lyY2xlJzsKICAgICAgICBpZiAoJ2lzX3ZhbGlkJyBpbiBvYmplY3QgJiYgIW9iamVjdC5pc192YWxpZCkgcmV0dXJuICdhbGVydC1jaXJjbGUnOwogICAgICAgIGlmICgnaXNfZGlydHknIGluIG9iamVjdCAmJiBvYmplY3QuaXNfZGlydHkpIHJldHVybiAnYWxlcnQtY2lyY2xlJzsKICAgICAgICBpZiAoJ3ZlcnNpb24nIGluIG9iamVjdCAmJiAncmVtb3RlX3ZlcnNpb24nIGluIG9iamVjdCAmJiBzZW12ZXIudmFsaWQob2JqZWN0LnJlbW90ZV92ZXJzaW9uKSAmJiBzZW12ZXIudmFsaWQob2JqZWN0LnZlcnNpb24pICYmIHNlbXZlci5ndChvYmplY3QucmVtb3RlX3ZlcnNpb24sIG9iamVjdC52ZXJzaW9uKSkgcmV0dXJuICdwcm9ncmVzcy11cGxvYWQnOwogICAgICAgIGlmICgoKF9vYmplY3QkY29tbWl0c19iZWhpbjMgPSBvYmplY3QuY29tbWl0c19iZWhpbmQpICE9PSBudWxsICYmIF9vYmplY3QkY29tbWl0c19iZWhpbjMgIT09IHZvaWQgMCA/IF9vYmplY3QkY29tbWl0c19iZWhpbjMgOiBbXSkubGVuZ3RoKSByZXR1cm4gJ3Byb2dyZXNzLXVwbG9hZCc7CiAgICAgICAgaWYgKCd2ZXJzaW9uJyBpbiBvYmplY3QgJiYgJ3JlbW90ZV92ZXJzaW9uJyBpbiBvYmplY3QgJiYgKG9iamVjdC52ZXJzaW9uID09PSAnPycgfHwgb2JqZWN0LnJlbW90ZV92ZXJzaW9uID09PSAnPycpKSByZXR1cm4gJ2hlbHAtY2lyY2xlLW91dGxpbmUnOwogICAgICAgIHJldHVybiAnY2hlY2snOwogICAgICB9CgogICAgICByZXR1cm4gJ0VSUk9SJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRCdG5EaXNhYmxlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QnRuRGlzYWJsZWQob2JqZWN0KSB7CiAgICAgIGlmIChbJ3ByaW50aW5nJywgJ3BhdXNlZCddLmluY2x1ZGVzKHRoaXMucHJpbnRlcl9zdGF0ZSkpIHJldHVybiB0cnVlOwogICAgICBpZiAoJ2lzX3ZhbGlkJyBpbiBvYmplY3QgJiYgIW9iamVjdC5pc192YWxpZCkgcmV0dXJuIGZhbHNlOwogICAgICBpZiAoJ2lzX2RpcnR5JyBpbiBvYmplY3QgJiYgb2JqZWN0LmlzX2RpcnR5KSByZXR1cm4gZmFsc2U7CgogICAgICBpZiAoX3R5cGVvZihvYmplY3QpID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IGZhbHNlKSB7CiAgICAgICAgdmFyIF9vYmplY3QkY29tbWl0c19iZWhpbjQ7CgogICAgICAgIGlmICgoKF9vYmplY3QkY29tbWl0c19iZWhpbjQgPSBvYmplY3QuY29tbWl0c19iZWhpbmQpICE9PSBudWxsICYmIF9vYmplY3QkY29tbWl0c19iZWhpbjQgIT09IHZvaWQgMCA/IF9vYmplY3QkY29tbWl0c19iZWhpbjQgOiBbXSkubGVuZ3RoKSByZXR1cm4gZmFsc2U7CiAgICAgICAgaWYgKCd2ZXJzaW9uJyBpbiBvYmplY3QgJiYgJ3JlbW90ZV92ZXJzaW9uJyBpbiBvYmplY3QgJiYgc2VtdmVyLnZhbGlkKG9iamVjdC5yZW1vdGVfdmVyc2lvbikgJiYgc2VtdmVyLnZhbGlkKG9iamVjdC52ZXJzaW9uKSAmJiBzZW12ZXIuZ3Qob2JqZWN0LnJlbW90ZV92ZXJzaW9uLCBvYmplY3QudmVyc2lvbikpIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0VmVyc2lvbk91dHB1dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VmVyc2lvbk91dHB1dChvYmplY3QpIHsKICAgICAgdmFyIF9vYmplY3QkdmVyc2lvbiwgX29iamVjdCRyZW1vdGVfdmVyc2lvLCBfb2JqZWN0JGNvbW1pdHNfYmVoaW41OwoKICAgICAgdmFyIGxvY2FsX3ZlcnNpb24gPSAoX29iamVjdCR2ZXJzaW9uID0gb2JqZWN0LnZlcnNpb24pICE9PSBudWxsICYmIF9vYmplY3QkdmVyc2lvbiAhPT0gdm9pZCAwID8gX29iamVjdCR2ZXJzaW9uIDogJz8nOwogICAgICB2YXIgcmVtb3RlX3ZlcnNpb24gPSAoX29iamVjdCRyZW1vdGVfdmVyc2lvID0gb2JqZWN0LnJlbW90ZV92ZXJzaW9uKSAhPT0gbnVsbCAmJiBfb2JqZWN0JHJlbW90ZV92ZXJzaW8gIT09IHZvaWQgMCA/IF9vYmplY3QkcmVtb3RlX3ZlcnNpbyA6ICc/JzsKICAgICAgdmFyIGNvbW1pdHNfYmVoaW5kID0gKF9vYmplY3QkY29tbWl0c19iZWhpbjUgPSBvYmplY3QuY29tbWl0c19iZWhpbmQpICE9PSBudWxsICYmIF9vYmplY3QkY29tbWl0c19iZWhpbjUgIT09IHZvaWQgMCA/IF9vYmplY3QkY29tbWl0c19iZWhpbjUgOiBbXTsKICAgICAgdmFyIG91dHB1dCA9ICcnOwogICAgICBpZiAoJ3JlbW90ZV9hbGlhcycgaW4gb2JqZWN0ICYmIG9iamVjdC5yZW1vdGVfYWxpYXMgIT09ICdvcmlnaW4nKSBvdXRwdXQgKz0gb2JqZWN0LnJlbW90ZV9hbGlhczsKCiAgICAgIGlmICgnYnJhbmNoJyBpbiBvYmplY3QgJiYgIVsnbWFzdGVyJywgJ21haW4nXS5pbmNsdWRlcyhvYmplY3QuYnJhbmNoKSkgewogICAgICAgIGlmIChvdXRwdXQgIT09ICcnKSBvdXRwdXQgKz0gJy8nOwogICAgICAgIG91dHB1dCArPSBvYmplY3QuYnJhbmNoOwogICAgICB9CgogICAgICBpZiAob3V0cHV0ICE9PSAnJykgb3V0cHV0ICs9ICc6ICc7CiAgICAgIGlmIChzZW12ZXIudmFsaWQocmVtb3RlX3ZlcnNpb24pICYmIHNlbXZlci52YWxpZChsb2NhbF92ZXJzaW9uKSAmJiBzZW12ZXIuZ3QocmVtb3RlX3ZlcnNpb24sIGxvY2FsX3ZlcnNpb24pKSBvdXRwdXQgKz0gbG9jYWxfdmVyc2lvbiArICcgPiAnICsgcmVtb3RlX3ZlcnNpb247ZWxzZSBpZiAoY29tbWl0c19iZWhpbmQubGVuZ3RoKSBvdXRwdXQgKz0gbG9jYWxfdmVyc2lvbiArICcgPiAnICsgdGhpcy4kdGMoJ01hY2hpbmUuVXBkYXRlUGFuZWwuQ29tbWl0c0F2YWlsYWJlJywgY29tbWl0c19iZWhpbmQubGVuZ3RoLCB7CiAgICAgICAgY291bnQ6IGNvbW1pdHNfYmVoaW5kLmxlbmd0aAogICAgICB9KTtlbHNlIGlmICgnZnVsbF92ZXJzaW9uX3N0cmluZycgaW4gb2JqZWN0ICYmIG9iamVjdC5mdWxsX3ZlcnNpb25fc3RyaW5nICE9PSAnPycpIG91dHB1dCArPSBvYmplY3QuZnVsbF92ZXJzaW9uX3N0cmluZztlbHNlIG91dHB1dCArPSBsb2NhbF92ZXJzaW9uOwogICAgICByZXR1cm4gb3V0cHV0OwogICAgfQogIH0sIHsKICAgIGtleTogImdldFZlcnNpb25DbGlja2FibGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFZlcnNpb25DbGlja2FibGUob2JqZWN0KSB7CiAgICAgIHJldHVybiAnY29tbWl0c19iZWhpbmQnIGluIG9iamVjdCAmJiBvYmplY3QuY29tbWl0c19iZWhpbmQubGVuZ3RoOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFJlY292ZXJ5T3B0aW9ucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVjb3ZlcnlPcHRpb25zKG9iamVjdCkgewogICAgICBpZiAoJ2lzX3ZhbGlkJyBpbiBvYmplY3QgJiYgIW9iamVjdC5pc192YWxpZCkgcmV0dXJuIHRydWU7ZWxzZSBpZiAoJ2lzX2RpcnR5JyBpbiBvYmplY3QgJiYgb2JqZWN0LmlzX2RpcnR5KSByZXR1cm4gdHJ1ZTsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZUFsbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlQWxsKCkgewogICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS51cGRhdGUuZnVsbCcsIHt9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVNb2R1bGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZU1vZHVsZShrZXkpIHsKICAgICAgaWYgKFsna2xpcHBlcicsICdtb29ucmFrZXInXS5pbmNsdWRlcyhrZXkpKSB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS51cGRhdGUuJyArIGtleSwge30pO2Vsc2UgdGhpcy4kc29ja2V0LmVtaXQoJ21hY2hpbmUudXBkYXRlLmNsaWVudCcsIHsKICAgICAgICBuYW1lOiBrZXkKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVjb3ZlcnkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlY292ZXJ5KG5hbWUsIGhhcmQpIHsKICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ21hY2hpbmUudXBkYXRlLnJlY292ZXInLCB7CiAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICBoYXJkOiBoYXJkCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZVN5c3RlbSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlU3lzdGVtKCkgewogICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS51cGRhdGUuc3lzdGVtJywge30pOwogICAgfQogIH0sIHsKICAgIGtleTogIm9wZW5Db21taXRzT3ZlcmxheSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlbkNvbW1pdHNPdmVybGF5KGtleSwgb2JqZWN0KSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgaWYgKCdjb21taXRzX2JlaGluZCcgaW4gb2JqZWN0ICYmICdvd25lcicgaW4gb2JqZWN0ICYmIG9iamVjdC5jb21taXRzX2JlaGluZC5sZW5ndGgpIHsKICAgICAgICB2YXIgX29iamVjdCRyZXBvX25hbWU7CgogICAgICAgIHRoaXMub3BlbkNvbW1pdHMgPSBbXTsKICAgICAgICB0aGlzLmNvbW1pdHNPdmVybGF5Lm93bmVyID0gb2JqZWN0Lm93bmVyOwogICAgICAgIHRoaXMuY29tbWl0c092ZXJsYXkubW9kdWwgPSBrZXk7CiAgICAgICAgdGhpcy5jb21taXRzT3ZlcmxheS5yZXBvTmFtZSA9IChfb2JqZWN0JHJlcG9fbmFtZSA9IG9iamVjdC5yZXBvX25hbWUpICE9PSBudWxsICYmIF9vYmplY3QkcmVwb19uYW1lICE9PSB2b2lkIDAgPyBfb2JqZWN0JHJlcG9fbmFtZSA6IGtleTsKICAgICAgICB0aGlzLmNvbW1pdHNPdmVybGF5LmNvbW1pdHMgPSBvYmplY3QuY29tbWl0c19iZWhpbmQ7CiAgICAgICAgdGhpcy5jb21taXRzT3ZlcmxheS5ncm91cGVkQ29tbWl0cyA9IFtdOwogICAgICAgIHZhciBsYXN0RGF0ZSA9IG51bGw7CiAgICAgICAgdmFyIHRtcENvbW1pdHMgPSBbXTsKICAgICAgICBvYmplY3QuY29tbWl0c19iZWhpbmQuZm9yRWFjaChmdW5jdGlvbiAoY29tbWl0KSB7CiAgICAgICAgICB2YXIgY29tbWl0RGF0ZSA9IG5ldyBEYXRlKGNvbW1pdC5kYXRlICogMTAwMCk7CgogICAgICAgICAgaWYgKGxhc3REYXRlID09PSBudWxsIHx8IGNvbW1pdERhdGUuZ2V0RnVsbFllYXIoKSAhPT0gbGFzdERhdGUuZ2V0RnVsbFllYXIoKSB8fCBjb21taXREYXRlLmdldE1vbnRoKCkgIT09IGxhc3REYXRlLmdldE1vbnRoKCkgfHwgY29tbWl0RGF0ZS5nZXREYXkoKSAhPT0gbGFzdERhdGUuZ2V0RGF5KCkpIHsKICAgICAgICAgICAgaWYgKHRtcENvbW1pdHMubGVuZ3RoICYmIGxhc3REYXRlICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgX3RoaXMzLmNvbW1pdHNPdmVybGF5Lmdyb3VwZWRDb21taXRzLnB1c2goewogICAgICAgICAgICAgICAgZGF0ZTogbGFzdERhdGUsCiAgICAgICAgICAgICAgICBjb21taXRzOiBfdG9Db25zdW1hYmxlQXJyYXkodG1wQ29tbWl0cykKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbGFzdERhdGUgPSBjb21taXREYXRlOwogICAgICAgICAgICB0bXBDb21taXRzID0gW107CiAgICAgICAgICB9CgogICAgICAgICAgdG1wQ29tbWl0cy5wdXNoKGNvbW1pdCk7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChsYXN0RGF0ZSAmJiB0bXBDb21taXRzLmxlbmd0aCkgewogICAgICAgICAgdGhpcy5jb21taXRzT3ZlcmxheS5ncm91cGVkQ29tbWl0cy5wdXNoKHsKICAgICAgICAgICAgZGF0ZTogbGFzdERhdGUsCiAgICAgICAgICAgIGNvbW1pdHM6IF90b0NvbnN1bWFibGVBcnJheSh0bXBDb21taXRzKQogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmNvbW1pdHNPdmVybGF5LmJvb2wgPSB0cnVlOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiY29udmVydENvbW1pdERhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbnZlcnRDb21taXREYXRlKHRpbWVzdGFtcCkgewogICAgICB2YXIgY29tbWl0RGF5ID0gbmV3IERhdGUodGltZXN0YW1wICogMTAwMCk7CiAgICAgIGNvbW1pdERheS5zZXRIb3VycygwLCAwLCAwLCAwKTsKICAgICAgdmFyIHRvZGF5RGF5ID0gbmV3IERhdGUoKTsKICAgICAgdG9kYXlEYXkuc2V0SG91cnMoMCwgMCwgMCwgMCk7CiAgICAgIHZhciBkaWZmID0gTWF0aC5mbG9vcih0b2RheURheS5nZXRUaW1lKCkgLSBjb21taXREYXkuZ2V0VGltZSgpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KTsKCiAgICAgIGlmIChkaWZmID09PSAwKSB7CiAgICAgICAgdmFyIGRpZmZIb3VycyA9IE1hdGguZmxvb3IoKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gdGltZXN0YW1wICogMTAwMCkgLyAoMTAwMCAqIDYwICogNjApKTsKICAgICAgICByZXR1cm4gdGhpcy4kdCgnTWFjaGluZS5VcGRhdGVQYW5lbC5Db21taXR0ZWRIb3Vyc0FnbycsIHsKICAgICAgICAgIGhvdXJzOiBkaWZmSG91cnMKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmIChkaWZmID09PSAxKSByZXR1cm4gdGhpcy4kdCgnTWFjaGluZS5VcGRhdGVQYW5lbC5Db21taXR0ZWRZZXN0ZXJkYXknKTtlbHNlIGlmIChkaWZmIDwgMjkpIHJldHVybiB0aGlzLiR0KCdNYWNoaW5lLlVwZGF0ZVBhbmVsLkNvbW1pdHRlZERheXNBZ28nLCB7CiAgICAgICAgZGF5czogZGlmZgogICAgICB9KTtlbHNlIHJldHVybiB0aGlzLiR0KCdNYWNoaW5lLlVwZGF0ZVBhbmVsLkNvbW1pdHRlZE9uRGF0ZScsIHsKICAgICAgICBkYXRlOiBjb21taXREYXkudG9Mb2NhbGVEYXRlU3RyaW5nKHRoaXMubGFuZ3VhZ2UsIHRoaXMuZGF0ZU9wdGlvbnMpCiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFVwZGF0ZVBhbmVsOwp9KE1peGlucyhCYXNlTWl4aW4pKTsKClVwZGF0ZVBhbmVsID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBQYW5lbDogUGFuZWwKICB9Cn0pXSwgVXBkYXRlUGFuZWwpOwpleHBvcnQgZGVmYXVsdCBVcGRhdGVQYW5lbDs="},null]}