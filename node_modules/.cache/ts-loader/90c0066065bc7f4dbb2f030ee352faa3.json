{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/printer/tempHistory/getters.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/printer/tempHistory/getters.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0IHsgZGF0YXNldFR5cGVzLCBkYXRhc2V0VHlwZXNJblBlcmNlbnRzIH0gZnJvbSAnQC9zdG9yZS92YXJpYWJsZXMnOwpleHBvcnQgdmFyIGdldHRlcnMgPSB7CiAgZ2V0RGF0YXNldENvbG9yOiBmdW5jdGlvbiBnZXREYXRhc2V0Q29sb3Ioc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAobmFtZSkgewogICAgICB2YXIgZGF0YXNldCA9IHN0YXRlLnNlcmllcy5maW5kKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIGVsZW1lbnQubmFtZSA9PT0gbmFtZTsKICAgICAgfSk7CiAgICAgIHJldHVybiBkYXRhc2V0ICYmICdsaW5lU3R5bGUnIGluIGRhdGFzZXQgPyBkYXRhc2V0LmxpbmVTdHlsZS5jb2xvciA6IG51bGw7CiAgICB9OwogIH0sCiAgZ2V0U2VyaWVzOiBmdW5jdGlvbiBnZXRTZXJpZXMoc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAobmFtZSkgewogICAgICByZXR1cm4gc3RhdGUuc2VyaWVzLmZpbmQoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZWxlbWVudC5uYW1lID09PSBuYW1lOwogICAgICB9KTsKICAgIH07CiAgfSwKICBnZXRTZXJpZU5hbWVzOiBmdW5jdGlvbiBnZXRTZXJpZU5hbWVzKHN0YXRlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgdmFyIG91dHB1dCA9IFtdOwoKICAgICAgaWYgKHN0YXRlLnNlcmllcy5maW5kSW5kZXgoZnVuY3Rpb24gKHNlcmllKSB7CiAgICAgICAgcmV0dXJuIHNlcmllLm5hbWUgPT09IG5hbWU7CiAgICAgIH0pICE9PSAtMSkgewogICAgICAgIG91dHB1dC5wdXNoKCd0ZW1wZXJhdHVyZScpOwogICAgICB9CgogICAgICBzdGF0ZS5zZXJpZXMuZmlsdGVyKGZ1bmN0aW9uIChzZXJpZSkgewogICAgICAgIHJldHVybiBzZXJpZS5uYW1lLnN0YXJ0c1dpdGgobmFtZSArICctJyk7CiAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKHNlcmllKSB7CiAgICAgICAgb3V0cHV0LnB1c2goc2VyaWUubmFtZS5zdWJzdHIobmFtZS5sZW5ndGggKyAxKSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gb3V0cHV0OwogICAgfTsKICB9LAogIGdldEJvb2xEaXNwbGF5UHdtQXhpczogZnVuY3Rpb24gZ2V0Qm9vbERpc3BsYXlQd21BeGlzKHN0YXRlLCBnZXR0ZXIpIHsKICAgIHZhciBsZWdlbmRzID0gZ2V0dGVyWydnZXRTZWxlY3RlZExlZ2VuZHMnXTsKICAgIHJldHVybiBPYmplY3Qua2V5cyhsZWdlbmRzKS5maW5kKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgcmV0dXJuIGxlZ2VuZHNba2V5XSA9PT0gdHJ1ZSAmJiAoa2V5LmVuZHNXaXRoKCctcG93ZXInKSB8fCBrZXkuZW5kc1dpdGgoJy1zcGVlZCcpKTsKICAgIH0pICE9PSB1bmRlZmluZWQ7CiAgfSwKICBnZXRBdmc6IGZ1bmN0aW9uIGdldEF2ZyhzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChuYW1lLCBzZXJpZU5hbWUpIHsKICAgICAgdmFyIGtleSA9IHNlcmllTmFtZSAmJiBzZXJpZU5hbWUgIT09ICd0ZW1wZXJhdHVyZScgPyBuYW1lICsgJy0nICsgc2VyaWVOYW1lIDogbmFtZTsKICAgICAgdmFyIG1heFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIDEwMDAgKiA2MDsKICAgICAgdmFyIHZhbHVlID0gMDsKICAgICAgdmFyIGNvdW50ZXIgPSAwOwogICAgICBzdGF0ZS5zb3VyY2UuZmlsdGVyKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIGRhdGEuZGF0ZSA+IG1heFRpbWU7CiAgICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoa2V5IGluIGl0ZW0pIHsKICAgICAgICAgIHZhbHVlICs9IGl0ZW1ba2V5XTsKICAgICAgICAgIGNvdW50ZXIrKzsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBpZiAoY291bnRlciAmJiBkYXRhc2V0VHlwZXNJblBlcmNlbnRzLmluY2x1ZGVzKHNlcmllTmFtZSkpIHJldHVybiB2YWx1ZSAvIGNvdW50ZXIgKiAxMDA7ZWxzZSBpZiAoY291bnRlcikgcmV0dXJuIHZhbHVlIC8gY291bnRlcjsKICAgICAgcmV0dXJuIDA7CiAgICB9OwogIH0sCiAgZ2V0QXZnUG93ZXI6IGZ1bmN0aW9uIGdldEF2Z1Bvd2VyKHN0YXRlLCBnZXR0ZXJzKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgcmV0dXJuIGdldHRlcnNbJ2dldEF2ZyddKG5hbWUsICdwb3dlcicpOwogICAgfTsKICB9LAogIGdldEF2Z1NwZWVkOiBmdW5jdGlvbiBnZXRBdmdTcGVlZChzdGF0ZSwgZ2V0dGVycykgewogICAgcmV0dXJuIGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgIHJldHVybiBnZXR0ZXJzWydnZXRBdmcnXShuYW1lLCAnc3BlZWQnKTsKICAgIH07CiAgfSwKICBnZXRTZWxlY3RlZExlZ2VuZHM6IGZ1bmN0aW9uIGdldFNlbGVjdGVkTGVnZW5kcyhzdGF0ZSwgZ2V0dGVycywgcm9vdFN0YXRlLCByb290R2V0dGVycykgewogICAgdmFyIF9yb290U3RhdGUkcHJpbnRlciwgX3Jvb3RTdGF0ZSRwcmludGVyJGhlLCBfcm9vdFN0YXRlJHByaW50ZXIkaGUyOwoKICAgIHZhciBzZWxlY3RlZCA9IHt9OwoKICAgIGlmICgoX3Jvb3RTdGF0ZSRwcmludGVyID0gcm9vdFN0YXRlLnByaW50ZXIpICE9PSBudWxsICYmIF9yb290U3RhdGUkcHJpbnRlciAhPT0gdm9pZCAwICYmIChfcm9vdFN0YXRlJHByaW50ZXIkaGUgPSBfcm9vdFN0YXRlJHByaW50ZXIuaGVhdGVycykgIT09IG51bGwgJiYgX3Jvb3RTdGF0ZSRwcmludGVyJGhlICE9PSB2b2lkIDAgJiYgKF9yb290U3RhdGUkcHJpbnRlciRoZTIgPSBfcm9vdFN0YXRlJHByaW50ZXIkaGUuYXZhaWxhYmxlX3NlbnNvcnMpICE9PSBudWxsICYmIF9yb290U3RhdGUkcHJpbnRlciRoZTIgIT09IHZvaWQgMCAmJiBfcm9vdFN0YXRlJHByaW50ZXIkaGUyLmxlbmd0aCkgewogICAgICB2YXIgX3Jvb3RTdGF0ZSRwcmludGVyMiwgX3Jvb3RTdGF0ZSRwcmludGVyMiRoOwoKICAgICAgKF9yb290U3RhdGUkcHJpbnRlcjIgPSByb290U3RhdGUucHJpbnRlcikgPT09IG51bGwgfHwgX3Jvb3RTdGF0ZSRwcmludGVyMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9yb290U3RhdGUkcHJpbnRlcjIkaCA9IF9yb290U3RhdGUkcHJpbnRlcjIuaGVhdGVycykgPT09IG51bGwgfHwgX3Jvb3RTdGF0ZSRwcmludGVyMiRoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcm9vdFN0YXRlJHByaW50ZXIyJGguYXZhaWxhYmxlX3NlbnNvcnMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgaWYgKHJvb3RTdGF0ZS5wcmludGVyICYmIGtleSBpbiAocm9vdFN0YXRlID09PSBudWxsIHx8IHJvb3RTdGF0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcm9vdFN0YXRlLnByaW50ZXIpKSB7CiAgICAgICAgICB2YXIgbmFtZSA9IGtleTsKICAgICAgICAgIGlmIChrZXkuaW5jbHVkZXMoJyAnKSkgbmFtZSA9IGtleS5zcGxpdCgnICcpWzFdOwogICAgICAgICAgZGF0YXNldFR5cGVzLmZvckVhY2goZnVuY3Rpb24gKGRhdGFzZXRUeXBlKSB7CiAgICAgICAgICAgIGlmIChyb290U3RhdGUgIT09IG51bGwgJiYgcm9vdFN0YXRlICE9PSB2b2lkIDAgJiYgcm9vdFN0YXRlLnByaW50ZXIgJiYgcm9vdFN0YXRlICE9PSBudWxsICYmIHJvb3RTdGF0ZSAhPT0gdm9pZCAwICYmIHJvb3RTdGF0ZS5wcmludGVyW2tleV0gJiYgZGF0YXNldFR5cGUgaW4gKHJvb3RTdGF0ZSA9PT0gbnVsbCB8fCByb290U3RhdGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJvb3RTdGF0ZS5wcmludGVyW2tleV0pKSB7CiAgICAgICAgICAgICAgdmFyIHRtcE5hbWUgPSBkYXRhc2V0VHlwZSA9PT0gJ3RlbXBlcmF0dXJlJyA/IG5hbWUgOiBuYW1lICsgJy0nICsgZGF0YXNldFR5cGU7CiAgICAgICAgICAgICAgc2VsZWN0ZWRbdG1wTmFtZV0gPSByb290R2V0dGVyc1snZ3VpL2dldERhdGFzZXRWYWx1ZSddKHsKICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICB0eXBlOiBkYXRhc2V0VHlwZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICAgIHJldHVybiBzZWxlY3RlZDsKICB9Cn07"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/printer/tempHistory/getters.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,SAAQ,YAAR,EAAsB,sBAAtB,QAAmD,mBAAnD;AASA,OAAO,IAAM,OAAO,GAAmD;AAEnE,EAAA,eAAe,EAAE,yBAAA,KAAK;AAAA,WAAI,UAAC,IAAD,EAAiB;AACvC,UAAM,OAAO,GAAG,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,UAAA,OAAO;AAAA,eAAI,OAAO,CAAC,IAAR,KAAiB,IAArB;AAAA,OAAzB,CAAhB;AAEA,aAAQ,OAAO,IAAI,eAAe,OAA3B,GAAsC,OAAO,CAAC,SAAR,CAAkB,KAAxD,GAAgE,IAAvE;AACH,KAJqB;AAAA,GAF6C;AAQnE,EAAA,SAAS,EAAE,mBAAA,KAAK;AAAA,WAAI,UAAC,IAAD,EAAiB;AACjC,aAAO,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,UAAA,OAAO;AAAA,eAAI,OAAO,CAAC,IAAR,KAAiB,IAArB;AAAA,OAAzB,CAAP;AACH,KAFe;AAAA,GARmD;AAYnE,EAAA,aAAa,EAAE,uBAAC,KAAD;AAAA,WAAW,UAAC,IAAD,EAAiB;AACvC,UAAM,MAAM,GAAa,EAAzB;;AAEA,UAAI,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,UAAC,KAAD;AAAA,eAAyC,KAAK,CAAC,IAAN,KAAe,IAAxD;AAAA,OAAvB,MAAyF,CAAC,CAA9F,EAAiG;AAC7F,QAAA,MAAM,CAAC,IAAP,CAAY,aAAZ;AACH;;AAED,MAAA,KAAK,CAAC,MAAN,CAAa,MAAb,CAAoB,UAAC,KAAD;AAAA,eAAyC,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,IAAI,GAAC,GAA3B,CAAzC;AAAA,OAApB,EAA8F,OAA9F,CAAsG,UAAC,KAAD,EAAU;AAC5G,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,IAAN,CAAW,MAAX,CAAkB,IAAI,CAAC,MAAL,GAAc,CAAhC,CAAZ;AACH,OAFD;AAIA,aAAO,MAAP;AACH,KAZc;AAAA,GAZoD;AA0BnE,EAAA,qBAAqB,EAAE,+BAAC,KAAD,EAAQ,MAAR,EAAkB;AACrC,QAAM,OAAO,GAAG,MAAM,CAAC,oBAAD,CAAtB;AAEA,WAAO,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,IAArB,CAA0B,UAAA,GAAG,EAAG;AACnC,aACI,OAAO,CAAC,GAAD,CAAP,KAAiB,IAAjB,KACI,GAAG,CAAC,QAAJ,CAAa,QAAb,KACA,GAAG,CAAC,QAAJ,CAAa,QAAb,CAFJ,CADJ;AAMH,KAPM,MAOA,SAPP;AAQH,GArCkE;AAuCnE,EAAA,MAAM,EAAE,gBAAA,KAAK;AAAA,WAAI,UAAC,IAAD,EAAe,SAAf,EAAoC;AACjD,UAAM,GAAG,GAAG,SAAS,IAAI,SAAS,KAAK,aAA3B,GAA2C,IAAI,GAAC,GAAL,GAAS,SAApD,GAAgE,IAA5E;AACA,UAAM,OAAO,GAAG,IAAI,IAAJ,GAAW,OAAX,KAAwB,OAAO,EAA/C;AACA,UAAI,KAAK,GAAG,CAAZ;AACA,UAAI,OAAO,GAAG,CAAd;AAEA,MAAA,KAAK,CAAC,MAAN,CAAa,MAAb,CAAoB,UAAA,IAAI;AAAA,eAAI,IAAI,CAAC,IAAL,GAAY,OAAhB;AAAA,OAAxB,EAAiD,OAAjD,CAAyD,UAAC,IAAD,EAA6C;AAClG,YAAI,GAAG,IAAI,IAAX,EAAiB;AACb,UAAA,KAAK,IAAI,IAAI,CAAC,GAAD,CAAb;AACA,UAAA,OAAO;AACV;AACJ,OALD;AAOA,UAAI,OAAO,IAAI,sBAAsB,CAAC,QAAvB,CAAgC,SAAhC,CAAf,EAA2D,OAAQ,KAAK,GAAG,OAAT,GAAoB,GAA3B,CAA3D,KACK,IAAI,OAAJ,EAAa,OAAQ,KAAK,GAAG,OAAhB;AAElB,aAAO,CAAP;AACH,KAjBY;AAAA,GAvCsD;AA0DnE,EAAA,WAAW,EAAE,qBAAC,KAAD,EAAQ,OAAR;AAAA,WAAoB,UAAC,IAAD,EAAiB;AAC9C,aAAO,OAAO,CAAC,QAAD,CAAP,CAAkB,IAAlB,EAAwB,OAAxB,CAAP;AACH,KAFY;AAAA,GA1DsD;AA8DnE,EAAA,WAAW,EAAE,qBAAC,KAAD,EAAQ,OAAR;AAAA,WAAoB,UAAC,IAAD,EAAiB;AAC9C,aAAO,OAAO,CAAC,QAAD,CAAP,CAAkB,IAAlB,EAAwB,OAAxB,CAAP;AACH,KAFY;AAAA,GA9DsD;AAkEnE,EAAA,kBAAkB,EAAE,4BAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,WAA5B,EAA2C;AAAA;;AAK3D,QAAM,QAAQ,GAAY,EAA1B;;AAEA,8BAAI,SAAS,CAAC,OAAd,wEAAI,mBAAmB,OAAvB,4EAAI,sBAA4B,iBAAhC,mDAAI,uBAA+C,MAAnD,EAA2D;AAAA;;AACvD,6BAAA,SAAS,CAAC,OAAV,qGAAmB,OAAnB,gFAA4B,iBAA5B,CAA8C,OAA9C,CAAsD,UAAC,GAAD,EAAgB;AAClE,YAAI,SAAS,CAAC,OAAV,IAAqB,GAAG,KAAI,SAAJ,aAAI,SAAJ,uBAAI,SAAS,CAAE,OAAf,CAA5B,EAAoD;AAChD,cAAI,IAAI,GAAG,GAAX;AACA,cAAI,GAAG,CAAC,QAAJ,CAAa,GAAb,CAAJ,EAAuB,IAAI,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAP;AAEvB,UAAA,YAAY,CAAC,OAAb,CAAqB,UAAC,WAAD,EAAwB;AACzC,gBAAI,SAAS,SAAT,IAAA,SAAS,WAAT,IAAA,SAAS,CAAE,OAAX,IAAsB,SAAtB,aAAsB,SAAtB,eAAsB,SAAS,CAAE,OAAX,CAAmB,GAAnB,CAAtB,IAAiD,WAAW,KAAI,SAAJ,aAAI,SAAJ,uBAAI,SAAS,CAAE,OAAX,CAAmB,GAAnB,CAAJ,CAAhE,EAA6F;AACzF,kBAAM,OAAO,GAAG,WAAW,KAAK,aAAhB,GAAgC,IAAhC,GAAuC,IAAI,GAAC,GAAL,GAAS,WAAhE;AACA,cAAA,QAAQ,CAAC,OAAD,CAAR,GAAoB,WAAW,CAAC,qBAAD,CAAX,CAAmC;AAAC,gBAAA,IAAI,EAAE,IAAP;AAAa,gBAAA,IAAI,EAAE;AAAnB,eAAnC,CAApB;AACH;AACJ,WALD;AAMH;AACJ,OAZD;AAaH;;AAED,WAAO,QAAP;AACH;AA1FkE,CAAhE","sourcesContent":["import {datasetTypes, datasetTypesInPercents} from '@/store/variables'\nimport {GetterTree} from 'vuex'\nimport {\n    PrinterTempHistoryState,\n    PrinterTempHistoryStateSerie,\n    PrinterTempHistoryStateSourceEntry\n} from '@/store/printer/tempHistory/types'\nimport {RootState} from '@/store/types'\n\nexport const getters: GetterTree<PrinterTempHistoryState, RootState> = {\n\n    getDatasetColor: state => (name: string) => {\n        const dataset = state.series.find(element => element.name === name)\n\n        return (dataset && 'lineStyle' in dataset) ? dataset.lineStyle.color : null\n    },\n\n    getSeries: state => (name: string) => {\n        return state.series.find(element => element.name === name)\n    },\n\n    getSerieNames: (state) => (name: string) => {\n        const output: string[] = []\n\n        if (state.series.findIndex((serie: PrinterTempHistoryStateSerie) => serie.name === name) !== -1) {\n            output.push('temperature')\n        }\n\n        state.series.filter((serie: PrinterTempHistoryStateSerie) => serie.name.startsWith(name+'-')).forEach((serie) => {\n            output.push(serie.name.substr(name.length + 1))\n        })\n\n        return output\n    },\n\n    getBoolDisplayPwmAxis: (state, getter) => {\n        const legends = getter['getSelectedLegends']\n\n        return Object.keys(legends).find(key => {\n            return (\n                legends[key] === true && (\n                    key.endsWith('-power') ||\n                    key.endsWith('-speed')\n                )\n            )\n        }) !== undefined\n    },\n\n    getAvg: state => (name: string, serieName: string) => {\n        const key = serieName && serieName !== 'temperature' ? name+'-'+serieName : name\n        const maxTime = new Date().getTime() - (1000 * 60)\n        let value = 0\n        let counter = 0\n\n        state.source.filter(data => data.date > maxTime).forEach((item: PrinterTempHistoryStateSourceEntry) => {\n            if (key in item) {\n                value += item[key]\n                counter++\n            }\n        })\n\n        if (counter && datasetTypesInPercents.includes(serieName)) return (value / counter) * 100\n        else if (counter) return (value / counter)\n\n        return 0\n    },\n\n    getAvgPower: (state, getters) => (name: string) => {\n        return getters['getAvg'](name, 'power')\n    },\n\n    getAvgSpeed: (state, getters) => (name: string) => {\n        return getters['getAvg'](name, 'speed')\n    },\n\n    getSelectedLegends: (state, getters, rootState, rootGetters) => {\n        interface legends {\n            [key: string]: boolean\n        }\n\n        const selected: legends = {}\n\n        if (rootState.printer?.heaters?.available_sensors?.length) {\n            rootState.printer?.heaters?.available_sensors.forEach((key: string) => {\n                if (rootState.printer && key in rootState?.printer) {\n                    let name = key\n                    if (key.includes(' ')) name = key.split(' ')[1]\n\n                    datasetTypes.forEach((datasetType: string) => {\n                        if (rootState?.printer && rootState?.printer[key] && datasetType in rootState?.printer[key]) {\n                            const tmpName = datasetType === 'temperature' ? name : name+'-'+datasetType\n                            selected[tmpName] = rootGetters['gui/getDatasetValue']({name: name, type: datasetType})\n                        }\n                    })\n                }\n            })\n        }\n\n        return selected\n    },\n}"],"sourceRoot":""}]}