{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGCodeViewerTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGCodeViewerTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYW5uZS1zb3BoaWVyb3kvRG93bmxvYWRzL01haW5zYWlsL21haW5zYWlsLW1haW50ZW5hbmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2FubmUtc29waGllcm95L0Rvd25sb2Fkcy9NYWluc2FpbC9tYWluc2FpbC1tYWludGVuYW5jZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9hbm5lLXNvcGhpZXJveS9Eb3dubG9hZHMvTWFpbnNhaWwvbWFpbnNhaWwtbWFpbnRlbmFuY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvYW5uZS1zb3BoaWVyb3kvRG93bmxvYWRzL01haW5zYWlsL21haW5zYWlsLW1haW50ZW5hbmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlci5qcyI7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgTWl4aW5zIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCBCYXNlTWl4aW4gZnJvbSAnQC9jb21wb25lbnRzL21peGlucy9iYXNlJzsKaW1wb3J0IFNldHRpbmdzUm93IGZyb20gJ0AvY29tcG9uZW50cy9zZXR0aW5ncy9TZXR0aW5nc1Jvdy52dWUnOwppbXBvcnQgeyBEZWJvdW5jZSB9IGZyb20gJ3Z1ZS1kZWJvdW5jZS1kZWNvcmF0b3InOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7Cgp2YXIgU2V0dGluZ3NHQ29kZVZpZXdlclRhYiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX01peGlucykgewogIF9pbmhlcml0cyhTZXR0aW5nc0dDb2RlVmlld2VyVGFiLCBfTWl4aW5zKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTZXR0aW5nc0dDb2RlVmlld2VyVGFiKTsKCiAgZnVuY3Rpb24gU2V0dGluZ3NHQ29kZVZpZXdlclRhYigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZXR0aW5nc0dDb2RlVmlld2VyVGFiKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU2V0dGluZ3NHQ29kZVZpZXdlclRhYiwgW3sKICAgIGtleTogInNob3dBeGVzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmdjb2RlVmlld2VyLnNob3dBeGVzOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NhdmVTZXR0aW5nJywgewogICAgICAgIG5hbWU6ICdnY29kZVZpZXdlci5zaG93QXhlcycsCiAgICAgICAgdmFsdWU6IG5ld1ZhbAogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJleHRydWRlckNvbG9ycyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5nY29kZVZpZXdlci5leHRydWRlckNvbG9yczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb2xvcnNVcGRhdGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb2xvcnNVcGRhdGVkKHZhbHVlLCBpbmRleCkgewogICAgICB2YXIgY29sb3JzID0gdGhpcy5leHRydWRlckNvbG9yczsKICAgICAgY29sb3JzW2luZGV4XSA9IHZhbHVlLmhleDsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9zYXZlU2V0dGluZycsIHsKICAgICAgICBuYW1lOiAnZ2NvZGVWaWV3ZXIuZXh0cnVkZXJDb2xvcnMnLAogICAgICAgIHZhbHVlOiBjb2xvcnMKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYmFja2dyb3VuZENvbG9yIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmdjb2RlVmlld2VyLmJhY2tncm91bmRDb2xvcjsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWwpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9zYXZlU2V0dGluZycsIHsKICAgICAgICBuYW1lOiAnZ2NvZGVWaWV3ZXIuYmFja2dyb3VuZENvbG9yJywKICAgICAgICB2YWx1ZTogbmV3VmFsCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdyaWRDb2xvciIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5nY29kZVZpZXdlci5ncmlkQ29sb3I7CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvc2F2ZVNldHRpbmcnLCB7CiAgICAgICAgbmFtZTogJ2djb2RlVmlld2VyLmdyaWRDb2xvcicsCiAgICAgICAgdmFsdWU6IG5ld1ZhbAogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVDb2xvclZhbHVlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVDb2xvclZhbHVlKGNvbG9yRWxlbWVudCwgbmV3VmFsKSB7CiAgICAgIFZ1ZS5zZXQodGhpcywgY29sb3JFbGVtZW50LCB0aGlzLmNsZWFyQ29sb3JPYmplY3QobmV3VmFsKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xlYXJDb2xvck9iamVjdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXJDb2xvck9iamVjdChjb2xvcikgewogICAgICBpZiAoX3R5cGVvZihjb2xvcikgPT09ICdvYmplY3QnICYmICdoZXgnIGluIGNvbG9yKSBjb2xvciA9IGNvbG9yLmhleDsKICAgICAgaWYgKGNvbG9yLmxlbmd0aCA+IDcpIGNvbG9yID0gY29sb3Iuc3Vic3RyKDAsIDcpOwogICAgICByZXR1cm4gY29sb3I7CiAgICB9CiAgfSwgewogICAga2V5OiAibWluRmVlZCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5nY29kZVZpZXdlci5taW5GZWVkOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NhdmVTZXR0aW5nJywgewogICAgICAgIG5hbWU6ICdnY29kZVZpZXdlci5taW5GZWVkJywKICAgICAgICB2YWx1ZTogbmV3VmFsCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogIm1heEZlZWQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZ2NvZGVWaWV3ZXIubWF4RmVlZDsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWwpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9zYXZlU2V0dGluZycsIHsKICAgICAgICBuYW1lOiAnZ2NvZGVWaWV3ZXIubWF4RmVlZCcsCiAgICAgICAgdmFsdWU6IG5ld1ZhbAogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtaW5GZWVkQ29sb3IiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZ2NvZGVWaWV3ZXIubWluRmVlZENvbG9yOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NhdmVTZXR0aW5nJywgewogICAgICAgIG5hbWU6ICdnY29kZVZpZXdlci5taW5GZWVkQ29sb3InLAogICAgICAgIHZhbHVlOiBuZXdWYWwKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWF4RmVlZENvbG9yIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmdjb2RlVmlld2VyLm1heEZlZWRDb2xvcjsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWwpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9zYXZlU2V0dGluZycsIHsKICAgICAgICBuYW1lOiAnZ2NvZGVWaWV3ZXIubWF4RmVlZENvbG9yJywKICAgICAgICB2YWx1ZTogbmV3VmFsCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImZlZWRCbHVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmZWVkQmx1cigpIHsKICAgICAgaWYgKHRoaXMubWluRmVlZCA8IDEpIHRoaXMubWluRmVlZCA9IDE7CiAgICAgIGlmICh0aGlzLm1heEZlZWQgPCB0aGlzLm1pbkZlZWQpIHRoaXMubWF4RmVlZCA9IHRoaXMubWluRmVlZCArIDE7CiAgICB9CiAgfSwgewogICAga2V5OiAicHJvZ3Jlc3NDb2xvciIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5nY29kZVZpZXdlci5wcm9ncmVzc0NvbG9yOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NhdmVTZXR0aW5nJywgewogICAgICAgIG5hbWU6ICdnY29kZVZpZXdlci5wcm9ncmVzc0NvbG9yJywKICAgICAgICB2YWx1ZTogbmV3VmFsCiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFNldHRpbmdzR0NvZGVWaWV3ZXJUYWI7Cn0oTWl4aW5zKEJhc2VNaXhpbikpOwoKX19kZWNvcmF0ZShbRGVib3VuY2UoNTAwKV0sIFNldHRpbmdzR0NvZGVWaWV3ZXJUYWIucHJvdG90eXBlLCAiY29sb3JzVXBkYXRlZCIsIG51bGwpOwoKX19kZWNvcmF0ZShbRGVib3VuY2UoNTAwKV0sIFNldHRpbmdzR0NvZGVWaWV3ZXJUYWIucHJvdG90eXBlLCAidXBkYXRlQ29sb3JWYWx1ZSIsIG51bGwpOwoKU2V0dGluZ3NHQ29kZVZpZXdlclRhYiA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgU2V0dGluZ3NSb3c6IFNldHRpbmdzUm93CiAgfQp9KV0sIFNldHRpbmdzR0NvZGVWaWV3ZXJUYWIpOwpleHBvcnQgZGVmYXVsdCBTZXR0aW5nc0dDb2RlVmlld2VyVGFiOw=="},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGCodeViewerTab.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport {Debounce} from 'vue-debounce-decorator'\nimport Vue from 'vue'\n\n@Component({\n    components: {SettingsRow},\n})\nexport default class SettingsGCodeViewerTab extends Mixins(BaseMixin) {\n    get showAxes(): boolean {\n        return this.$store.state.gui.gcodeViewer.showAxes\n    }\n\n    set showAxes(newVal: boolean) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.showAxes', value: newVal})\n    }\n\n    get extruderColors(): Array<string> {\n        return this.$store.state.gui.gcodeViewer.extruderColors\n    }\n\n    @Debounce(500)\n    colorsUpdated(value: any, index: number): void {\n        let colors = this.extruderColors\n        colors[index] = value.hex\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.extruderColors', value: colors})\n    }\n\n    get backgroundColor(): string {\n        return this.$store.state.gui.gcodeViewer.backgroundColor\n    }\n\n    set backgroundColor(newVal: string) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.backgroundColor', value: newVal})\n    }\n\n    get gridColor(): string {\n        return this.$store.state.gui.gcodeViewer.gridColor\n    }\n\n    set gridColor(newVal: string) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.gridColor', value: newVal})\n    }\n\n    @Debounce(500)\n    updateColorValue(colorElement: string, newVal: any): void {\n        Vue.set(this, colorElement, this.clearColorObject(newVal))\n    }\n\n    clearColorObject(color: any): string {\n        if (typeof color === 'object' && 'hex' in color) color = color.hex\n        if (color.length > 7) color = color.substr(0, 7)\n        return color\n    }\n\n    get minFeed(): number {\n        return this.$store.state.gui.gcodeViewer.minFeed\n    }\n\n    set minFeed(newVal: number) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.minFeed', value: newVal})\n    }\n\n    get maxFeed(): number {\n        return this.$store.state.gui.gcodeViewer.maxFeed\n    }\n\n    set maxFeed(newVal: number) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.maxFeed', value: newVal})\n    }\n\n    get minFeedColor(): string {\n        return this.$store.state.gui.gcodeViewer.minFeedColor\n    }\n\n    set minFeedColor(newVal: string) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.minFeedColor', value: newVal})\n    }\n\n    get maxFeedColor(): string {\n        return this.$store.state.gui.gcodeViewer.maxFeedColor\n    }\n\n    set maxFeedColor(newVal: string) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.maxFeedColor', value: newVal})\n    }\n\n    feedBlur(): void {\n        if (this.minFeed < 1) this.minFeed = 1\n        if (this.maxFeed < this.minFeed) this.maxFeed = this.minFeed + 1\n    }\n\n    get progressColor(): string {\n        return this.$store.state.gui.gcodeViewer.progressColor\n    }\n\n    set progressColor(newVal: string) {\n        this.$store.dispatch('gui/saveSetting', {name: 'gcodeViewer.progressColor', value: newVal})\n    }\n}\n"],"sourceRoot":""}]}