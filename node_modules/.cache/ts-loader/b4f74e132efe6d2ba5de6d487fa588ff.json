{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/farm/printer/getters.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/farm/printer/getters.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/farm/printer/getters.ts"],"names":[],"mappings":"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","sourcesContent":["import {defaultLogoColor, themeDir, thumbnailBigMin} from '@/store/variables'\nimport {convertName} from '@/plugins/helpers'\nimport {GetterTree} from 'vuex'\nimport {FarmPrinterState} from '@/store/farm/printer/types'\nimport {GuiWebcamStateWebcam} from '@/store/gui/webcams/types'\n\n// eslint-disable-next-line\nexport const getters: GetterTree<FarmPrinterState, any> = {\n\n    getSocketUrl: (state) => {\n        return state.socket.protocol+'://'+state.socket.hostname+':'+state.socket.port+'/websocket'\n    },\n\n    getSocketData: (state) => {\n        return state.socket\n    },\n\n    isCurrentPrinter: (state, getters, rootState) => {\n        return (\n            rootState.socket.hostname === state.socket.hostname &&\n\t\t\trootState.socket.port === state.socket.port\n        )\n    },\n\n    // eslint-disable-next-line\n\tgetSetting: (state) => (name: string, fallback: any) => {\n        return state.settings[name] ?? fallback\n    },\n\n    getPrinterName: (state) => {\n        if (\n            'gui' in state.data &&\n\t\t\t'general' in state.data.gui &&\n\t\t\t'printername' in state.data.gui.general &&\n\t\t\tstate.data.gui.general.printername !== ''\n        ) return state.data.gui.general.printername\n\n        return state.socket.port !== 80 ? state.socket.hostname+':'+state.socket.port : state.socket.hostname\n    },\n\n    getPrinterSocketState: (state) => {\n        return state.socket\n    },\n\n    getLogoColor: (state) => {\n        return state.data.gui?.uiSettings?.logo ?? defaultLogoColor\n    },\n\n    getStatus: (state, getters) => {\n        if (!state.socket.isConnected) {\n            return state.socket.isConnecting ? 'Connecting...' : 'Disconnected'\n        } else if (!state.server.klippy_connected) {\n            return 'ERROR'\n        } else if (state.data?.print_stats?.state) {\n            if (state.data.print_stats.state === 'printing') {\n                const percent = getters['getPrintPercent']\n\n                return Math.round(percent*100)+'% Printing'\n            }\n\n            return state.data.print_stats.state.charAt(0).toUpperCase() + state.data.print_stats.state.slice(1)\n        }\n\n        return 'Unknown'\n    },\n\n    getCurrentFilename: (state) => {\n        return state.data.print_stats?.filename ?? ''\n    },\n\n    getPrintPercent: (state) => {\n        if (\n\t\t\tstate.current_file?.filename &&\n\t\t\tstate.current_file?.gcode_start_byte &&\n\t\t\tstate.current_file?.gcode_end_byte &&\n\t\t\tstate.current_file.filename === state.data.print_stats.filename\n        ) {\n            if (state.data.virtual_sdcard.file_position <= state.current_file.gcode_start_byte) return 0\n            if (state.data.virtual_sdcard.file_position >= state.current_file?.gcode_end_byte) return 1\n\n            const currentPosition = state.data.virtual_sdcard.file_position - state.current_file.gcode_start_byte\n            const maxPosition = state.current_file.gcode_end_byte - state.current_file.gcode_start_byte\n\n            if (currentPosition > 0 && maxPosition > 0) return 1 / maxPosition * currentPosition\n        }\n\n        return state.data.virtual_sdcard?.progress ?? 0\n    },\n\n    getImage: state => {\n        if (state.current_file.filename && state.current_file.thumbnails?.length) {\n            const indexLastDir = state.current_file.filename.lastIndexOf('/')\n            const dir = (indexLastDir !== -1) ? state.current_file.filename.substr(0, indexLastDir)+'/' : ''\n            const thumbnail = state.current_file.thumbnails.find(thumb => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail && 'relative_path' in thumbnail) return '//'+state.socket.hostname+':'+state.socket.port+'/server/files/gcodes/'+dir+thumbnail.relative_path\n        }\n\n        return '/img/sidebar-background.svg'\n    },\n\n    getThemeFileUrl: (state) => (acceptName: string, acceptExtensions: string[]) => {\n        const file = state.theme_files.find((element: string) =>\n            element.substr(0, element.lastIndexOf('.')) === themeDir+'/'+acceptName &&\n\t\t\tacceptExtensions.includes(element.substr(element.lastIndexOf('.')+1))\n        )\n\n        return (file) ? '//'+state.socket.hostname+':'+state.socket.port+'/server/files/config/'+file : null\n    },\n\n    getLogo: (state, getters) => {\n        const acceptName = 'sidebar-logo'\n        const acceptExtensions = ['gif', 'jpg', 'png', 'gif', 'svg']\n\n        return getters['getThemeFileUrl'](acceptName, acceptExtensions)\n    },\n\n    getPosition: state => {\n        if (\n            'toolhead' in state.data &&\n\t\t\t'position' in state.data.toolhead\n        ) return state.data.toolhead.position\n\n        return []\n    },\n\n    getPrinterPreview: (state, getters) => {\n        if (!state.server.klippy_connected) return []\n\n        const output = []\n\n        Object.keys(state.data).filter((key) => key.startsWith('extruder')).forEach((key) => {\n            if (state.data[key]?.temperature !== undefined && state.data[key]?.target !== undefined) {\n                output.push({\n                    name: convertName(key),\n                    value: state.data[key].temperature?.toFixed(0)+'° / '+state.data[key].target?.toFixed(0)+'°',\n                })\n            }\n        })\n\n        if (state.data.heater_bed?.temperature !== undefined && state.data.heater_bed?.target !== undefined) {\n            output.push({\n                name: convertName('heater_bed'),\n                value: state.data.heater_bed.temperature.toFixed(0)+'° / '+state.data.heater_bed.target.toFixed(0)+'°'\n            })\n        }\n\n        if (state.data['temperature_fan chamber']?.temperature !== undefined && state.data['temperature_fan chamber']?.target !== undefined) {\n            output.push({\n                name: convertName('chamber'),\n                value: state.data['temperature_fan chamber'].temperature.toFixed(0)+'° / '+state.data['temperature_fan chamber'].target.toFixed(0)+'°'\n            })\n        }\n\n        if ('temperature_sensor chamber' in state.data) {\n            output.push({\n                name: convertName('chamber'),\n                value: state.data['temperature_sensor chamber'].temperature.toFixed(0)+'°'\n            })\n        }\n\n        if (\n            'print_stats' in state.data &&\n\t\t\t'state' in state.data.print_stats &&\n\t\t\tstate.data.print_stats.state === 'printing' &&\n\t\t\tgetters['getPrintPercent'] > 0\n        ) {\n            const eta = new Date(getters.estimated_time_eta)\n            const h = eta.getHours() >= 10 ? eta.getHours() : '0'+eta.getHours()\n            const m = eta.getMinutes() >= 10 ? eta.getMinutes() : '0'+eta.getMinutes()\n\n            output.push({\n                name: 'ETA',\n                value: getters.estimated_time_eta > 0 ? h+':'+m : '--',\n                file: getters.estimated_time_file,\n                filament: getters.estimated_time_filament,\n                slicer: getters.estimated_time_slicer,\n                eta: getters.estimated_time_eta,\n            })\n        }\n\n        return output\n    },\n\n    estimated_time_file: (state, getters) => {\n        if (\n\t\t\tstate.data.print_stats?.print_duration > 0 && getters.getPrintPercent > 0) {\n            return (state.data.print_stats.print_duration / getters.getPrintPercent - state.data.print_stats.print_duration).toFixed(0)\n        }\n\n        return 0\n    },\n\n    estimated_time_filament: (state) => {\n        if (\n\t\t\tstate.data.print_stats?.print_duration &&\n\t\t\tstate.data.print_stats?.filament_used &&\n\t\t\tstate.current_file.filament_total &&\n\n\t\t\tstate.data.print_stats.filament_used > 0 &&\n\t\t\tstate.current_file.filament_total > state.data.print_stats.filament_used) {\n            return (state.data.print_stats.print_duration / (state.data.print_stats.filament_used / state.current_file.filament_total) - state.data.print_stats.print_duration).toFixed(0)\n        }\n\n        return 0\n    },\n\n    estimated_time_slicer: (state) => {\n        if (\n            state.data.print_stats &&\n\t\t\tstate.data.print_stats?.print_duration &&\n\t\t\tstate.current_file?.estimated_time &&\n\n\t\t\tstate.current_file?.estimated_time > state.data.print_stats.print_duration) {\n            return (state.current_file.estimated_time - state.data.print_stats.print_duration).toFixed(0)\n        }\n\n        return 0\n    },\n\n    estimated_time_eta: (state, getters) => {\n        let time = 0\n        let timeCount = 0\n        const boolFileCalc = state.data.gui?.general?.calcEtaTime?.includes('file') ?? true\n        const boolFilamentCalc = state.data.gui?.general?.calcEtaTime?.includes('filament') ?? true\n        const boolSlicerCalc = state.data.gui?.general?.calcEtaTime?.includes('slicer') ?? true\n\n        if (boolFileCalc && getters.estimated_time_file > 0) {\n            time += parseInt(getters.estimated_time_file)\n            timeCount++\n        }\n\n        if (boolFilamentCalc && getters.estimated_time_filament > 0) {\n            time += parseInt(getters.estimated_time_filament)\n            timeCount++\n        }\n\n        if (boolSlicerCalc && getters.estimated_time_slicer > 0) {\n            time += parseInt(getters.estimated_time_slicer)\n            timeCount++\n        }\n\n        if (time && timeCount) return Date.now() + (time / timeCount) * 1000\n\n        return 0\n    },\n\n    getPrinterWebcams: (state) => {\n        const webcams: GuiWebcamStateWebcam[] = []\n\n        if (state.data.webcams) {\n            Object.keys(state.data.webcams).forEach((id: string) => {\n                webcams.push({...state.data?.webcams[id], id})\n            })\n        }\n\n        return webcams\n    }\n}"],"sourceRoot":""}]}