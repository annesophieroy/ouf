{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/editor/actions.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/editor/actions.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/editor/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import {ActionTree} from 'vuex'\nimport {EditorState} from '@/store/editor/types'\nimport {RootState} from '@/store/types'\nimport axios from 'axios'\nimport { sha256 } from 'js-sha256'\nimport Vue from 'vue'\nimport i18n from '@/plugins/i18n'\n\nexport const actions: ActionTree<EditorState, RootState> = {\n    reset({ commit }) {\n        commit('reset')\n    },\n\n    openFile({ state, dispatch, commit, rootGetters }, payload) {\n        const fullFilepath = payload.root+payload.path+'/'+payload.filename\n        const url = rootGetters['socket/getUrl'] + '/server/files/' + encodeURI(fullFilepath) + `?${Date.now()}`\n\n        if (state.cancelToken) dispatch('cancelLoad')\n\n        const CancelToken = axios.CancelToken\n        const source = CancelToken.source()\n        commit('updateCancelTokenSource', source)\n        commit('updateLoaderState', true)\n\n        commit('setFilename', payload.filename)\n        commit('setPermissions', payload.permissions)\n\n        axios.get(url, {\n            cancelToken: source.token,\n            onDownloadProgress: (progressEvent) => {\n                const total = progressEvent.total > 0 ? progressEvent.total : (payload.size ?? 0)\n\n                let speedOutput: string = state.loaderProgress.speed\n                let lastTimestamp = state.loaderProgress.lastTimestamp\n                let lastLoaded = state.loaderProgress.lastLoaded\n                const diffTime = progressEvent.timeStamp - state.loaderProgress.lastTimestamp\n                if (diffTime > 500) {\n                    const diffData = progressEvent.loaded - lastLoaded\n                    let speed = (diffData / diffTime)\n                    const unit = ['kB', 'MB', 'GB']\n                    let unitSelect = 0\n                    while (speed > 1024) {\n                        speed /= 1024.0\n                        unitSelect = Math.min(2, unitSelect + 1)\n                    }\n                    speedOutput = speed.toFixed(2) + unit[unitSelect]\n                    lastTimestamp = progressEvent.timeStamp\n                    lastLoaded = progressEvent.loaded\n                }\n\n                this.commit('editor/updateLoader', {\n                    direction: 'downloading',\n                    speed: speedOutput,\n                    loaded: progressEvent.loaded,\n                    total,\n                    lastLoaded,\n                    lastTimestamp\n                })\n            },\n            responseType: 'blob'\n        }).then(res => res.data.text())\n            .then(file => {\n                commit('openFile', {\n                    filename: payload.filename,\n                    fileroot: payload.root,\n                    filepath: payload.path,\n                    file\n                })\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    dispatch('clearLoader')\n                }, 100)\n            })\n    },\n\n    async saveFile({ state, commit, rootGetters, dispatch }, payload: { content: string, restartServiceName: string | null }) {\n        const content = new Blob([payload.content], { type: 'text/plain' })\n        const formData = new FormData()\n        formData.append('file', content, state.filename)\n        formData.append('root', state.fileroot)\n        formData.append('path', state.filepath.slice(1))\n        formData.append('checksum', sha256(payload.content))\n\n        const url = rootGetters['socket/getUrl'] + '/server/files/upload'\n        if (state.cancelToken) dispatch('cancelLoad')\n        const CancelToken = axios.CancelToken\n        const source = CancelToken.source()\n        commit('updateCancelTokenSource', source)\n        commit('updateLoaderState', true)\n\n        axios.post(url, formData, {\n            cancelToken: source.token,\n            onUploadProgress: (progressEvent) => {\n                let speedOutput: string = state.loaderProgress.speed\n                let lastTimestamp = state.loaderProgress.lastTimestamp\n                let lastLoaded = state.loaderProgress.lastLoaded\n                const diffTime = progressEvent.timeStamp - state.loaderProgress.lastTimestamp\n                if (diffTime > 500) {\n                    const diffData = progressEvent.loaded - lastLoaded\n                    let speed = (diffData / diffTime)\n                    const unit = ['kB', 'MB', 'GB']\n                    let unitSelect = 0\n                    while (speed > 1024) {\n                        speed /= 1024.0\n                        unitSelect = Math.min(2, unitSelect + 1)\n                    }\n                    speedOutput = speed.toFixed(2) + unit[unitSelect]\n                    lastTimestamp = progressEvent.timeStamp\n                    lastLoaded = progressEvent.loaded\n                }\n\n                this.commit('editor/updateLoader', {\n                    direction: 'uploading',\n                    speed: speedOutput,\n                    loaded: progressEvent.loaded,\n                    total: progressEvent.total,\n                    lastLoaded: lastLoaded,\n                    lastTimestamp: lastTimestamp\n                })\n            }\n        }).then(response => {\n            return response.data\n        }).then(data => {\n            dispatch('clearLoader')\n            Vue.$toast.success(i18n.t('Editor.SuccessfullySaved', { filename: data.item.path }).toString())\n            if (payload.restartServiceName === 'klipper') {\n                //dispatch('server/addEvent', { message: 'FIRMWARE_RESTART', type: 'command' })\n                Vue.$socket.emit('printer.gcode.script', { script: 'FIRMWARE_RESTART' })\n            } else if (payload.restartServiceName !== null) {\n                Vue.$socket.emit('machine.services.restart', { service: payload.restartServiceName })\n            }\n            dispatch('close')\n        }).catch(error => {\n            window.console.log(error.response?.data.error)\n            dispatch('clearLoader')\n            Vue.$toast.error(i18n.t('Editor.FailedSave', { filename: state.filename }).toString())\n        })\n    },\n\n    cancelLoad({ state, commit, dispatch }) {\n        if (state.cancelToken) {\n            state.cancelToken.cancel('User canceled upload/download')\n            commit('updateCancelTokenSource', null)\n            dispatch('clearLoader')\n        }\n    },\n\n    clearLoader({ commit }) {\n        commit('updateLoaderState', false)\n        commit('updateLoader', {\n            direction: 'downloading',\n            lastLoaded: 0,\n            lastTimestamp: 0,\n            loaded: 0,\n            total: 0,\n            speed: '',\n        })\n    },\n\n    close({ commit }) {\n        commit('reset')\n    },\n\n    updateSourcecode({ commit }, payload) {\n        commit('updateSourcecode', payload)\n    },\n}"],"sourceRoot":""}]}