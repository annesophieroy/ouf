{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/GcodefilesPanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/GcodefilesPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/GcodefilesPanel.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport axios from 'axios'\nimport {thumbnailSmallMin, thumbnailSmallMax, thumbnailBigMin, validGcodeExtensions} from '@/store/variables'\nimport {formatFilesize, formatDate, sortFiles, formatPrintTime} from '@/plugins/helpers'\nimport {FileStateFile} from '@/store/files/types'\nimport Panel from '@/components/ui/Panel.vue'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\n\ninterface draggingFile {\n    status: boolean\n    item: FileStateFile\n}\n\ninterface uploadSnackbar {\n    status: boolean\n    filename: string\n    percent: number\n    speed: number\n    total: number\n    number: number\n    max: number\n    cancelTokenSource: any\n    lastProgress: {\n        time: number\n        loaded: number\n    }\n}\n\ninterface dialogPrintFile {\n    show: boolean\n    item: FileStateFile\n}\n\ninterface dialogRenameObject {\n    show: boolean\n    newName: string\n    item: FileStateFile\n}\n\n@Component({\n    components: {Panel,SettingsRow}\n})\nexport default class GcodefilesPanel extends Mixins(BaseMixin) {\n    validGcodeExtensions = validGcodeExtensions\n    formatDate = formatDate\n    formatFilesize = formatFilesize\n    formatPrintTime = formatPrintTime\n    sortFiles = sortFiles\n\n    $refs!: {\n        fileUpload: HTMLInputElement,\n        inputFieldRenameFile: HTMLInputElement,\n        inputFieldCreateDirectory: HTMLInputElement,\n        inputFieldRenameDirectory: HTMLInputElement,\n    }\n\n    private TimelapseModeOptions = [\n        {\n            text: 'layermacro',\n            value: 'layermacro'\n        },\n        {\n            text: 'hyperlapse',\n            value: 'hyperlapse'\n        }\n    ]\n\n    private search = ''\n    private selected = []\n    private hideHeaderColums = []\n    private dropzone = {\n        visibility: 'hidden',\n        opacity: 0,\n    }\n    private draggingFile: draggingFile = {\n        status: false,\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n    private uploadSnackbar: uploadSnackbar = {\n        status: false,\n        filename: '',\n        percent: 0,\n        speed: 0,\n        total: 0,\n        number: 0,\n        max: 0,\n        cancelTokenSource: {},\n        lastProgress: {\n            time: 0,\n            loaded: 0\n        }\n    }\n    private dialogCreateDirectory = {\n        show: false,\n        name: ''\n    }\n    private contextMenu = {\n        shown: false,\n        isDirectory: false,\n        touchTimer: undefined,\n        x: 0,\n        y: 0,\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    private dialogPrintFile: dialogPrintFile = {\n        show: false,\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    private dialogRenameFile: dialogRenameObject = {\n        show: false,\n        newName: '',\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    private dialogRenameDirectory: dialogRenameObject = {\n        show: false,\n        newName: '',\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    private dialogDeleteDirectory: dialogRenameObject = {\n        show: false,\n        newName: '',\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    private input_rules = [\n        (value: string) => value.indexOf(' ') === -1 || 'Name contains spaces!'\n    ]\n\n    get currentPath() {\n        return this.$store.state.gui.view.gcodefiles.currentPath\n    }\n\n    set currentPath(newVal) {\n        this.$store.dispatch('gui/saveSettingWithoutUpload', { name: 'view.gcodefiles.currentPath', value: newVal })\n    }\n\n    get headers() {\n        const headers = [\n            { text: '',                                     value: '',                          align: 'left',  configable: false,  visible: true, filterable: false },\n            { text: this.$t('Files.Name'),                  value: 'filename',                  align: 'left',  configable: false,  visible: true },\n            { text: '',                                     value: 'status',                    align: 'left',  configable: false,  visible: true },\n            { text: this.$t('Files.Filesize'),              value: 'size',                      align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.LastModified'),          value: 'modified',                  align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.ObjectHeight'),          value: 'object_height',             align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.LayerHeight'),           value: 'layer_height',              align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.NozzleDiameter'),        value: 'nozzle_diameter',           align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.FilamentName'),          value: 'filament_name',             align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.FilamentType'),          value: 'filament_type',             align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.FilamentUsage'),         value: 'filament_total',            align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.FilamentWeight'),        value: 'filament_weight_total',     align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.PrintTime'),             value: 'estimated_time',            align: 'right', configable: true,   visible: true },\n            { text: this.$t('Files.Slicer'),                value: 'slicer',                    align: 'right', configable: true,   visible: true },\n        ]\n\n        headers.forEach((header) => {\n            if (header.visible && this.hideMetadataColums.includes(header.value)) {\n                header.visible = false\n            } else if (!header.visible && !this.hideMetadataColums.includes(header.value)) {\n                header.visible = true\n            }\n        })\n\n        return headers\n    }\n\n    get directory() {\n        return this.$store.getters['files/getDirectory'](this.currentPath)\n    }\n\n    get disk_usage() {\n        return this.directory?.disk_usage ?? { used: 0, free: 0, total: 0}\n    }\n\n    get files() {\n        let files = [...this.directory?.childrens ?? []]\n\n        if (!this.showHiddenFiles) {\n            files = files.filter(file => file.filename !== 'thumbs' && file.filename.substr(0, 1) !== '.')\n        }\n\n        if (!this.showPrintedFiles) {\n            files = files.filter(file => {\n                if (file.isDirectory) return true\n                else {\n                    return (this.$store.getters['server/history/getPrintStatusByFilename'](\n                        (this.currentPath+'/'+file.filename).substr(7),\n                        file.modified.getTime()\n                    ) !== 'completed')\n                }\n            })\n        }\n\n        return files\n    }\n\n    get configHeaders() {\n        return this.headers.filter(header => header.configable)\n    }\n\n    get filteredHeaders() {\n        return this.headers.filter(header => header.visible)\n    }\n\n    get hideMetadataColums() {\n        return this.$store.state.gui.view.gcodefiles.hideMetadataColums\n    }\n\n    set hideMetadataColums(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.gcodefiles.hideMetadataColums', value: newVal })\n    }\n\n    get showHiddenFiles() {\n        return this.$store.state.gui.view.gcodefiles.showHiddenFiles\n    }\n\n    set showHiddenFiles(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.gcodefiles.showHiddenFiles', value: newVal })\n    }\n\n    get showPrintedFiles() {\n        return this.$store.state.gui.view.gcodefiles.showPrintedFiles\n    }\n\n    set showPrintedFiles(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.gcodefiles.showPrintedFiles', value: newVal })\n    }\n\n    get sortBy() {\n        return this.$store.state.gui.view.gcodefiles.sortBy\n    }\n\n    set sortBy(newVal) {\n        if (newVal === undefined) newVal = 'modified'\n\n        this.$store.dispatch('gui/saveSetting', { name: 'view.gcodefiles.sortBy', value: newVal })\n    }\n\n    get sortDesc() {\n        return this.$store.state.gui.view.gcodefiles.sortDesc\n    }\n\n    set sortDesc(newVal) {\n        if (newVal === undefined) newVal = false\n\n        this.$store.dispatch('gui/saveSetting', { name: 'view.gcodefiles.sortDesc', value: newVal })\n    }\n\n    get countPerPage() {\n        return this.$store.state.gui.view.gcodefiles.countPerPage\n    }\n\n    set countPerPage(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.gcodefiles.countPerPage', value: newVal })\n    }\n\n    get timelapseEnabled() {\n        return this.$store.state.server.timelapse?.settings?.enabled ?? false\n    }\n\n    set timelapseEnabled(newVal) {\n        this.$socket.emit('machine.timelapse.post_settings', { enabled: newVal }, { action: 'server/timelapse/initSettings' })\n    }\n\n    getJobStatus(item: FileStateFile) {\n        return this.$store.getters['server/history/getPrintStatus'](item.job_id)\n    }\n\n    getStatusIcon(status: string) {\n        return this.$store.getters['server/history/getPrintStatusChipIcon'](status)\n    }\n\n    getStatusColor(status: string) {\n        return this.$store.getters['server/history/getPrintStatusChipColor'](status)\n    }\n\n    dragOverUpload(e: Event) {\n        if (!this.draggingFile.status) {\n            e.preventDefault()\n            e.stopPropagation()\n\n            this.dropzone.visibility = 'visible'\n            this.dropzone.opacity = 1\n        }\n    }\n\n    dragLeaveUpload(e: Event) {\n        if (!this.draggingFile.status) {\n            e.preventDefault()\n            e.stopPropagation()\n\n            this.dropzone.visibility = 'hidden'\n            this.dropzone.opacity = 0\n        }\n    }\n\n    async dragDropUpload(e: any) {\n        if (!this.draggingFile.status) {\n            e.preventDefault()\n\n            this.dropzone.visibility = 'hidden'\n            this.dropzone.opacity = 0\n\n            if (e.dataTransfer.files.length) {\n                const files = [...e.dataTransfer.files].filter((file: File) => {\n                    const format = file.name.slice(file.name.lastIndexOf('.'))\n\n                    if (!validGcodeExtensions.includes(format)) {\n                        this.$toast.error(this.$t('Files.WrongFileUploaded', { filename: file.name }).toString())\n\n                        return false\n                    }\n\n                    return true\n                })\n\n                this.$store.dispatch('socket/addLoading', { name: 'gcodeUpload' })\n                let successFiles = []\n                this.uploadSnackbar.number = 0\n                this.uploadSnackbar.max = files.length\n                for (const file of files) {\n                    this.uploadSnackbar.number++\n                    const result = await this.doUploadFile(file)\n                    successFiles.push(result)\n                }\n\n                this.$store.dispatch('socket/removeLoading', { name: 'gcodeUpload' })\n                for(const file of successFiles) {\n                    this.$toast.success(this.$t('Files.SuccessfullyUploaded', { filename: file }).toString())\n                }\n            }\n        }\n    }\n\n    doUploadFile(file: File) {\n        let formData = new FormData()\n        let filename = file.name\n\n        this.uploadSnackbar.filename = filename\n        this.uploadSnackbar.status = true\n        this.uploadSnackbar.percent = 0\n        this.uploadSnackbar.speed = 0\n        this.uploadSnackbar.lastProgress.loaded = 0\n        this.uploadSnackbar.lastProgress.time = 0\n\n        formData.append('file', file, (this.currentPath+'/'+filename).substring(7))\n\n        return new Promise(resolve => {\n            this.uploadSnackbar.cancelTokenSource = axios.CancelToken.source()\n            axios.post(this.apiUrl + '/server/files/upload',\n                formData, {\n                    cancelToken: this.uploadSnackbar.cancelTokenSource.token,\n                    headers: { 'Content-Type': 'multipart/form-data' },\n                    onUploadProgress: (progressEvent: any) => {\n                        this.uploadSnackbar.percent = (progressEvent.loaded * 100) / progressEvent.total\n                        if (this.uploadSnackbar.lastProgress.time) {\n                            const time = progressEvent.timeStamp - this.uploadSnackbar.lastProgress.time\n                            const data = progressEvent.loaded - this.uploadSnackbar.lastProgress.loaded\n\n                            if (time) this.uploadSnackbar.speed = data / (time / 1000)\n                        }\n\n                        this.uploadSnackbar.lastProgress.time = progressEvent.timeStamp\n                        this.uploadSnackbar.lastProgress.loaded = progressEvent.loaded\n                        this.uploadSnackbar.total = progressEvent.total\n                    }\n                }\n            ).then((result: any) => {\n                const filename = result.data.item.path.substr(result.data.item.path.indexOf('/')+1)\n                this.uploadSnackbar.status = false\n                resolve(filename)\n            }).catch(() => {\n                this.uploadSnackbar.status = false\n                this.$store.dispatch('socket/removeLoading', { name: 'gcodeUpload' })\n                this.$toast.error('Cannot upload the file!')\n            })\n        })\n    }\n\n    dragOverFilelist(e: any, row: any) {\n        if (this.draggingFile.status) {\n            e.preventDefault()\n            //e.stopPropagation()\n\n            if (row.isDirectory) {\n                e.target.parentElement.style.backgroundColor = '#43A04720'\n            }\n        }\n    }\n\n    dragLeaveFilelist(e: any) {\n        if (this.draggingFile.status) {\n            e.preventDefault()\n            e.stopPropagation()\n\n            e.target.parentElement.style.backgroundColor = 'transparent'\n        }\n    }\n\n    async dragDropFilelist(e: any, row: any) {\n        if (this.draggingFile.status) {\n            e.preventDefault()\n            e.target.parentElement.style.backgroundColor = 'transparent'\n\n            let dest = ''\n            if (row.filename === '..') {\n                dest = this.currentPath.substring(0, this.currentPath.lastIndexOf('/') + 1)+this.draggingFile.item.filename\n            } else dest = this.currentPath+'/'+row.filename+'/'+this.draggingFile.item.filename\n\n            this.$socket.emit('server.files.move', {\n                source: this.currentPath+'/'+this.draggingFile.item.filename,\n                dest: dest\n            }, { action: 'files/getMove' })\n        }\n    }\n\n    async uploadFile() {\n        if (this.$refs.fileUpload.files?.length) {\n            this.$store.dispatch('socket/addLoading', { name: 'gcodeUpload' })\n            let successFiles = []\n            this.uploadSnackbar.number = 0\n            this.uploadSnackbar.max = this.$refs.fileUpload.files.length\n            for (const file of this.$refs.fileUpload.files) {\n                this.uploadSnackbar.number++\n                const result = await this.doUploadFile(file)\n                successFiles.push(result)\n            }\n\n            this.$store.dispatch('socket/removeLoading', { name: 'gcodeUpload' })\n            for(const file of successFiles) {\n                this.$toast.success(this.$t('Files.SuccessfullyUploaded', { filename: file }).toString())\n            }\n\n            this.$refs.fileUpload.value = ''\n        }\n    }\n\n    clickUploadButton() {\n        this.$refs.fileUpload.click()\n    }\n\n    createDirectory() {\n        this.dialogCreateDirectory.name = ''\n        this.dialogCreateDirectory.show = true\n\n        setTimeout(() => {\n            this.$refs.inputFieldCreateDirectory?.focus()\n        }, 200)\n    }\n\n    createDirectoryAction() {\n        if (this.dialogCreateDirectory.name.length && this.dialogCreateDirectory.name.indexOf(' ') === -1) {\n            this.dialogCreateDirectory.show = false\n            this.$socket.emit('server.files.post_directory', { path: this.currentPath+'/'+this.dialogCreateDirectory.name }, { action: 'files/getCreateDir' })\n        }\n    }\n\n    refreshFileList() {\n        this.$socket.emit('server.files.get_directory', { path: this.currentPath }, { action: 'files/getDirectory' })\n    }\n\n    advancedSearch(value: string | number, search: string) {\n        return value != null &&\n            search != null &&\n            typeof value === 'string' &&\n            value.toString().toLowerCase().indexOf(search.toLowerCase()) !== -1\n    }\n\n    refreshMetadata(data: FileStateFile[]) {\n        const items = data.filter((file) => !file.isDirectory && !file.metadataRequested && !file.metadataPulled)\n        items.forEach((file: FileStateFile) => {\n            this.$store.dispatch('files/requestMetadata', {\n                filename: (this.currentPath+'/'+file.filename)\n            })\n        })\n    }\n\n    created() {\n        this.$socket.emit('server.files.get_directory', { path: this.currentPath }, { action: 'files/getDirectory' })\n    }\n\n    getSmallThumbnail(item: FileStateFile) {\n        if (item.thumbnails?.length) {\n            const thumbnail = item.thumbnails.find(thumb =>\n                thumb.width >= thumbnailSmallMin && thumb.width <= thumbnailSmallMax &&\n                thumb.height >= thumbnailSmallMin && thumb.height <= thumbnailSmallMax\n            )\n\n            if (thumbnail && 'relative_path' in thumbnail) {\n                return `${this.apiUrl}/server/files/${encodeURI(this.currentPath)}/${encodeURI(thumbnail.relative_path)}?timestamp=${item.modified.getTime()}`\n            }\n        }\n\n        return ''\n    }\n\n    getBigThumbnail(item: FileStateFile) {\n        if (item.thumbnails?.length) {\n            const thumbnail = item.thumbnails.find(thumb => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail && 'relative_path' in thumbnail) {\n                return `${this.apiUrl}/server/files/${encodeURI(this.currentPath)}/${encodeURI(thumbnail.relative_path)}?timestamp=${item.modified.getTime()}`\n            }\n        }\n\n        return ''\n    }\n\n    getThumbnailWidth(item: FileStateFile) {\n        if (this.getBigThumbnail(item)) {\n            const thumbnail = item?.thumbnails?.find(thumb => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail) return thumbnail.width\n        }\n\n        return 400\n    }\n\n    clickRow(item: FileStateFile, force = false) {\n        if (!this.contextMenu.shown || force) {\n            if (force) this.contextMenu.shown = false\n\n            if (item.isDirectory) {\n                this.currentPath += '/' + item.filename\n            } else if (!['error', 'printing', 'paused'].includes(this.printer_state) && this.isGcodeFile(item)) {\n                this.dialogPrintFile.show = true\n                this.dialogPrintFile.item = item\n            }\n        }\n    }\n\n    clickRowGoBack() {\n        this.currentPath = this.currentPath.substr(0, this.currentPath.lastIndexOf('/'))\n    }\n\n    addToQueue(item: FileStateFile) {\n        let path = this.currentPath.slice(7)\n        if (path != '') path += '/'\n        const filename = path+item.filename\n\n        this.$store.dispatch('server/jobQueue/addToQueue', [filename])\n    }\n\n    changeMetadataVisible(name: string) {\n        if (this.headers.filter(header => header.value === name).length) {\n            const value = this.headers.filter(header => header.value === name)[0].visible\n\n            this.$store.dispatch('gui/setGcodefilesMetadata', {name: name, value: value})\n        }\n    }\n\n    cancelUpload() {\n        this.uploadSnackbar.cancelTokenSource.cancel()\n        this.uploadSnackbar.status = false\n        this.$refs.fileUpload.value = ''\n    }\n\n    showContextMenu (e: any, item: FileStateFile) {\n        if (!this.contextMenu.shown) {\n            e?.preventDefault()\n            this.contextMenu.shown = true\n            this.contextMenu.x = e?.clientX || e?.pageX || window.screenX / 2\n            this.contextMenu.y = e?.clientY || e?.pageY || window.screenY / 2\n            this.contextMenu.item = item\n            this.$nextTick(() => {\n                this.contextMenu.shown = true\n            })\n        }\n    }\n\n    preheat() {\n        const file: any = this.contextMenu.item\n\n        if (\n            'first_layer_extr_temp' in file &&\n            'first_layer_bed_temp' in file &&\n            !['error', 'printing', 'paused'].includes(this.printer_state)\n        ) {\n            let gcode = ''\n            if (file.first_layer_extr_temp > 0) {\n                gcode = 'M104 S'+file.first_layer_extr_temp\n                this.$store.dispatch('server/addEvent', { message: gcode, type: 'command' })\n                this.$socket.emit('printer.gcode.script', { script: gcode })\n            }\n\n            if (file.first_layer_bed_temp > 0) {\n                gcode = 'M140 S'+file.first_layer_bed_temp\n                this.$store.dispatch('server/addEvent', { message: gcode, type: 'command' })\n                this.$socket.emit('printer.gcode.script', { script: gcode })\n            }\n        }\n    }\n\n    editFile(item: FileStateFile) {\n        const path = this.currentPath === 'gcodes' ? '' : this.currentPath.slice(7)\n\n        this.$store.dispatch('editor/openFile', {\n            root: 'gcodes',\n            path: path !== '' ? '/'+path : '',\n            filename: item.filename,\n            size: item.size,\n            permissions: item.permissions\n        })\n    }\n\n    downloadFile() {\n        const filename = (this.currentPath+'/'+this.contextMenu.item.filename)\n        const href = this.apiUrl + '/server/files/' + encodeURI(filename)\n\n        window.open(href)\n    }\n\n    renameFile(item: FileStateFile) {\n        this.dialogRenameFile.item = item\n        this.dialogRenameFile.newName = item.filename\n        this.dialogRenameFile.show = true\n\n        setTimeout(() => {\n            this.$refs.inputFieldRenameFile?.focus()\n        }, 200)\n    }\n\n    renameFileAction() {\n        this.dialogRenameFile.show = false\n        this.$socket.emit('server.files.move', {\n            source: this.currentPath+'/'+this.dialogRenameFile.item.filename,\n            dest: this.currentPath+'/'+this.dialogRenameFile.newName\n        }, { action: 'files/getMove' })\n    }\n\n    renameDirectory(item: FileStateFile) {\n        this.dialogRenameDirectory.item = item\n        this.dialogRenameDirectory.newName = item.filename\n        this.dialogRenameDirectory.show = true\n\n        setTimeout(() => {\n            this.$refs.inputFieldRenameDirectory?.focus()\n        }, 200)\n    }\n\n    renameDirectoryAction() {\n        this.dialogRenameDirectory.show = false\n        this.$socket.emit('server.files.move', {\n            source: this.currentPath+'/'+this.dialogRenameDirectory.item.filename,\n            dest: this.currentPath+'/'+this.dialogRenameDirectory.newName\n        }, { action: 'files/getMove' })\n    }\n\n    removeFile() {\n        this.$socket.emit('server.files.delete_file', { path: this.currentPath+'/'+this.contextMenu.item.filename }, { action: 'files/getDeleteFile' })\n    }\n\n    deleteDirectory(item: FileStateFile) {\n        this.dialogDeleteDirectory.item = item\n        this.dialogDeleteDirectory.show = true\n    }\n\n    deleteDirectoryAction() {\n        this.dialogDeleteDirectory.show = false\n        this.$socket.emit('server.files.delete_directory', { path: this.currentPath+'/'+this.contextMenu.item.filename, force: true }, { action: 'files/getDeleteDir' })\n    }\n\n    startPrint(filename = '') {\n        filename = (this.currentPath+'/'+filename).substring(7)\n        this.dialogPrintFile.show = false\n        this.$socket.emit('printer.print.start', { filename: filename }, { action: 'switchToDashboard' })\n    }\n\n    dragFile(e: Event, item: FileStateFile) {\n        e.preventDefault()\n        this.draggingFile.status = true\n        this.draggingFile.item = item\n    }\n\n    dragendFile(e: Event) {\n        e.preventDefault()\n        this.draggingFile.status = false\n        this.draggingFile.item = {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    @Watch('hideMetadataColums')\n    hideMetadataColumsCanged(newVal: string[]) {\n        newVal.forEach((key) => {\n            let headerElement = this.headers.find(element => element.value === key)\n            if (headerElement) headerElement.visible = false\n        })\n    }\n\n    isGcodeFile(file: FileStateFile) {\n        const format = file.filename.slice(file.filename.lastIndexOf('.'))\n\n        return validGcodeExtensions.includes(format)\n    }\n\n    view3D(item: FileStateFile) {\n        this.$router.push({path: '/viewer', query: {filename: this.currentPath + '/' + item.filename}})\n    }\n}\n"],"sourceRoot":""}]}