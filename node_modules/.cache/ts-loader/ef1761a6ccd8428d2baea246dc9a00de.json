{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/plugins/webSocketClient.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/plugins/webSocketClient.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/plugins/webSocketClient.ts"],"names":[],"mappings":"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","sourcesContent":["import {Store} from 'vuex'\nimport _Vue from 'vue'\nimport {RootState} from '@/store/types'\n\nexport class WebSocketClient {\n    url = ''\n    instance: WebSocket | null = null\n    maxReconnects  = 5\n    reconnectInterval = 1000\n    reconnects = 0\n    keepAliveTimeout = 1000\n    timerId: number | null = null\n    store: Store<RootState> | null = null\n    waits: Wait[] = []\n\n    constructor (options: WebSocketPluginOptions) {\n        this.url = options.url\n        this.maxReconnects = options.maxReconnects || 5\n        this.reconnectInterval = options.reconnectInterval || 1000\n        this.store = options.store\n    }\n\n    setUrl(url: string): void {\n        this.url = url\n    }\n\n    // eslint-disable-next-line\n    passToStore (eventName: string, event: any): void {\n        if (!eventName.startsWith('socket/')) { return }\n\n        this.store?.dispatch(eventName, event)\n    }\n\n    async connect() {\n        this.store?.dispatch('socket/setData', {\n            isConnecting: true\n        })\n\n        if (this.instance) {\n            this.instance.close()\n        }\n        this.instance = new WebSocket(this.url)\n\n        this.instance.onopen = () => {\n            this.reconnects = 0\n            this.store?.dispatch('socket/onOpen', event)\n        }\n\n        this.instance.onclose = async (e) => {\n            if (!e.wasClean && this.reconnects < this.maxReconnects) {\n                this.reconnects++\n                setTimeout(() => {\n                    this.connect()\n                }, this.reconnectInterval)\n            } else await this.store?.dispatch('socket/onClose', e)\n        }\n\n        this.instance.onerror = () => {\n            if (this.instance) this.instance.close()\n        }\n\n        this.instance.onmessage = (msg) => {\n            const data = JSON.parse(msg.data)\n            if (this.store) {\n                const wait = this.getWaitById(data.id)\n                if (wait && wait.action !== ''){\n                    if (data.error?.message) {\n                        if (data.error?.message !== 'Klippy Disconnected')\n                            window.console.error('Response Error: '+wait.action+' > '+data.error.message)\n                    } else if (wait.action) {\n                        let result = data.result\n                        if (result === 'ok') result = { result: result }\n                        if (typeof(result) === 'string') result = { result: result }\n\n                        const preload = {}\n                        if (wait.actionPayload) Object.assign(preload, wait.actionPayload)\n                        Object.assign(preload, { requestParams: wait.params })\n                        Object.assign(preload, result)\n                        this.store?.dispatch(wait.action, preload)\n                    }\n                } else this.store?.dispatch('socket/onMessage', data)\n\n                if (wait) this.removeWaitById(wait.id)\n            }\n        }\n    }\n\n    async close() {\n        if (this.instance) await this.instance.close()\n    }\n\n    getWaitById(id: number): Wait | null {\n        return this.waits.find((wait: Wait) => wait.id === id) ?? null\n    }\n\n    removeWaitById(id: number): void {\n        const index = this.waits.findIndex((wait: Wait) => wait.id === id)\n        if (index) {\n            const wait = this.waits[index]\n            if (wait.loading && this.store) {\n                this.store.dispatch('socket/removeLoading', { name: wait.loading })\n            }\n            this.waits.splice(index, 1)\n        }\n    }\n\n    emit(method: string, params: Params, options: emitOptions = {}):void {\n        if (this.instance?.readyState === WebSocket.OPEN) {\n            const id = Math.floor(Math.random() * 10000) + 1\n            this.waits.push({\n                id: id,\n                params: params,\n                action: options.action ?? null,\n                actionPayload: options.actionPayload ?? {},\n                loading: options.loading ?? null,\n            })\n\n            if (options.loading && this.store) {\n                this.store.dispatch('socket/addLoading', { name: options.loading })\n            }\n\n            const msg = JSON.stringify({\n                jsonrpc: '2.0',\n                method: method,\n                params: params,\n                id: id\n            })\n\n            this.instance.send(msg)\n        }\n    }\n}\n\nexport function WebSocketPlugin(Vue: typeof _Vue, options: WebSocketPluginOptions): void {\n    const socket = new WebSocketClient(options)\n    Vue.prototype.$socket = socket\n    Vue.$socket = socket\n}\n\nexport interface WebSocketPluginOptions {\n    url: string\n    maxReconnects?: number\n    reconnectInterval?: number\n    store: Store<RootState>\n}\n\nexport interface WebSocketClient {\n    connect(): void\n    close(): void\n    emit(method: string, params: Params, emitOptions: emitOptions):void\n}\n\nexport interface Wait {\n    id: number\n    params: any\n    action?: string | null\n    actionPayload?: any\n    loading?: string | null\n}\n\ninterface Params {\n    data?: any\n    [key: string]: any\n}\n\ninterface emitOptions {\n    action?: string | null\n    actionPayload?: Params\n    loading?: string | null\n}\n"],"sourceRoot":""}]}