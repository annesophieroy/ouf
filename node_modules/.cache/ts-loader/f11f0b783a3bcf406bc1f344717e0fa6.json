{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js??ref--15-2!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/server/actions.ts","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/server/actions.ts","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1645990065243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--14-0!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/store/server/actions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,GAAP,MAAgB,KAAhB;AAGA,SAAQ,QAAR,EAAkB,oBAAlB,QAA6C,mBAA7C;AAEA,SAAQ,wBAAR,QAAuC,mBAAvC;AAEA,OAAO,IAAM,OAAO,GAAuC;AACvD,EAAA,KADuD,uBAC7B;AAAA,QAAlB,MAAkB,QAAlB,MAAkB;AAAA,QAAV,QAAU,QAAV,QAAU;AACtB,IAAA,MAAM,CAAC,OAAD,CAAN;AACA,IAAA,QAAQ,CAAC,aAAD,CAAR;AACA,IAAA,QAAQ,CAAC,qBAAD,CAAR;AACH,GALsD;AAOvD,EAAA,IAPuD,kBAOnD;AACA,IAAA,MAAM,CAAC,OAAP,CAAe,KAAf,CAAqB,aAArB;AAEA,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,aAAjB,EAAgC,EAAhC,EAAoC;AAAE,MAAA,MAAM,EAAE;AAAV,KAApC;AACA,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,eAAjB,EAAkC,EAAlC,EAAsC;AAAE,MAAA,MAAM,EAAE;AAAV,KAAtC;AACA,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,qBAAjB,EAAwC,EAAxC,EAA4C;AAAE,MAAA,MAAM,EAAE;AAAV,KAA5C;AACA,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,oBAAjB,EAAuC,EAAvC,EAA2C;AAAE,MAAA,MAAM,EAAE;AAAV,KAA3C;AACA,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,sBAAjB,EAAyC;AAAE,MAAA,IAAI,EAAE;AAAR,KAAzC,EAA6D;AAAE,MAAA,MAAM,EAAE;AAAV,KAA7D;AACH,GAfsD;AAiBvD,EAAA,cAjBuD,iCAiBP,OAjBO,EAiBA;AAAA;;AAAA,QAAtC,QAAsC,SAAtC,QAAsC;AAAA,QAA5B,MAA4B,SAA5B,MAA4B;AAAA,QAApB,SAAoB,SAApB,SAAoB;AACnD,+BAAI,OAAO,CAAC,UAAZ,gDAAI,oBAAoB,QAApB,CAA6B,UAA7B,CAAJ,EAA8C,QAAQ,CAAC,UAAD,EAAa,IAAb,EAAmB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAnB,CAAR,CAA9C,KACK,QAAQ,CAAC,YAAD,EAAe,IAAf,EAAqB;AAAE,MAAA,IAAI,EAAE;AAAR,KAArB,CAAR;AACL,gCAAI,OAAO,CAAC,UAAZ,iDAAI,qBAAoB,QAApB,CAA6B,SAA7B,CAAJ,EAA6C,QAAQ,CAAC,kBAAD,EAAqB,IAArB,EAA2B;AAAE,MAAA,IAAI,EAAE;AAAR,KAA3B,CAAR;AAE7C,IAAA,MAAM,CAAC,kBAAD,EAAqB,OAAO,CAAC,UAA7B,CAAN;AAEA,IAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,aAAjB,EAAgC,EAAhC,EAAoC;AAAE,MAAA,MAAM,EAAE;AAAV,KAApC,EAPmD,CAQnD;AACH,GA1BsD;AA4BvD,EAAA,cA5BuD,iCA4BlB,OA5BkB,EA4BX;AAAA;;AAAA,QAA3B,QAA2B,SAA3B,QAA2B;AAAA,QAAjB,MAAiB,SAAjB,MAAiB;AACxC;AACA,QAAI,aAAa,OAAjB,EAA0B,OAAO,OAAO,CAAC,OAAf;AAC1B,QAAI,oBAAoB,OAAxB,EAAiC,OAAO,OAAO,CAAC,cAAf;;AAEjC,+BAAI,OAAO,CAAC,UAAZ,gDAAI,oBAAoB,MAAxB,EAAgC;AAC5B,MAAA,OAAO,CAAC,UAAR,CAAmB,OAAnB,CAA2B,UAAC,SAAD,EAAsB;AAC7C,QAAA,SAAS,GAAG,QAAQ,CAAC,SAAD,CAApB;;AACA,YAAI,wBAAwB,CAAC,QAAzB,CAAkC,SAAlC,CAAJ,EAAkD;AAC9C,UAAA,MAAM,CAAC,OAAP,CAAe,KAAf,CAAqB,4BAA0B,SAA/C;AACA,UAAA,QAAQ,CAAC,YAAY,SAAZ,GAAwB,OAAzB,EAAkC,EAAlC,EAAsC;AAAC,YAAA,IAAI,EAAE;AAAP,WAAtC,CAAR;AACH;AACJ,OAND;AAOH;;AAED,iCAAI,OAAO,CAAC,sBAAZ,kDAAI,sBAAgC,MAApC,EAA4C;AACxC,MAAA,QAAQ,CAAC,oBAAD,EAAuB,OAAO,CAAC,sBAA/B,EAAuD;AAAC,QAAA,IAAI,EAAE;AAAP,OAAvD,CAAR;AACH;;AAED,IAAA,MAAM,CAAC,SAAD,EAAY,OAAZ,CAAN;AACH,GAhDsD;AAkDvD,EAAA,gBAlDuD,mCAkD1B,OAlD0B,EAkDnB;AAAA,QAAjB,MAAiB,SAAjB,MAAiB;AAChC,IAAA,MAAM,CAAC,WAAD,EAAc,OAAd,CAAN;AACH,GApDsD;AAsDvD,EAAA,cAtDuD,iCAsD5B,OAtD4B,EAsDrB;AAAA,QAAjB,MAAiB,SAAjB,MAAiB;AAC9B,IAAA,MAAM,CAAC,eAAD,EAAkB,OAAO,CAAC,WAA1B,CAAN;AACH,GAxDsD;AA0DvD,EAAA,aA1DuD,gCA0D7B,OA1D6B,EA0DtB;AAAA,QAAjB,MAAiB,SAAjB,MAAiB;AAC7B,QAAI,OAAO,CAAC,eAAR,KAA4B,IAAhC,EACI,MAAM,CAAC,mBAAD,EAAsB,OAAO,CAAC,eAA9B,CAAN;AACP,GA7DsD;AA+DvD,EAAA,cA/DuD,iCA+DrB;AAAA,QAAjB,QAAiB,SAAjB,QAAiB;AAAA,QAAP,KAAO,SAAP,KAAO;AAC9B,QAAI,KAAK,CAAC,sBAAN,KAAiC,IAArC,EAA2C,QAAQ,CAAC,6BAAD,CAAR;AAC3C,QAAI,KAAK,CAAC,kBAAN,KAA6B,IAAjC,EAAuC,QAAQ,CAAC,yBAAD,CAAR;AACvC,IAAA,QAAQ,CAAC,eAAD,EAAkB,IAAlB,EAAwB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAxB,CAAR;AACA,IAAA,QAAQ,CAAC,cAAD,EAAiB,IAAjB,EAAuB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAvB,CAAR;AACH,GApEsD;AAsEjD,EAAA,qBAtEiD,wCAsEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB,cAAA,MAAyB,SAAzB,MAAyB,EAAjB,QAAiB,SAAjB,QAAiB,EAAP,KAAO,SAAP,KAAO;AAAA;AAAA,qBAC7C,MAAM,CAAC,uBAAD,EAA0B,IAA1B,CADuC;;AAAA;AAAA,oBAE/C,KAAK,CAAC,kBAAN,KAA6B,IAFkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEN,QAAQ,CAAC,yBAAD,CAFF;;AAAA;AAAA;AAAA,qBAG7C,QAAQ,CAAC,8BAAD,CAHqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAItD,GA1EsD;AA4EjD,EAAA,iBA5EiD,oCA4EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB,cAAA,MAAyB,SAAzB,MAAyB,EAAjB,QAAiB,SAAjB,QAAiB,EAAP,KAAO,SAAP,KAAO;AAAA;AAAA,qBACzC,MAAM,CAAC,mBAAD,EAAsB,IAAtB,CADmC;;AAAA;AAAA,oBAE3C,KAAK,CAAC,kBAAN,KAA6B,IAFc;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEF,QAAQ,CAAC,yBAAD,CAFN;;AAAA;AAAA;AAAA,qBAGzC,QAAQ,CAAC,8BAAD,CAHiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIlD,GAhFsD;AAkFvD,EAAA,4BAlFuD,gDAkFT;AAAA,QAAf,MAAe,UAAf,MAAe;AAAA,QAAP,KAAO,UAAP,KAAO;;AAC1C,QAAI,KAAK,CAAC,sBAAN,KAAiC,IAArC,EAA2C;AACvC,UAAM,KAAK,GAAG,WAAW,CAAC,YAAK;AAC3B,QAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,aAAjB,EAAgC,EAAhC,EAAoC;AAAE,UAAA,MAAM,EAAE;AAAV,SAApC;AACH,OAFwB,EAEtB,IAFsB,CAAzB;AAGA,MAAA,MAAM,CAAC,yBAAD,EAA4B,KAA5B,CAAN;AACH;AACJ,GAzFsD;AA2FvD,EAAA,2BA3FuD,+CA2FV;AAAA,QAAf,MAAe,UAAf,MAAe;AAAA,QAAP,KAAO,UAAP,KAAO;;AACzC,QAAI,KAAK,CAAC,sBAAN,KAAiC,IAArC,EAA2C;AACvC,MAAA,aAAa,CAAC,KAAK,CAAC,sBAAP,CAAb;AACA,MAAA,MAAM,CAAC,yBAAD,EAA4B,IAA5B,CAAN;AACH;AACJ,GAhGsD;AAkGjD,EAAA,oBAlGiD,wCAkGC,OAlGD,EAkGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlC,cAAA,MAAkC,UAAlC,MAAkC,EAA1B,QAA0B,UAA1B,QAA0B,EAAhB,KAAgB,UAAhB,KAAgB;;AAAA,mBACvD,OAAO,CAAC,gBAD+C;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEjD,QAAQ,CAAC,6BAAD,CAFyC;;AAAA;AAAA;AAAA,qBAGjD,MAAM,CAAC,oBAAD,CAH2C;;AAAA;AAIvD,cAAA,QAAQ,CAAC,kBAAD,EAAqB;AAAE,gBAAA,KAAK,EAAE,OAAO,CAAC,YAAjB;AAA+B,gBAAA,aAAa,EAAE;AAA9C,eAArB,CAAR;AAJuD;AAAA;;AAAA;AAKpD,kBAAI,CAAC,OAAO,CAAC,gBAAT,IAA6B,KAAK,CAAC,sBAAN,KAAiC,IAAlE,EACH,QAAQ,CAAC,8BAAD,CAAR;;AANuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9D,GAzGsD;AA2GvD,EAAA,wBA3GuD,4CA2Gb;AAAA,QAAf,MAAe,UAAf,MAAe;AAAA,QAAP,KAAO,UAAP,KAAO;;AACtC,QAAI,KAAK,CAAC,kBAAN,KAA6B,IAAjC,EAAuC;AACnC,UAAM,KAAK,GAAG,WAAW,CAAC,YAAK;AAC3B,QAAA,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,cAAjB,EAAiC,EAAjC,EAAqC;AAAE,UAAA,MAAM,EAAE;AAAV,SAArC;AACH,OAFwB,EAEtB,IAFsB,CAAzB;AAGA,MAAA,MAAM,CAAC,qBAAD,EAAwB,KAAxB,CAAN;AACH;AACJ,GAlHsD;AAoHvD,EAAA,uBApHuD,2CAoHd;AAAA,QAAf,MAAe,UAAf,MAAe;AAAA,QAAP,KAAO,UAAP,KAAO;;AACrC,QAAI,KAAK,CAAC,kBAAN,KAA6B,IAAjC,EAAuC;AACnC,MAAA,aAAa,CAAC,KAAK,CAAC,kBAAP,CAAb;AACA,MAAA,MAAM,CAAC,qBAAD,EAAwB,IAAxB,CAAN;AACH;AACJ,GAzHsD;AA2HvD,EAAA,gBA3HuD,oCA2HT,OA3HS,EA2H+C;AAAA,QAAnF,MAAmF,UAAnF,MAAmF;AAAA,QAA3E,QAA2E,UAA3E,QAA2E;AAAA,QAAjE,KAAiE,UAAjE,KAAiE;AAClG,IAAA,MAAM,CAAC,gBAAD,EAAmB,OAAO,CAAC,KAA3B,CAAN;AACA,IAAA,MAAM,CAAC,kBAAD,EAAqB,OAAO,CAAC,aAA7B,CAAN;;AAEA,QAAI,OAAO,CAAC,KAAR,KAAkB,OAAlB,IAA6B,KAAK,CAAC,gBAAnC,IAAuD,KAAK,CAAC,kBAAN,KAA6B,IAAxF,EAA8F;AAC1F,MAAA,QAAQ,CAAC,0BAAD,CAAR;AACH,KAFD,MAEO,IAAI,OAAO,CAAC,KAAR,KAAkB,OAAlB,IAA6B,KAAK,CAAC,kBAAN,KAA6B,IAA9D,EAAoE;AACvE,MAAA,QAAQ,CAAC,yBAAD,CAAR;AACH,KAFM,MAEA,IAAI,OAAO,CAAC,KAAR,KAAkB,OAAlB,IAA6B,KAAK,CAAC,kBAAN,KAA6B,IAA9D,EAAoE;AACvE,MAAA,QAAQ,CAAC,cAAD,EAAiB,IAAjB,EAAuB;AAAE,QAAA,IAAI,EAAE;AAAR,OAAvB,CAAR;AACH;AACJ,GAtIsD;AAwIvD,EAAA,OAxIuD,2BAwInC,OAxImC,EAwI5B;AAAA,QAAjB,MAAiB,UAAjB,MAAiB;AACvB,IAAA,MAAM,CAAC,SAAD,EAAY,OAAZ,CAAN;AACH,GA1IsD;AA4IvD,EAAA,aA5IuD,iCA4IhB,OA5IgB,EA4IT;AAAA,QAA9B,MAA8B,UAA9B,MAA8B;AAAA,QAAtB,WAAsB,UAAtB,WAAsB;AAC1C,IAAA,MAAM,CAAC,iBAAD,CAAN;AAEA,QAAI,MAAM,GAAuB,OAAO,CAAC,WAAzC;AACA,QAAM,OAAO,GAAG,WAAW,CAAC,mCAAD,CAA3B;AACA,IAAA,OAAO,CAAC,OAAR,CAAgB,UAAC,MAAD,EAAmB;AAC/B,UAAI;AACA,YAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,MAAX,CAAd;AACA,QAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,UAAA,KAAK;AAAA,iBAAI,CAAC,KAAK,CAAC,IAAN,CAAW,KAAK,CAAC,OAAjB,CAAL;AAAA,SAAnB,CAAT;AACH,OAHD,CAGE,gBAAM;AAAE,QAAA,MAAM,CAAC,OAAP,CAAe,KAAf,CAAqB,6BAA2B,MAA3B,GAAkC,kBAAvD;AAA2E;AACxF,KALD;AAOA,IAAA,MAAM,CAAC,eAAD,EAAkB,MAAlB,CAAN;AACH,GAzJsD;AA2JvD,EAAA,gBA3JuD,oCA2JnB,IA3JmB,EA2Jf;AAAA,QAArB,MAAqB,UAArB,MAAqB;AAAA,QAAb,KAAa,UAAb,KAAa;;AACpC,QAAI,CAAC,KAAK,CAAC,sBAAN,CAA6B,QAA7B,CAAsC,IAAI,CAAC,IAAL,CAAU,IAAhD,CAAL,EAA4D;AACxD,MAAA,MAAM,CAAC,kBAAD,EAAqB;AAAE,QAAA,IAAI,EAAE,IAAI,CAAC,IAAL,CAAU;AAAlB,OAArB,CAAN;AACH;AACJ,GA/JsD;AAiKvD,EAAA,QAjKuD,4BAiKrB,OAjKqB,EAiKd;AAAA,QAA9B,MAA8B,UAA9B,MAA8B;AAAA,QAAtB,WAAsB,UAAtB,WAAsB;AACrC,QAAI,OAAO,GAAG,OAAd;AACA,QAAI,IAAI,GAAG,UAAX;AAEA,QAAI,QAAO,OAAP,MAAmB,QAAnB,IAA+B,UAAU,OAA7C,EAAsD,IAAI,GAAG,OAAO,CAAC,IAAf;AAEtD,QAAI,aAAa,OAAjB,EAA0B,OAAO,GAAG,OAAO,CAAC,OAAlB,CAA1B,KACK,IAAI,YAAY,OAAhB,EAAyB,OAAO,GAAG,OAAO,CAAC,MAAlB,CAAzB,KACA,IAAI,WAAW,OAAf,EAAwB,OAAO,GAAG,OAAO,CAAC,KAAR,CAAc,OAAxB;AAE7B,QAAI,aAAa,GAAG,oBAAoB,CAAC,OAAD,CAAxC;AAEA,QAAM,OAAO,GAAG,WAAW,CAAC,mCAAD,CAA3B;AACA,QAAI,UAAU,GAAG,IAAjB;AACA,IAAA,OAAO,CAAC,KAAR,CAAc,UAAC,MAAD,EAAmB;AAC7B,UAAI;AACA,YAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,MAAX,CAAd;AACA,YAAI,KAAK,CAAC,IAAN,CAAW,aAAX,CAAJ,EAA+B,UAAU,GAAG,KAAb;AAClC,OAHD,CAGE,iBAAM;AACJ,QAAA,MAAM,CAAC,OAAP,CAAe,KAAf,CAAqB,6BAA2B,MAA3B,GAAkC,kBAAvD;AACH;;AAED,aAAO,UAAP;AACH,KATD;;AAWA,QAAI,UAAJ,EAAgB;AACZ,UAAI,OAAO,CAAC,IAAR,KAAiB,SAArB,EAAgC,aAAa,GAAG,mCAAiC,aAAjC,GAA+C,MAA/D;AAEhC,MAAA,MAAM,CAAC,UAAD,EAAa;AACf,QAAA,IAAI,EAAE,IAAI,IAAJ,EADS;AAEf,QAAA,OAAO,EAAE,OAFM;AAGf,QAAA,aAAa,EAAE,aAHA;AAIf,QAAA,IAAI,EAAE;AAJS,OAAb,CAAN;AAMH;AACJ,GApMsD;AAsMvD,EAAA,mBAtMuD,uCAsMvB,OAtMuB,EAsMhB;AAAA,QAAjB,MAAiB,UAAjB,MAAiB;AACnC,IAAA,MAAM,CAAC,oBAAD,EAAuB,OAAvB,CAAN;AACH;AAxMsD,CAApD","sourcesContent":["import Vue from 'vue'\nimport {ActionTree} from 'vuex'\nimport {ServerState, ServerStateEvent} from '@/store/server/types'\nimport {camelize, formatConsoleMessage} from '@/plugins/helpers'\nimport {RootState} from '@/store/types'\nimport {initableServerComponents} from '@/store/variables'\n\nexport const actions: ActionTree<ServerState, RootState> = {\n    reset({ commit, dispatch }) {\n        commit('reset')\n        dispatch('power/reset')\n        dispatch('updateManager/reset')\n    },\n\n    init() {\n        window.console.debug('init Server')\n\n        Vue.$socket.emit('server.info', {}, { action: 'server/initServerInfo'})\n        Vue.$socket.emit('server.config', {}, { action: 'server/initServerConfig'})\n        Vue.$socket.emit('machine.system_info', {}, { action: 'server/initSystemInfo'})\n        Vue.$socket.emit('machine.proc_stats', {}, { action: 'server/initProcStats' })\n        Vue.$socket.emit('server.database.list', { root: 'config' }, { action: 'server/checkDatabases'})\n    },\n\n    checkDatabases({ dispatch, commit, rootState }, payload) {\n        if (payload.namespaces?.includes('mainsail')) dispatch('gui/init', null, { root: true })\n        else dispatch('gui/initDb', null, { root: true })\n        if (payload.namespaces?.includes('webcams')) dispatch('gui/webcams/init', null, { root: true })\n\n        commit('saveDbNamespaces', payload.namespaces)\n\n        Vue.$socket.emit('server.info', {}, { action: 'server/checkKlippyConnected'})\n        //dispatch('printer/init', null, { root: true })\n    },\n\n    initServerInfo({ dispatch, commit }, payload) {\n        // delete old plugin entries\n        if ('plugins' in payload) delete payload.plugins\n        if ('failed_plugins' in payload) delete payload.failed_plugins\n\n        if (payload.components?.length) {\n            payload.components.forEach((component: string) => {\n                component = camelize(component)\n                if (initableServerComponents.includes(component)) {\n                    window.console.debug('init server component: '+component)\n                    dispatch('server/' + component + '/init', {}, {root: true})\n                }\n            })\n        }\n\n        if (payload.registered_directories?.length) {\n            dispatch('files/initRootDirs', payload.registered_directories, {root: true})\n        }\n\n        commit('setData', payload)\n    },\n\n    initServerConfig({ commit }, payload) {\n        commit('setConfig', payload)\n    },\n\n    initSystemInfo({ commit }, payload) {\n        commit('setSystemInfo', payload.system_info)\n    },\n\n    initProcStats({ commit }, payload) {\n        if (payload.throttled_state !== null)\n            commit('setThrottledState', payload.throttled_state)\n    },\n\n    setKlippyReady({ dispatch, state }) {\n        if (state.klippy_connected_timer !== null) dispatch('stopKlippyConnectedInterval')\n        if (state.klippy_state_timer !== null) dispatch('stopKlippyStateInterval')\n        dispatch('printer/reset', null, { root: true })\n        dispatch('printer/init', null, { root: true })\n    },\n\n    async setKlippyDisconnected({ commit, dispatch, state }) {\n        await commit('setKlippyDisconnected', null)\n        if (state.klippy_state_timer !== null) await dispatch('stopKlippyStateInterval')\n        await dispatch('startKlippyConnectedInterval')\n    },\n\n    async setKlippyShutdown({ commit, dispatch, state }) {\n        await commit('setKlippyShutdown', null)\n        if (state.klippy_state_timer !== null) await dispatch('stopKlippyStateInterval')\n        await dispatch('startKlippyConnectedInterval')\n    },\n\n    startKlippyConnectedInterval({ commit, state }) {\n        if (state.klippy_connected_timer === null) {\n            const timer = setInterval(() => {\n                Vue.$socket.emit('server.info', {}, { action: 'server/checkKlippyConnected'})\n            }, 2000)\n            commit('setKlippyConnectedTimer', timer)\n        }\n    },\n\n    stopKlippyConnectedInterval({ commit, state }) {\n        if (state.klippy_connected_timer !== null) {\n            clearInterval(state.klippy_connected_timer)\n            commit('setKlippyConnectedTimer', null)\n        }\n    },\n\n    async checkKlippyConnected({ commit, dispatch, state }, payload) {\n        if (payload.klippy_connected) {\n            await dispatch('stopKlippyConnectedInterval')\n            await commit('setKlippyConnected')\n            dispatch('checkKlippyState', { state: payload.klippy_state, state_message: null })\n        } else if (!payload.klippy_connected && state.klippy_connected_timer === null)\n            dispatch('startKlippyConnectedInterval')\n    },\n\n    startKlippyStateInterval({ commit, state }) {\n        if (state.klippy_state_timer === null) {\n            const timer = setInterval(() => {\n                Vue.$socket.emit('printer.info', {}, { action: 'server/checkKlippyState'})\n            }, 2000)\n            commit('setKlippyStateTimer', timer)\n        }\n    },\n\n    stopKlippyStateInterval({ commit, state }) {\n        if (state.klippy_state_timer !== null) {\n            clearInterval(state.klippy_state_timer)\n            commit('setKlippyStateTimer', null)\n        }\n    },\n\n    checkKlippyState({ commit, dispatch, state }, payload: { state: string, state_message: string | null }) {\n        commit('setKlippyState', payload.state)\n        commit('setKlippyMessage', payload.state_message)\n\n        if (payload.state !== 'ready' && state.klippy_connected && state.klippy_state_timer === null) {\n            dispatch('startKlippyStateInterval')\n        } else if (payload.state === 'ready' && state.klippy_state_timer !== null) {\n            dispatch('stopKlippyStateInterval')\n        } else if (payload.state === 'ready' && state.klippy_state_timer === null) {\n            dispatch('printer/init', null, { root: true })\n        }\n    },\n\n    getData({ commit }, payload){\n        commit('setData', payload)\n    },\n\n    getGcodeStore({ commit, rootGetters }, payload) {\n        commit('clearGcodeStore')\n\n        let events: ServerStateEvent[] = payload.gcode_store\n        const filters = rootGetters['gui/console/getConsolefilterRules']\n        filters.forEach((filter: string) => {\n            try {\n                const regex = new RegExp(filter)\n                events = events.filter(event => !regex.test(event.message))\n            } catch { window.console.error('Custom console filter \\''+filter+'\\' doesn\\'t work')}\n        })\n\n        commit('setGcodeStore', events)\n    },\n\n    addRootDirectory({ commit, state }, data) {\n        if (!state.registered_directories.includes(data.item.root)) {\n            commit('addRootDirectory', { name: data.item.root })\n        }\n    },\n\n    addEvent({ commit, rootGetters }, payload) {\n        let message = payload\n        let type = 'response'\n\n        if (typeof payload === 'object' && 'type' in payload) type = payload.type\n\n        if ('message' in payload) message = payload.message\n        else if ('result' in payload) message = payload.result\n        else if ('error' in payload) message = message.error.message\n\n        let formatMessage = formatConsoleMessage(message)\n\n        const filters = rootGetters['gui/console/getConsolefilterRules']\n        let boolImport = true\n        filters.every((filter: string) => {\n            try {\n                const regex = new RegExp(filter)\n                if (regex.test(formatMessage)) boolImport = false\n            } catch {\n                window.console.error('Custom console filter \\''+filter+'\\' doesn\\'t work')\n            }\n\n            return boolImport\n        })\n\n        if (boolImport) {\n            if (payload.type === 'command') formatMessage = '<a class=\"command text--blue\">'+formatMessage+'</a>'\n\n            commit('addEvent', {\n                date: new Date(),\n                message: message,\n                formatMessage: formatMessage,\n                type: type\n            })\n        }\n    },\n\n    serviceStateChanged({ commit }, payload) {\n        commit('updateServiceState', payload)\n    }\n}"],"sourceRoot":""}]}