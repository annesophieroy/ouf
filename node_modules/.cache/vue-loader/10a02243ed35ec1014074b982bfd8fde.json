{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsPresetsTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsPresetsTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Y29udmVydE5hbWV9IGZyb20gJ0AvcGx1Z2lucy9oZWxwZXJzJwppbXBvcnQge0NvbXBvbmVudCwgTWl4aW5zfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJy4uL21peGlucy9iYXNlJwppbXBvcnQgU2V0dGluZ3NSb3cgZnJvbSAnQC9jb21wb25lbnRzL3NldHRpbmdzL1NldHRpbmdzUm93LnZ1ZScKaW1wb3J0IHtHdWlQcmVzZXRzU3RhdGVQcmVzZXR9IGZyb20gJ0Avc3RvcmUvZ3VpL3ByZXNldHMvdHlwZXMnCgppbnRlcmZhY2UgcHJlc2V0Rm9ybSB7CiAgICBib29sOiBib29sZWFuCiAgICB2YWxpZDogYm9vbGVhbgogICAgbmFtZTogc3RyaW5nCiAgICBnY29kZTogc3RyaW5nCiAgICBpZDogc3RyaW5nIHwgbnVsbAogICAgYm9vbEludmFsaWRNaW46IGJvb2xlYW4KICAgIHZhbHVlczogewogICAgICAgIFtrZXk6IHN0cmluZ106IHsKICAgICAgICAgICAgYm9vbDogYm9vbGVhbgogICAgICAgICAgICB2YWx1ZTogbnVtYmVyCiAgICAgICAgICAgIHR5cGU6ICdoZWF0ZXInIHwgJ3RlbXBlcmF0dXJlX2ZhbicKICAgICAgICB9CiAgICB9Cn0KCkBDb21wb25lbnQoewogICAgY29tcG9uZW50czoge1NldHRpbmdzUm93fQp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBTZXR0aW5nc1ByZXNldHNUYWIgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CiAgICBjb252ZXJ0TmFtZSA9IGNvbnZlcnROYW1lCgogICAgcHJpdmF0ZSBmb3JtOiBwcmVzZXRGb3JtID0gewogICAgICAgIGJvb2w6IGZhbHNlLAogICAgICAgIHZhbGlkOiBmYWxzZSwKICAgICAgICBuYW1lOiAnJywKICAgICAgICBnY29kZTogJycsCiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgYm9vbEludmFsaWRNaW46IGZhbHNlLAogICAgICAgIHZhbHVlczoge30KICAgIH0KCiAgICBwcml2YXRlIGNvb2xkb3duRm9ybSA9IHsKICAgICAgICBib29sOiBmYWxzZSwKICAgICAgICB2YWxpZDogZmFsc2UsCiAgICAgICAgZ2NvZGU6ICcnCiAgICB9CgogICAgcHJpdmF0ZSBydWxlcyA9IHsKICAgICAgICByZXF1aXJlZDogKHZhbHVlOiBzdHJpbmcpID0+IHZhbHVlICE9PSAnJyB8fCAncmVxdWlyZWQnLAogICAgICAgIHVuaXF1ZTogKHZhbHVlOiBzdHJpbmcpID0+ICF0aGlzLmV4aXN0c1ByZXNldE5hbWUodmFsdWUpIHx8ICdOYW1lIGFscmVhZHkgZXhpc3RzJywKICAgIH0KCiAgICBnZXQgcHJlc2V0cygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snZ3VpL3ByZXNldHMvZ2V0UHJlc2V0cyddID8/IFtdCiAgICB9CgogICAgZ2V0IGhlYXRlcnMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3ByaW50ZXIvZ2V0SGVhdGVycyddID8/IFtdCiAgICB9CgogICAgZ2V0IHRlbXBlcmF0dXJlRmFucygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1sncHJpbnRlci9nZXRUZW1wZXJhdHVyZUZhbnMnXSA/PyBbXQogICAgfQoKICAgIGdldCBjb29sZG93bkdjb2RlKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydndWkvcHJlc2V0cy9nZXRDb29sZG93bkdjb2RlJ10KICAgIH0KCiAgICBleGlzdHNQcmVzZXROYW1lKG5hbWU6IHN0cmluZykgewogICAgICAgIHJldHVybiAodGhpcy5wcmVzZXRzLmZpbmRJbmRleCgocHJlc2V0OiBHdWlQcmVzZXRzU3RhdGVQcmVzZXQpID0+IHByZXNldC5uYW1lID09PSBuYW1lICYmIHByZXNldC5pZCAhPT0gdGhpcy5mb3JtLmlkKSAhPT0gLTEpCiAgICB9CgogICAgZ2V0U3ViVGl0bGUocHJlc2V0OiBHdWlQcmVzZXRzU3RhdGVQcmVzZXQpIHsKICAgICAgICBsZXQgb3V0cHV0OiBzdHJpbmdbXSA9IFtdCgogICAgICAgIE9iamVjdC5rZXlzKHByZXNldC52YWx1ZXMpLmZvckVhY2goKGtleTogc3RyaW5nKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHByZXNldC52YWx1ZXNba2V5XQoKICAgICAgICAgICAgaWYgKHZhbHVlcy5ib29sKSB7CiAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0ga2V5LmluZGV4T2YoJyAnKSA/IGtleS5zbGljZShrZXkuaW5kZXhPZignICcpICsgMSkgOiBrZXkKCiAgICAgICAgICAgICAgICBvdXRwdXQucHVzaCh0aGlzLmNvbnZlcnROYW1lKG5hbWUpKyc6ICcrdmFsdWVzLnZhbHVlKyfCsEMnKQogICAgICAgICAgICB9CiAgICAgICAgfSkKCiAgICAgICAgaWYgKHByZXNldC5nY29kZSkgb3V0cHV0LnB1c2godGhpcy4kdCgnU2V0dGluZ3MuUHJlc2V0c1RhYi5DdXN0b21HQ29kZScpLnRvU3RyaW5nKCkpCgogICAgICAgIHJldHVybiBvdXRwdXQuam9pbignLCAnKQogICAgfQoKICAgIGNyZWF0ZVByZXNldCgpIHsKICAgICAgICB0aGlzLmNsZWFyRm9ybSgpCiAgICAgICAgdGhpcy5mb3JtLmJvb2wgPSB0cnVlCiAgICB9CgogICAgY2xlYXJGb3JtKCkgewogICAgICAgIHRoaXMuZm9ybS5ib29sID0gZmFsc2UKICAgICAgICB0aGlzLmZvcm0uaWQgPSBudWxsCiAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSAnJwogICAgICAgIHRoaXMuZm9ybS5nY29kZSA9ICcnCiAgICAgICAgdGhpcy5mb3JtLmJvb2xJbnZhbGlkTWluID0gZmFsc2UKICAgICAgICB0aGlzLmZvcm0udmFsdWVzID0ge30KCiAgICAgICAgZm9yKGNvbnN0IGhlYXRlciBvZiB0aGlzLmhlYXRlcnMpIHsKICAgICAgICAgICAgdGhpcy5mb3JtLnZhbHVlc1toZWF0ZXIubmFtZV0gPSB7CiAgICAgICAgICAgICAgICBib29sOiB0cnVlLAogICAgICAgICAgICAgICAgdmFsdWU6IDAsCiAgICAgICAgICAgICAgICB0eXBlOiAnaGVhdGVyJywKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZm9yKGNvbnN0IGZhbiBvZiB0aGlzLnRlbXBlcmF0dXJlRmFucykgewogICAgICAgICAgICB0aGlzLmZvcm0udmFsdWVzWyd0ZW1wZXJhdHVyZV9mYW4gJytmYW4ubmFtZV0gPSB7CiAgICAgICAgICAgICAgICBib29sOiB0cnVlLAogICAgICAgICAgICAgICAgdmFsdWU6IDAsCiAgICAgICAgICAgICAgICB0eXBlOiAndGVtcGVyYXR1cmVfZmFuJywKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBlZGl0UHJlc2V0KHByZXNldDogR3VpUHJlc2V0c1N0YXRlUHJlc2V0KSB7CiAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSBwcmVzZXQubmFtZQogICAgICAgIHRoaXMuZm9ybS5pZCA9IHByZXNldC5pZCA/PyBudWxsCiAgICAgICAgdGhpcy5mb3JtLmdjb2RlID0gcHJlc2V0Lmdjb2RlCiAgICAgICAgdGhpcy5mb3JtLnZhbHVlcyA9IHt9CgogICAgICAgIGZvcihjb25zdCBoZWF0ZXIgb2YgdGhpcy5oZWF0ZXJzKSB7CiAgICAgICAgICAgIGlmIChoZWF0ZXIubmFtZSBpbiBwcmVzZXQudmFsdWVzKQogICAgICAgICAgICAgICAgdGhpcy5mb3JtLnZhbHVlc1toZWF0ZXIubmFtZV0gPSB7Li4ucHJlc2V0LnZhbHVlc1toZWF0ZXIubmFtZV19CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHRoaXMuZm9ybS52YWx1ZXNbaGVhdGVyLm5hbWVdID0gewogICAgICAgICAgICAgICAgICAgIGJvb2w6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdoZWF0ZXInLAogICAgICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZm9yKGNvbnN0IGZhbiBvZiB0aGlzLnRlbXBlcmF0dXJlRmFucykgewogICAgICAgICAgICBpZiAoJ3RlbXBlcmF0dXJlX2ZhbiAnK2Zhbi5uYW1lIGluIHByZXNldC52YWx1ZXMpCiAgICAgICAgICAgICAgICB0aGlzLmZvcm0udmFsdWVzWyd0ZW1wZXJhdHVyZV9mYW4gJytmYW4ubmFtZV0gPSB7Li4ucHJlc2V0LnZhbHVlc1sndGVtcGVyYXR1cmVfZmFuICcrZmFuLm5hbWVdfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB0aGlzLmZvcm0udmFsdWVzWyd0ZW1wZXJhdHVyZV9mYW4gJytmYW4ubmFtZV0gPSB7CiAgICAgICAgICAgICAgICAgICAgYm9vbDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RlbXBlcmF0dXJlX2ZhbicsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0aGlzLmZvcm0uYm9vbCA9IHRydWUKICAgIH0KCiAgICBzYXZlUHJlc2V0KCkgewogICAgICAgIGxldCBzZXRWYWx1ZXMgPSAwCiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXModGhpcy5mb3JtLnZhbHVlcykpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZm9ybS52YWx1ZXNba2V5XS5ib29sKSBzZXRWYWx1ZXMrKwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5mb3JtLmdjb2RlLmxlbmd0aCkgc2V0VmFsdWVzKysKCiAgICAgICAgaWYgKHNldFZhbHVlcyA9PT0gMCkgdGhpcy5mb3JtLmJvb2xJbnZhbGlkTWluID0gdHJ1ZQogICAgICAgIGVsc2UgaWYgKHRoaXMuZm9ybS52YWxpZCkgewogICAgICAgICAgICBjb25zdCBwcmVzZXQ6IEd1aVByZXNldHNTdGF0ZVByZXNldCA9IHsKICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuZm9ybS5uYW1lLAogICAgICAgICAgICAgICAgZ2NvZGU6IHRoaXMuZm9ybS5nY29kZSwKICAgICAgICAgICAgICAgIHZhbHVlczogdGhpcy5mb3JtLnZhbHVlcwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodGhpcy5mb3JtLmlkICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3ByZXNldHMvdXBkYXRlJywgIHsgaWQ6IHRoaXMuZm9ybS5pZCwgdmFsdWVzOiBwcmVzZXQgfSApCiAgICAgICAgICAgIH0gZWxzZSB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3ByZXNldHMvc3RvcmUnLCAgeyB2YWx1ZXM6IHByZXNldCB9ICkKCiAgICAgICAgICAgIHRoaXMuY2xlYXJGb3JtKCkKICAgICAgICB9CiAgICB9CgogICAgZWRpdENvb2xkb3duKCkgewogICAgICAgIHRoaXMuY29vbGRvd25Gb3JtLmdjb2RlID0gdGhpcy5jb29sZG93bkdjb2RlCiAgICAgICAgdGhpcy5jb29sZG93bkZvcm0uYm9vbCA9IHRydWUKICAgIH0KCiAgICBzYXZlQ29vbGRvd24oKSB7CiAgICAgICAgaWYgKHRoaXMuY29vbGRvd25Gb3JtLnZhbGlkKSB7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvcHJlc2V0cy9zYXZlU2V0dGluZycsIHsgbmFtZTogJ2Nvb2xkb3duR2NvZGUnLCB2YWx1ZTogdGhpcy5jb29sZG93bkZvcm0uZ2NvZGUgfSkKICAgICAgICAgICAgdGhpcy5jb29sZG93bkZvcm0uYm9vbCA9IGZhbHNlCiAgICAgICAgfQogICAgfQoKICAgIGRlbGV0ZVByZXNldChpZDogc3RyaW5nKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9wcmVzZXRzL2RlbGV0ZScsICBpZCkKICAgIH0KfQo="},{"version":3,"sources":["SettingsPresetsTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"SettingsPresetsTab.vue","sourceRoot":"src/components/settings","sourcesContent":["\n<template>\n    <div>\n        <v-card flat v-if=\"!form.bool && !cooldownForm.bool\">\n            <v-card-text>\n                <h3 class=\"text-h5 mb-3\">{{ $t('Settings.PresetsTab.PreheatPresets') }}</h3>\n                <div v-for=\"(preset, key) in presets\" v-bind:key=\"preset.index\">\n                    <v-divider class=\"my-2\" v-if=\"key\"></v-divider>\n                    <settings-row :title=\"preset.name\" :sub-title=\"getSubTitle(preset)\">\n                        <v-btn small outlined class=\"ml-3\" @click=\"editPreset(preset)\">\n                            <v-icon left small>mdi-pencil</v-icon>{{ $t('Settings.Edit') }}\n                        </v-btn>\n                        <v-btn small outlined @click=\"deletePreset(preset.id)\" class=\"ml-3 minwidth-0 px-2\" color=\"error\">\n                            <v-icon small>mdi-delete</v-icon>\n                        </v-btn>\n                    </settings-row>\n                </div>\n                <v-divider class=\"my-2\" v-if=\"presets.length\"></v-divider>\n                <settings-row :title=\"$t('Settings.PresetsTab.Cooldown')\">\n                    <v-btn small outlined class=\"ml-3\" @click=\"editCooldown\">\n                        <v-icon left small>mdi-pencil</v-icon>{{ $t('Settings.Edit') }}\n                    </v-btn>\n                </settings-row>\n            </v-card-text>\n            <v-card-actions class=\"d-flex justify-end\">\n                <v-btn text color=\"primary\" @click=\"createPreset\">{{ $t(\"Settings.PresetsTab.AddPreset\")}}</v-btn>\n            </v-card-actions>\n        </v-card>\n        <v-card flat v-else-if=\"form.bool\">\n            <v-form v-model=\"form.valid\" @submit.prevent=\"savePreset\" >\n                <v-card-title>{{ form.id === null ? $t('Settings.PresetsTab.CreateHeadline') : $t('Settings.PresetsTab.EditHeadline') }}</v-card-title>\n                <v-card-text>\n                    <v-row class=\"mt-3\" v-if=\"form.boolInvalidMin\">\n                        <v-col class=\"py-0\">\n                            <v-alert dense text type=\"error\">{{ $t('Settings.PresetsTab.PresetInfo')}}</v-alert>\n                        </v-col>\n                    </v-row>\n                    <settings-row :title=\"$t('Settings.PresetsTab.Name')\">\n                        <v-text-field\n                            v-model=\"form.name\"\n                            hide-details=\"auto\"\n                            :rules=\"[rules.required, rules.unique]\"\n                            dense\n                            outlined\n                        ></v-text-field>\n                    </settings-row>\n                    <div v-for=\"(heater) of heaters\" v-bind:key=\"heater.name\">\n                        <v-divider class=\"my-2\"></v-divider>\n                        <settings-row :title=\"convertName(heater.name)\">\n                            <v-checkbox\n                                v-model=\"form.values[heater.name].bool\"\n                                hide-details\n                                class=\"shrink mt-0\"\n                            ></v-checkbox>\n                            <v-text-field\n                                v-model=\"form.values[heater.name].value\"\n                                hide-details=\"auto\"\n                                type=\"number\"\n                                suffix=\"°C\"\n                                dense\n                                outlined\n                                hide-spin-buttons\n                            ></v-text-field>\n                        </settings-row>\n                    </div>\n                    <div v-for=\"(fan) of temperatureFans\" v-bind:key=\"'temperature_fan '+fan.name\">\n                        <v-divider class=\"my-2\"></v-divider>\n                        <settings-row :title=\"convertName(fan.name)\">\n                            <v-checkbox\n                                v-model=\"form.values['temperature_fan '+fan.name].bool\"\n                                hide-details\n                                class=\"shrink mt-0\"\n                            ></v-checkbox>\n                            <v-text-field\n                                v-model=\"form.values['temperature_fan '+fan.name].value\"\n                                hide-details=\"auto\"\n                                type=\"number\"\n                                suffix=\"°C\"\n                                dense\n                                outlined\n                                hide-spin-buttons\n                            ></v-text-field>\n                        </settings-row>\n                    </div>\n                    <v-divider class=\"my-2\"></v-divider>\n                    <settings-row :title=\"$t('Settings.PresetsTab.CustomGCode')\">\n                        <v-textarea\n                            outlined\n                            v-model=\"form.gcode\"\n                            hide-details\n                        ></v-textarea>\n                    </settings-row>\n                </v-card-text>\n                <v-card-actions class=\"d-flex justify-end\">\n                    <v-btn text @click=\"form.bool = false\" >\n                        {{ $t('Settings.Cancel') }}\n                    </v-btn>\n                    <v-btn color=\"primary\" text type=\"submit\" >\n                        {{ form.id === null ? $t(\"Settings.PresetsTab.StoreButton\") : $t(\"Settings.PresetsTab.UpdateButton\") }}\n                    </v-btn>\n                </v-card-actions>\n            </v-form>\n        </v-card>\n        <v-card flat v-else-if=\"cooldownForm.bool\">\n            <v-form v-model=\"cooldownForm.valid\" @submit.prevent=\"saveCooldown\">\n                <v-card-title>{{ $t('Settings.PresetsTab.EditCooldown') }}</v-card-title>\n                <v-card-text>\n                    <settings-row :title=\"$t('Settings.PresetsTab.CustomGCode')\">\n                        <v-textarea\n                            outlined\n                            v-model=\"cooldownForm.gcode\"\n                            hide-details\n                        ></v-textarea>\n                    </settings-row>\n                </v-card-text>\n                <v-card-actions class=\"d-flex justify-end\">\n                    <v-btn text @click=\"cooldownForm.bool = false\" >\n                        {{ $t('Settings.Cancel') }}\n                    </v-btn>\n                    <v-btn color=\"primary\" text type=\"submit\" >\n                        {{ $t('Settings.PresetsTab.UpdateCooldown') }}\n                    </v-btn>\n                </v-card-actions>\n            </v-form>\n        </v-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {convertName} from '@/plugins/helpers'\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport {GuiPresetsStatePreset} from '@/store/gui/presets/types'\n\ninterface presetForm {\n    bool: boolean\n    valid: boolean\n    name: string\n    gcode: string\n    id: string | null\n    boolInvalidMin: boolean\n    values: {\n        [key: string]: {\n            bool: boolean\n            value: number\n            type: 'heater' | 'temperature_fan'\n        }\n    }\n}\n\n@Component({\n    components: {SettingsRow}\n})\nexport default class SettingsPresetsTab extends Mixins(BaseMixin) {\n    convertName = convertName\n\n    private form: presetForm = {\n        bool: false,\n        valid: false,\n        name: '',\n        gcode: '',\n        id: null,\n        boolInvalidMin: false,\n        values: {}\n    }\n\n    private cooldownForm = {\n        bool: false,\n        valid: false,\n        gcode: ''\n    }\n\n    private rules = {\n        required: (value: string) => value !== '' || 'required',\n        unique: (value: string) => !this.existsPresetName(value) || 'Name already exists',\n    }\n\n    get presets() {\n        return this.$store.getters['gui/presets/getPresets'] ?? []\n    }\n\n    get heaters() {\n        return this.$store.getters['printer/getHeaters'] ?? []\n    }\n\n    get temperatureFans() {\n        return this.$store.getters['printer/getTemperatureFans'] ?? []\n    }\n\n    get cooldownGcode() {\n        return this.$store.getters['gui/presets/getCooldownGcode']\n    }\n\n    existsPresetName(name: string) {\n        return (this.presets.findIndex((preset: GuiPresetsStatePreset) => preset.name === name && preset.id !== this.form.id) !== -1)\n    }\n\n    getSubTitle(preset: GuiPresetsStatePreset) {\n        let output: string[] = []\n\n        Object.keys(preset.values).forEach((key: string) => {\n            const values = preset.values[key]\n\n            if (values.bool) {\n                const name = key.indexOf(' ') ? key.slice(key.indexOf(' ') + 1) : key\n\n                output.push(this.convertName(name)+': '+values.value+'°C')\n            }\n        })\n\n        if (preset.gcode) output.push(this.$t('Settings.PresetsTab.CustomGCode').toString())\n\n        return output.join(', ')\n    }\n\n    createPreset() {\n        this.clearForm()\n        this.form.bool = true\n    }\n\n    clearForm() {\n        this.form.bool = false\n        this.form.id = null\n        this.form.name = ''\n        this.form.gcode = ''\n        this.form.boolInvalidMin = false\n        this.form.values = {}\n\n        for(const heater of this.heaters) {\n            this.form.values[heater.name] = {\n                bool: true,\n                value: 0,\n                type: 'heater',\n            }\n        }\n\n        for(const fan of this.temperatureFans) {\n            this.form.values['temperature_fan '+fan.name] = {\n                bool: true,\n                value: 0,\n                type: 'temperature_fan',\n            }\n        }\n    }\n\n    editPreset(preset: GuiPresetsStatePreset) {\n        this.form.name = preset.name\n        this.form.id = preset.id ?? null\n        this.form.gcode = preset.gcode\n        this.form.values = {}\n\n        for(const heater of this.heaters) {\n            if (heater.name in preset.values)\n                this.form.values[heater.name] = {...preset.values[heater.name]}\n            else\n                this.form.values[heater.name] = {\n                    bool: false,\n                    value: 0,\n                    type: 'heater',\n                }\n        }\n\n        for(const fan of this.temperatureFans) {\n            if ('temperature_fan '+fan.name in preset.values)\n                this.form.values['temperature_fan '+fan.name] = {...preset.values['temperature_fan '+fan.name]}\n            else\n                this.form.values['temperature_fan '+fan.name] = {\n                    bool: false,\n                    value: 0,\n                    type: 'temperature_fan',\n                }\n        }\n\n        this.form.bool = true\n    }\n\n    savePreset() {\n        let setValues = 0\n        for (const key of Object.keys(this.form.values)) {\n            if (this.form.values[key].bool) setValues++\n        }\n        if (this.form.gcode.length) setValues++\n\n        if (setValues === 0) this.form.boolInvalidMin = true\n        else if (this.form.valid) {\n            const preset: GuiPresetsStatePreset = {\n                name: this.form.name,\n                gcode: this.form.gcode,\n                values: this.form.values\n            }\n\n            if (this.form.id !== null) {\n                this.$store.dispatch('gui/presets/update',  { id: this.form.id, values: preset } )\n            } else this.$store.dispatch('gui/presets/store',  { values: preset } )\n\n            this.clearForm()\n        }\n    }\n\n    editCooldown() {\n        this.cooldownForm.gcode = this.cooldownGcode\n        this.cooldownForm.bool = true\n    }\n\n    saveCooldown() {\n        if (this.cooldownForm.valid) {\n            this.$store.dispatch('gui/presets/saveSetting', { name: 'cooldownGcode', value: this.cooldownForm.gcode })\n            this.cooldownForm.bool = false\n        }\n    }\n\n    deletePreset(id: string) {\n        this.$store.dispatch('gui/presets/delete',  id)\n    }\n}\n</script>"]}]}