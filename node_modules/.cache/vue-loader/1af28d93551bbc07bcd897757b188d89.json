{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/HistoryAllPrintStatus.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/HistoryAllPrintStatus.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKaW1wb3J0IENvbXBvbmVudCBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JwppbXBvcnQge2NyZWF0ZUNvbXBvbmVudH0gZnJvbSAnZWNoYXJ0cy1mb3ItdnVlJwppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnCmltcG9ydCB7TWl4aW5zLCBXYXRjaH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IEJhc2VNaXhpbiBmcm9tICdAL2NvbXBvbmVudHMvbWl4aW5zL2Jhc2UnCmltcG9ydCB7RUNoYXJ0c30gZnJvbSAnZWNoYXJ0cy9jb3JlJwoKQENvbXBvbmVudCh7CiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgRUNoYXJ0czogY3JlYXRlQ29tcG9uZW50KHsgZWNoYXJ0cyB9KSwKICAgIH0KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGlzdG9yeUFsbFByaW50U3RhdHVzIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewoKICAgICRyZWZzITogewogICAgICAgIGhpc3RvcnlBbGxQcmludFN0YXR1czogYW55CiAgICB9CgogICAgcHJpdmF0ZSBjaGFydE9wdGlvbnM6IGFueSA9IHsKICAgICAgICBkYXJrTW9kZTogdHJ1ZSwKICAgICAgICBhbmltYXRpb246IGZhbHNlLAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgICAgdG9wOiAxMCwKICAgICAgICAgICAgcmlnaHQ6IDAsCiAgICAgICAgICAgIGJvdHRvbTogMCwKICAgICAgICAgICAgbGVmdDogMTAsCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDAsCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgYXZvaWRMYWJlbE92ZXJsYXA6IGZhbHNlLAogICAgICAgICAgICByYWRpdXM6IFsnMzUlJywgJzYwJSddLAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMCwKICAgICAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH1dCiAgICB9CgogICAgZ2V0IGFsbFByaW50U3RhdHVzQXJyYXkoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3NlcnZlci9oaXN0b3J5L2dldEFsbFByaW50U3RhdHVzQXJyYXknXQogICAgfQoKICAgIGdldCBjaGFydCAoKTogRUNoYXJ0cyB8IG51bGwgewogICAgICAgIGNvbnN0IGhpc3RvcnlBbGxQcmludFN0YXR1cyA9IHRoaXMuJHJlZnMuaGlzdG9yeUFsbFByaW50U3RhdHVzCiAgICAgICAgcmV0dXJuIGhpc3RvcnlBbGxQcmludFN0YXR1cz8uaW5zdCA/PyBudWxsCiAgICB9CgogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmNoYXJ0T3B0aW9ucy5zZXJpZXNbMF0uZGF0YSA9IHRoaXMuYWxsUHJpbnRTdGF0dXNBcnJheQogICAgICAgIHRoaXMuY2hhcnQ/LnNldE9wdGlvbih0aGlzLmNoYXJ0T3B0aW9ucykKCiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuZXZlbnRMaXN0ZW5lclJlc2l6ZSkKICAgIH0KCiAgICBkZXN0cm95ZWQoKSB7CiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuZXZlbnRMaXN0ZW5lclJlc2l6ZSkKICAgIH0KCiAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuCiAgICAgICAgaWYgKHRoaXMuY2hhcnQpIHRoaXMuY2hhcnQuZGlzcG9zZSgpCiAgICB9CgogICAgQFdhdGNoKCdhbGxQcmludFN0YXR1c0FycmF5JykKICAgIGFsbFByaW50U3RhdHVzQXJyYXlDaGFuZ2VkKG5ld1ZhbDogYW55KSB7CiAgICAgICAgdGhpcy5jaGFydD8uc2V0T3B0aW9uKHsKICAgICAgICAgICAgc2VyaWVzOiB7CiAgICAgICAgICAgICAgICBkYXRhOiBuZXdWYWwKICAgICAgICAgICAgfQogICAgICAgIH0pCiAgICB9CgogICAgdmlzaWJpbGl0eUNoYW5nZWQgKGlzVmlzaWJsZTogYm9vbGVhbikgewogICAgICAgIGlmIChpc1Zpc2libGUpIHRoaXMuY2hhcnQ/LnJlc2l6ZSgpCiAgICB9CgogICAgZXZlbnRMaXN0ZW5lclJlc2l6ZSgpIHsKICAgICAgICB0aGlzLmNoYXJ0Py5yZXNpemUoKQogICAgfQp9Cg=="},{"version":3,"sources":["HistoryAllPrintStatus.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"HistoryAllPrintStatus.vue","sourceRoot":"src/components/charts","sourcesContent":["<template>\n    <ECharts\n        ref=\"historyAllPrintStatus\"\n        :option=\"chartOptions\"\n        :init-options=\"{ renderer: 'svg' }\"\n        style=\"height: 250px; width: 100%;\"\n        v-observe-visibility=\"visibilityChanged\"\n    ></ECharts>\n</template>\n\n<script lang=\"ts\">\n\nimport Component from 'vue-class-component'\nimport {createComponent} from 'echarts-for-vue'\nimport * as echarts from 'echarts'\nimport {Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {ECharts} from 'echarts/core'\n\n@Component({\n    components: {\n        ECharts: createComponent({ echarts }),\n    }\n})\nexport default class HistoryAllPrintStatus extends Mixins(BaseMixin) {\n\n    $refs!: {\n        historyAllPrintStatus: any\n    }\n\n    private chartOptions: any = {\n        darkMode: true,\n        animation: false,\n        grid: {\n            top: 10,\n            right: 0,\n            bottom: 0,\n            left: 10,\n        },\n        tooltip: {\n            trigger: 'item',\n            borderWidth: 0,\n        },\n        series: [{\n            type: 'pie',\n            data: [],\n            avoidLabelOverlap: false,\n            radius: ['35%', '60%'],\n            emphasis: {\n                itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n            }\n        }]\n    }\n\n    get allPrintStatusArray() {\n        return this.$store.getters['server/history/getAllPrintStatusArray']\n    }\n\n    get chart (): ECharts | null {\n        const historyAllPrintStatus = this.$refs.historyAllPrintStatus\n        return historyAllPrintStatus?.inst ?? null\n    }\n\n    mounted() {\n        this.chartOptions.series[0].data = this.allPrintStatusArray\n        this.chart?.setOption(this.chartOptions)\n\n        window.addEventListener('resize', this.eventListenerResize)\n    }\n\n    destroyed() {\n        window.removeEventListener('resize', this.eventListenerResize)\n    }\n\n    beforeDestroy() {\n        if (typeof window === 'undefined') return\n        if (this.chart) this.chart.dispose()\n    }\n\n    @Watch('allPrintStatusArray')\n    allPrintStatusArrayChanged(newVal: any) {\n        this.chart?.setOption({\n            series: {\n                data: newVal\n            }\n        })\n    }\n\n    visibilityChanged (isVisible: boolean) {\n        if (isVisible) this.chart?.resize()\n    }\n\n    eventListenerResize() {\n        this.chart?.resize()\n    }\n}\n</script>"]}]}