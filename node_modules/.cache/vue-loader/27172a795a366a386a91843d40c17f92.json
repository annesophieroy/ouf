{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsDashboardTabTablet.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsDashboardTabTablet.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBDb21wb25lbnQgZnJvbSAndnVlLWNsYXNzLWNvbXBvbmVudCcKaW1wb3J0IHsgTWl4aW5zIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IERhc2hib2FyZE1peGluIGZyb20gJ0AvY29tcG9uZW50cy9taXhpbnMvZGFzaGJvYXJkJwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKaW1wb3J0IHtjYXBpdGFsaXplLCBjb252ZXJ0UGFuZWxuYW1lVG9JY29ufSBmcm9tICdAL3BsdWdpbnMvaGVscGVycycKQENvbXBvbmVudCggewogICAgY29tcG9uZW50czogewogICAgICAgIGRyYWdnYWJsZQogICAgfQp9CikKZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NEYXNoYm9hcmRUYWJUYWJsZXQgZXh0ZW5kcyBNaXhpbnMoRGFzaGJvYXJkTWl4aW4pIHsKICAgIGNhcGl0YWxpemUgPSBjYXBpdGFsaXplCiAgICBjb252ZXJ0UGFuZWxuYW1lVG9JY29uID0gY29udmVydFBhbmVsbmFtZVRvSWNvbgoKICAgIGdldCB0YWJsZXRMYXlvdXQxKCkgewogICAgICAgIGxldCBwYW5lbHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydndWkvZ2V0UGFuZWxzJ10oJ3RhYmxldExheW91dDEnKQogICAgICAgIHBhbmVscyA9IHBhbmVscy5jb25jYXQodGhpcy5taXNzaW5nUGFuZWxzVGFibGV0KQoKICAgICAgICByZXR1cm4gcGFuZWxzCiAgICB9CgogICAgc2V0IHRhYmxldExheW91dDEobmV3VmFsKSB7CiAgICAgICAgbmV3VmFsID0gbmV3VmFsLmZpbHRlcigoZWxlbWVudDogYW55KSA9PiBlbGVtZW50ICE9PSB1bmRlZmluZWQpCgogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvc2F2ZVNldHRpbmcnLCB7bmFtZTogJ2Rhc2hib2FyZC50YWJsZXRMYXlvdXQxJywgdmFsdWU6IG5ld1ZhbCB9KQogICAgfQoKICAgIGdldCB0YWJsZXRMYXlvdXQyKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydndWkvZ2V0UGFuZWxzJ10oJ3RhYmxldExheW91dDInKQogICAgfQoKICAgIHNldCB0YWJsZXRMYXlvdXQyKG5ld1ZhbCkgewogICAgICAgIG5ld1ZhbCA9IG5ld1ZhbC5maWx0ZXIoKGVsZW1lbnQ6IGFueSkgPT4gZWxlbWVudCAhPT0gdW5kZWZpbmVkKQoKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NhdmVTZXR0aW5nJywge25hbWU6ICdkYXNoYm9hcmQudGFibGV0TGF5b3V0MicsIHZhbHVlOiBuZXdWYWwgfSkKICAgIH0KCiAgICBjaGFuZ2VTdGF0ZTEobmFtZTogc3RyaW5nLCBuZXdWYWw6IGJvb2xlYW4pIHsKICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMudGFibGV0TGF5b3V0MS5maW5kSW5kZXgoKGVsZW1lbnQ6IGFueSkgPT4gZWxlbWVudC5uYW1lID09PSBuYW1lKQogICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgICAgICAgdGhpcy50YWJsZXRMYXlvdXQxW2luZGV4XS52aXNpYmxlID0gbmV3VmFsCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvc2F2ZVNldHRpbmcnLCB7bmFtZTogJ2Rhc2hib2FyZC50YWJsZXRMYXlvdXQxJywgdmFsdWU6IHRoaXMudGFibGV0TGF5b3V0MSB9KQogICAgICAgIH0KICAgIH0KCiAgICBjaGFuZ2VTdGF0ZTIobmFtZTogc3RyaW5nLCBuZXdWYWw6IGJvb2xlYW4pIHsKICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMudGFibGV0TGF5b3V0Mi5maW5kSW5kZXgoKGVsZW1lbnQ6IGFueSkgPT4gZWxlbWVudC5uYW1lID09PSBuYW1lKQogICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgICAgICAgdGhpcy50YWJsZXRMYXlvdXQyW2luZGV4XS52aXNpYmxlID0gbmV3VmFsCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvc2F2ZVNldHRpbmcnLCB7bmFtZTogJ2Rhc2hib2FyZC50YWJsZXRMYXlvdXQyJywgdmFsdWU6IHRoaXMudGFibGV0TGF5b3V0MiB9KQogICAgICAgIH0KICAgIH0KCiAgICByZXNldExheW91dCgpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3Jlc2V0TGF5b3V0JywgJ3RhYmxldExheW91dDEnKQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvcmVzZXRMYXlvdXQnLCAndGFibGV0TGF5b3V0MicpCiAgICB9Cn0K"},{"version":3,"sources":["SettingsDashboardTabTablet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SettingsDashboardTabTablet.vue","sourceRoot":"src/components/settings","sourcesContent":["<style scoped>\n    .ghost {\n        opacity: 0.5;\n        background: #c8ebfb;\n    }\n</style>\n\n<template>\n    <v-card flat>\n        <v-card-text>\n            <v-row>\n                <v-col class=\"col-12 col-md-6\">\n                    <v-card class=\"mx-auto\" max-width=\"300\" tile >\n                        <v-list dense>\n                            <v-list-item>\n                                <v-row>\n                                    <v-col class=\"col-auto pr-0\">\n                                        <v-icon>mdi-information</v-icon>\n                                    </v-col>\n                                    <v-col>\n                                        {{ $t('Panels.StatusPanel.Headline') }}\n                                    </v-col>\n                                    <v-col class=\"col-auto\">\n                                        <v-icon color=\"grey lighten-1\">mdi-lock</v-icon>\n                                    </v-col>\n                                </v-row>\n                            </v-list-item>\n                            <draggable v-model=\"tabletLayout1\" :handle=\"isMobile ? '.handle' : ''\" class=\"v-list-item-group\" ghost-class=\"ghost\" group=\"tabletViewport\">\n                                <template v-for=\"(element) in tabletLayout1\">\n                                    <v-list-item :key=\"'item-tablet-'+element.name\" link>\n                                        <v-row>\n                                            <v-col class=\"col-auto pr-0\">\n                                                <v-icon v-if=\"isMobile\" class=\"handle\">mdi-arrow-up-down</v-icon>\n                                                <v-icon v-else v-text=\"convertPanelnameToIcon(element.name)\"></v-icon>\n                                            </v-col>\n                                            <v-col class=\"pr-0\">\n                                                {{ getPanelName(element.name) }}\n                                            </v-col>\n                                            <v-col class=\"col-auto pl-0\">\n                                                <v-icon v-if=\"!element.visible\" color=\"grey lighten-1\" @click.stop=\"changeState1(element.name,true)\">mdi-checkbox-blank-outline</v-icon>\n                                                <v-icon v-else color=\"primary\" @click.stop=\"changeState1(element.name,false)\">mdi-checkbox-marked</v-icon>\n                                            </v-col>\n                                        </v-row>\n                                    </v-list-item>\n                                </template>\n                            </draggable>\n                        </v-list>\n                    </v-card>\n                </v-col>\n                <v-col class=\"col-12 col-md-6\">\n                    <v-card class=\"mx-auto\" max-width=\"300\" tile >\n                        <v-list dense>\n                            <draggable v-model=\"tabletLayout2\" :handle=\"isMobile ? '.handle' : ''\" class=\"v-list-item-group\" ghost-class=\"ghost\" group=\"tabletViewport\">\n                                <template v-for=\"(element) in tabletLayout2\">\n                                    <v-list-item :key=\"'item-tablet-'+element.name\" link>\n                                        <v-row>\n                                            <v-col class=\"col-auto pr-0\">\n                                                <v-icon v-if=\"isMobile\" class=\"handle\">mdi-arrow-up-down</v-icon>\n                                                <v-icon v-else v-text=\"convertPanelnameToIcon(element.name)\"></v-icon>\n                                            </v-col>\n                                            <v-col class=\"pr-0\">\n                                                {{ getPanelName(element.name) }}\n                                            </v-col>\n                                            <v-col class=\"col-auto pl-0\">\n                                                <v-icon v-if=\"!element.visible\" color=\"grey lighten-1\" @click.stop=\"changeState2(element.name,true)\">mdi-checkbox-blank-outline</v-icon>\n                                                <v-icon v-else color=\"primary\" @click.stop=\"changeState2(element.name,false)\">mdi-checkbox-marked</v-icon>\n                                            </v-col>\n                                        </v-row>\n                                    </v-list-item>\n                                </template>\n                            </draggable>\n                        </v-list>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <v-row>\n                <v-col class=\"text-center\">\n                    <v-btn color=\"error\" @click=\"resetLayout\">{{ $t('Settings.DashboardTab.ResetLayout') }}</v-btn>\n                </v-col>\n            </v-row>\n        </v-card-text>\n    </v-card>\n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport { Mixins } from 'vue-property-decorator'\nimport DashboardMixin from '@/components/mixins/dashboard'\nimport draggable from 'vuedraggable'\nimport {capitalize, convertPanelnameToIcon} from '@/plugins/helpers'\n@Component( {\n    components: {\n        draggable\n    }\n}\n)\nexport default class SettingsDashboardTabTablet extends Mixins(DashboardMixin) {\n    capitalize = capitalize\n    convertPanelnameToIcon = convertPanelnameToIcon\n\n    get tabletLayout1() {\n        let panels = this.$store.getters['gui/getPanels']('tabletLayout1')\n        panels = panels.concat(this.missingPanelsTablet)\n\n        return panels\n    }\n\n    set tabletLayout1(newVal) {\n        newVal = newVal.filter((element: any) => element !== undefined)\n\n        this.$store.dispatch('gui/saveSetting', {name: 'dashboard.tabletLayout1', value: newVal })\n    }\n\n    get tabletLayout2() {\n        return this.$store.getters['gui/getPanels']('tabletLayout2')\n    }\n\n    set tabletLayout2(newVal) {\n        newVal = newVal.filter((element: any) => element !== undefined)\n\n        this.$store.dispatch('gui/saveSetting', {name: 'dashboard.tabletLayout2', value: newVal })\n    }\n\n    changeState1(name: string, newVal: boolean) {\n        const index = this.tabletLayout1.findIndex((element: any) => element.name === name)\n        if (index !== -1) {\n            this.tabletLayout1[index].visible = newVal\n            this.$store.dispatch('gui/saveSetting', {name: 'dashboard.tabletLayout1', value: this.tabletLayout1 })\n        }\n    }\n\n    changeState2(name: string, newVal: boolean) {\n        const index = this.tabletLayout2.findIndex((element: any) => element.name === name)\n        if (index !== -1) {\n            this.tabletLayout2[index].visible = newVal\n            this.$store.dispatch('gui/saveSetting', {name: 'dashboard.tabletLayout2', value: this.tabletLayout2 })\n        }\n    }\n\n    resetLayout() {\n        this.$store.dispatch('gui/resetLayout', 'tabletLayout1')\n        this.$store.dispatch('gui/resetLayout', 'tabletLayout2')\n    }\n}\n</script>"]}]}