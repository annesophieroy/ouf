{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/HistoryFilamentUsage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/HistoryFilamentUsage.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKaW1wb3J0IENvbXBvbmVudCBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JwppbXBvcnQge2NyZWF0ZUNvbXBvbmVudH0gZnJvbSAnZWNoYXJ0cy1mb3ItdnVlJwppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnCmltcG9ydCB7TWl4aW5zLCBXYXRjaH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IEJhc2VNaXhpbiBmcm9tICcuLi9taXhpbnMvYmFzZScKaW1wb3J0IHtFQ2hhcnRzfSBmcm9tICdlY2hhcnRzL2NvcmUnCgpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBFQ2hhcnRzOiBjcmVhdGVDb21wb25lbnQoeyBlY2hhcnRzIH0pLAogICAgfQp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBIaXN0b3J5UHJpbnR0aW1lQXZnIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewogICAgJHJlZnMhOiB7CiAgICAgICAgaGlzdG9yeUZpbGFtZW50VXNhZ2U6IGFueQogICAgfQoKICAgIHByaXZhdGUgY2hhcnRPcHRpb25zOiBhbnkgPSB7CiAgICAgICAgZGFya01vZGU6IHRydWUsCiAgICAgICAgYW5pbWF0aW9uOiBmYWxzZSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICAgIHRvcDogMjUsCiAgICAgICAgICAgIHJpZ2h0OiA0MCwKICAgICAgICAgICAgYm90dG9tOiAzMCwKICAgICAgICAgICAgbGVmdDogNDAsCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDAsCiAgICAgICAgICAgIGZvcm1hdHRlcjogKGRhdGFzZXRzOiBhbnkpID0+IHsKICAgICAgICAgICAgICAgIGxldCBvdXRwdXQgPSAnJwoKICAgICAgICAgICAgICAgIGlmIChkYXRhc2V0cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBvdXRwdXQgPSBkYXRhc2V0c1swXVsnbWFya2VyJ10KICAgICAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRUaW1lID0gZGF0YXNldHNbMF1bJ2F4aXNWYWx1ZUxhYmVsJ10KICAgICAgICAgICAgICAgICAgICBjb25zdCBhID0gb3V0cHV0VGltZS5zcGxpdCgvW14wLTldLykKICAgICAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRUaW1lRGF0ZSA9IG5ldyBEYXRlIChhWzBdLGFbMV0tMSwgYVsyXSkKICAgICAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRWYWx1ZSA9IE1hdGgucm91bmQoZGF0YXNldHNbMF1bJ2RhdGEnXVsxXSAqIDEwKSAvIDEwCgogICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBvdXRwdXRUaW1lRGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKSsnOiAnK291dHB1dFZhbHVlKydtJwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBvdXRwdXQKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgICAgdHlwZTogJ3RpbWUnLAogICAgICAgICAgICBtaW46IG5ldyBEYXRlKCkuc2V0SG91cnMoMCwwLDApIC0gNjAqNjAqMjQqMTQqMTAwMCwKICAgICAgICAgICAgbWF4OiBuZXcgRGF0ZSgpLnNldEhvdXJzKDAsMCwwKSwKICAgICAgICAgICAgbWluSW50ZXJ2YWw6IDYwKjYwKjI0KjEwMDAsCiAgICAgICAgICAgIHNwbGl0TGluZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA2KScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI0KScsCiAgICAgICAgICAgICAgICBtYXJnaW46IDEwLAogICAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgICAgbmFtZTogdGhpcy4kdCgnSGlzdG9yeS5IaXN0b3J5RmlsYW1lbnRVc2FnZScpLAogICAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgICBtaW5JbnRlcnZhbDogMTAsCiAgICAgICAgICAgIG1heEludGVydmFsOiAxMDAsCiAgICAgICAgICAgIG5hbWVMb2NhdGlvbjogJ2VuZCcsCiAgICAgICAgICAgIG5hbWVHYXA6IDUsCiAgICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI0KScsCiAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLAogICAgICAgICAgICB9LAogICAgICAgICAgICBzcGxpdExpbmU6IHsKICAgICAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEyKScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI0KScsCiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9JywKICAgICAgICAgICAgICAgIC8vcm90YXRlOiA5MCwKICAgICAgICAgICAgICAgIC8vc2hvd01heExhYmVsOiBmYWxzZSwKICAgICAgICAgICAgICAgIHNob3dNaW5MYWJlbDogdHJ1ZSwKICAgICAgICAgICAgICAgIG1hcmdpbjogNSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMiknLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY29sb3I6IFsnI0JEQkRCRCddLAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBzaG93U3ltYm9sOiBmYWxzZQogICAgICAgIH1dCiAgICB9CgogICAgZ2V0IGZpbGFtZW50VXNhZ2VBcnJheSgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snc2VydmVyL2hpc3RvcnkvZ2V0RmlsYW1lbnRVc2FnZUFycmF5J10KICAgIH0KCiAgICBnZXQgY2hhcnQgKCk6IEVDaGFydHMgfCBudWxsIHsKICAgICAgICBjb25zdCBoaXN0b3J5RmlsYW1lbnRVc2FnZSA9IHRoaXMuJHJlZnMuaGlzdG9yeUZpbGFtZW50VXNhZ2UKICAgICAgICByZXR1cm4gaGlzdG9yeUZpbGFtZW50VXNhZ2U/Lmluc3QgPz8gbnVsbAogICAgfQoKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5jaGFydE9wdGlvbnMuc2VyaWVzWzBdLmRhdGEgPSB0aGlzLmZpbGFtZW50VXNhZ2VBcnJheQogICAgICAgIHRoaXMuY2hhcnQ/LnNldE9wdGlvbih0aGlzLmNoYXJ0T3B0aW9ucykKCiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuZXZlbnRMaXN0ZW5lclJlc2l6ZSkKICAgIH0KCiAgICBkZXN0cm95ZWQoKSB7CiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuZXZlbnRMaXN0ZW5lclJlc2l6ZSkKICAgIH0KCiAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuCiAgICAgICAgaWYgKHRoaXMuY2hhcnQpIHRoaXMuY2hhcnQuZGlzcG9zZSgpCiAgICB9CgogICAgQFdhdGNoKCdmaWxhbWVudFVzYWdlQXJyYXknKQogICAgZmlsYW1lbnRVc2FnZUFycmF5Q2hhbmdlZChuZXdWYWw6IGFueSkgewogICAgICAgIHRoaXMuY2hhcnQ/LnNldE9wdGlvbih7CiAgICAgICAgICAgIHNlcmllczogewogICAgICAgICAgICAgICAgZGF0YTogbmV3VmFsCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgfQoKICAgIHZpc2liaWxpdHlDaGFuZ2VkIChpc1Zpc2libGU6IGJvb2xlYW4pIHsKICAgICAgICBpZiAoaXNWaXNpYmxlKSB0aGlzLmNoYXJ0Py5yZXNpemUoKQogICAgfQoKICAgIGV2ZW50TGlzdGVuZXJSZXNpemUoKSB7CiAgICAgICAgdGhpcy5jaGFydD8ucmVzaXplKCkKICAgIH0KfQo="},{"version":3,"sources":["HistoryFilamentUsage.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"HistoryFilamentUsage.vue","sourceRoot":"src/components/charts","sourcesContent":["<template>\n    <ECharts\n        ref=\"historyFilamentUsage\"\n        :option=\"chartOptions\"\n        :init-options=\"{ renderer: 'svg' }\"\n        style=\"height: 175px; width: 100%;\"\n        v-observe-visibility=\"visibilityChanged\"\n    ></ECharts>\n</template>\n\n<script lang=\"ts\">\n\nimport Component from 'vue-class-component'\nimport {createComponent} from 'echarts-for-vue'\nimport * as echarts from 'echarts'\nimport {Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport {ECharts} from 'echarts/core'\n\n@Component({\n    components: {\n        ECharts: createComponent({ echarts }),\n    }\n})\nexport default class HistoryPrinttimeAvg extends Mixins(BaseMixin) {\n    $refs!: {\n        historyFilamentUsage: any\n    }\n\n    private chartOptions: any = {\n        darkMode: true,\n        animation: false,\n        grid: {\n            top: 25,\n            right: 40,\n            bottom: 30,\n            left: 40,\n        },\n        tooltip: {\n            trigger: 'axis',\n            borderWidth: 0,\n            formatter: (datasets: any) => {\n                let output = ''\n\n                if (datasets.length) {\n                    output = datasets[0]['marker']\n                    const outputTime = datasets[0]['axisValueLabel']\n                    const a = outputTime.split(/[^0-9]/)\n                    const outputTimeDate = new Date (a[0],a[1]-1, a[2])\n                    const outputValue = Math.round(datasets[0]['data'][1] * 10) / 10\n\n                    output += outputTimeDate.toLocaleDateString()+': '+outputValue+'m'\n                }\n\n                return output\n            }\n        },\n        xAxis: {\n            type: 'time',\n            min: new Date().setHours(0,0,0) - 60*60*24*14*1000,\n            max: new Date().setHours(0,0,0),\n            minInterval: 60*60*24*1000,\n            splitLine: {\n                show: true,\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.06)',\n                },\n            },\n            axisLabel: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                margin: 10,\n            },\n        },\n        yAxis: {\n            name: this.$t('History.HistoryFilamentUsage'),\n            type: 'value',\n            minInterval: 10,\n            maxInterval: 100,\n            nameLocation: 'end',\n            nameGap: 5,\n            nameTextStyle: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                align: 'left',\n            },\n            splitLine: {\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.12)',\n                },\n            },\n            axisLabel: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                formatter: '{value}',\n                //rotate: 90,\n                //showMaxLabel: false,\n                showMinLabel: true,\n                margin: 5,\n            },\n            axisLine: {\n                show: true,\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.12)',\n                },\n            }\n        },\n        color: ['#BDBDBD'],\n        series: [{\n            type: 'bar',\n            data: [],\n            showSymbol: false\n        }]\n    }\n\n    get filamentUsageArray() {\n        return this.$store.getters['server/history/getFilamentUsageArray']\n    }\n\n    get chart (): ECharts | null {\n        const historyFilamentUsage = this.$refs.historyFilamentUsage\n        return historyFilamentUsage?.inst ?? null\n    }\n\n    mounted() {\n        this.chartOptions.series[0].data = this.filamentUsageArray\n        this.chart?.setOption(this.chartOptions)\n\n        window.addEventListener('resize', this.eventListenerResize)\n    }\n\n    destroyed() {\n        window.removeEventListener('resize', this.eventListenerResize)\n    }\n\n    beforeDestroy() {\n        if (typeof window === 'undefined') return\n        if (this.chart) this.chart.dispose()\n    }\n\n    @Watch('filamentUsageArray')\n    filamentUsageArrayChanged(newVal: any) {\n        this.chart?.setOption({\n            series: {\n                data: newVal\n            }\n        })\n    }\n\n    visibilityChanged (isVisible: boolean) {\n        if (isVisible) this.chart?.resize()\n    }\n\n    eventListenerResize() {\n        this.chart?.resize()\n    }\n}\n</script>"]}]}