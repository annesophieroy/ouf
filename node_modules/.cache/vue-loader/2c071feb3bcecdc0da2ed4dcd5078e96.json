{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/MachineSettings/PressureAdvanceSettings.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/MachineSettings/PressureAdvanceSettings.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHsgQ29tcG9uZW50LCBNaXhpbnMgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJ0AvY29tcG9uZW50cy9taXhpbnMvYmFzZScKaW1wb3J0IFBhbmVsIGZyb20gJ0AvY29tcG9uZW50cy91aS9QYW5lbC52dWUnCmltcG9ydCBQcmVzc3VyZUFkdmFuY2VTZXR0aW5nc0lucHV0IGZyb20gJ0AvY29tcG9uZW50cy9pbnB1dHMvUHJlc3N1cmVBZHZhbmNlU2V0dGluZ3NJbnB1dC52dWUnCgpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHtQYW5lbCwgUHJlc3N1cmVBZHZhbmNlU2V0dGluZ3NJbnB1dH0KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJlc3N1cmVBZHZhbmNlU2V0dGluZ3MgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CiAgICBwcml2YXRlIGV4dHJ1ZGVyczogc3RyaW5nW10gPSBbXQogICAgcHJpdmF0ZSBzZWxlY3RlZEV4dHJ1ZGVyID0gJycKCiAgICByZXNldFRvQWN0aXZlRXh0cnVkZXIoKTogdm9pZCB7CiAgICAgICAgdGhpcy5zZWxlY3RlZEV4dHJ1ZGVyID0gdGhpcy4kc3RvcmUuc3RhdGUucHJpbnRlci50b29saGVhZD8uZXh0cnVkZXIKICAgIH0KCiAgICBnZXQgYWxsX2V4dHJ1ZGVycygpOiBzdHJpbmdbXSB7CiAgICAgICAgT2JqZWN0LmtleXModGhpcy4kc3RvcmUuc3RhdGUucHJpbnRlcikuZm9yRWFjaCgoZSkgPT4gewogICAgICAgICAgICBpZiAoZS5zdGFydHNXaXRoKCdleHRydWRlcicpICYmICF0aGlzLmV4dHJ1ZGVycy5pbmNsdWRlcyhlKSkgdGhpcy5leHRydWRlcnMucHVzaChlKQogICAgICAgIH0pCiAgICAgICAgdGhpcy5leHRydWRlcnMubGVuZ3RoID09PSAxID8gdGhpcy5yZXNldFRvQWN0aXZlRXh0cnVkZXIoKSA6IHt9CgogICAgICAgIHJldHVybiB0aGlzLmV4dHJ1ZGVycwogICAgfQoKICAgIGdldCBhY3RpdmVfZXh0cnVkZXIoKTogc3RyaW5nIHsKICAgICAgICB0aGlzLnJlc2V0VG9BY3RpdmVFeHRydWRlcigpCiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnByaW50ZXIudG9vbGhlYWQ/LmV4dHJ1ZGVyCiAgICB9CgogICAgZ2V0IGN1cnJlbnRfcHJlc3N1cmVfYWR2YW5jZSgpOiBudW1iZXIgewogICAgICAgIHJldHVybiBNYXRoLmZsb29yKCh0aGlzLiRzdG9yZS5zdGF0ZS5wcmludGVyPy5bdGhpcy5zZWxlY3RlZEV4dHJ1ZGVyXT8ucHJlc3N1cmVfYWR2YW5jZSA/PyAwKSAqIDEwMDApIC8gMTAwMAogICAgfQoKICAgIGdldCBjdXJyZW50X3Ntb290aF90aW1lKCk6IG51bWJlciB7CiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKHRoaXMuJHN0b3JlLnN0YXRlLnByaW50ZXI/Llt0aGlzLnNlbGVjdGVkRXh0cnVkZXJdPy5zbW9vdGhfdGltZSA/PyAwLjA0KSAqIDEwMDApIC8gMTAwMAogICAgfQoKICAgIGdldCBkZWZhdWx0X3ByZXNzdXJlX2FkdmFuY2UoKTogbnVtYmVyIHsKICAgICAgICByZXR1cm4gTWF0aC5mbG9vcigodGhpcy4kc3RvcmUuc3RhdGUucHJpbnRlci5jb25maWdmaWxlPy5zZXR0aW5ncz8uW3RoaXMuc2VsZWN0ZWRFeHRydWRlcl0/LnByZXNzdXJlX2FkdmFuY2UgPz8gMCkgKiAxMDAwKSAvIDEwMDAKICAgIH0KCiAgICBnZXQgZGVmYXVsdF9zbW9vdGhfdGltZSgpOiBudW1iZXIgewogICAgICAgIHJldHVybiBNYXRoLmZsb29yKCh0aGlzLiRzdG9yZS5zdGF0ZS5wcmludGVyLmNvbmZpZ2ZpbGU/LnNldHRpbmdzPy5bdGhpcy5zZWxlY3RlZEV4dHJ1ZGVyXT8ucHJlc3N1cmVfYWR2YW5jZV9zbW9vdGhfdGltZSA/PyAwLjA0KSAqIDEwMDApIC8gMTAwMAogICAgfQoKfQo="},{"version":3,"sources":["PressureAdvanceSettings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"PressureAdvanceSettings.vue","sourceRoot":"src/components/panels/MachineSettings","sourcesContent":["<template>\n    <v-card-text>\n        <v-row>\n            <v-col v-if=\"this.all_extruders.length > 1\" class=\"col-12 col-xl-4\">\n                <div class=\"d-flex align-center\">\n                    <v-btn\n                        v-if=\"this.selectedExtruder !== this.active_extruder\"\n                        @click=\"resetToActiveExtruder\"\n                        class=\"mr-2\"\n                        icon\n                        plain\n                    ><v-icon>mdi-restart</v-icon>\n                    </v-btn>\n                    <v-select\n                        v-model=\"selectedExtruder\"\n                        :label=\"$t('Panels.MachineSettingsPanel.PressureAdvanceSettings.Extruder').toString()\"\n                        :items=\"all_extruders\"\n                        :value=\"active_extruder\"\n                        hide-details\n                        outlined\n                        dense\n                    ></v-select>\n                </div>\n            </v-col>\n            <v-col :class=\"(this.all_extruders.length > 1) ? 'col-12 col-md-6 col-xl-4' : 'col-12 col-md-6'\">\n                <pressure-advance-settings-input\n                    :label=\"$t('Panels.MachineSettingsPanel.PressureAdvanceSettings.Advance').toString()\"\n                    :target=\"current_pressure_advance\"\n                    :default-value=\"default_pressure_advance\"\n                    :extruder=\"selectedExtruder\"\n                    :hasSpinner=\"true\"\n                    :min=\"0\"\n                    :max=\"null\"\n                    :step=\"0.001\"\n                    :dec=\"3\"\n                    unit=\"mm/s\"\n                    attribute-name=\"ADVANCE\"\n                ></pressure-advance-settings-input>\n            </v-col>\n            <v-col :class=\"(this.all_extruders.length > 1) ? 'col-12 col-md-6 col-xl-4' : 'col-12 col-md-6'\">\n                <pressure-advance-settings-input\n                    :label=\"$t('Panels.MachineSettingsPanel.PressureAdvanceSettings.SmoothTime').toString()\"\n                    :target=\"current_smooth_time\"\n                    :default-value=\"default_smooth_time\"\n                    :extruder=\"selectedExtruder\"\n                    :hasSpinner=\"true\"\n                    :min=\"0\"\n                    :max=\"0.2\"\n                    :step=\"0.001\"\n                    :spinnerFactor=\"10\"\n                    :dec=\"3\"\n                    unit=\"s\"\n                    attribute-name=\"SMOOTH_TIME\"\n                ></pressure-advance-settings-input>\n            </v-col>\n        </v-row>\n    </v-card-text>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Mixins } from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport Panel from '@/components/ui/Panel.vue'\nimport PressureAdvanceSettingsInput from '@/components/inputs/PressureAdvanceSettingsInput.vue'\n\n@Component({\n    components: {Panel, PressureAdvanceSettingsInput}\n})\nexport default class PressureAdvanceSettings extends Mixins(BaseMixin) {\n    private extruders: string[] = []\n    private selectedExtruder = ''\n\n    resetToActiveExtruder(): void {\n        this.selectedExtruder = this.$store.state.printer.toolhead?.extruder\n    }\n\n    get all_extruders(): string[] {\n        Object.keys(this.$store.state.printer).forEach((e) => {\n            if (e.startsWith('extruder') && !this.extruders.includes(e)) this.extruders.push(e)\n        })\n        this.extruders.length === 1 ? this.resetToActiveExtruder() : {}\n\n        return this.extruders\n    }\n\n    get active_extruder(): string {\n        this.resetToActiveExtruder()\n        return this.$store.state.printer.toolhead?.extruder\n    }\n\n    get current_pressure_advance(): number {\n        return Math.floor((this.$store.state.printer?.[this.selectedExtruder]?.pressure_advance ?? 0) * 1000) / 1000\n    }\n\n    get current_smooth_time(): number {\n        return Math.floor((this.$store.state.printer?.[this.selectedExtruder]?.smooth_time ?? 0.04) * 1000) / 1000\n    }\n\n    get default_pressure_advance(): number {\n        return Math.floor((this.$store.state.printer.configfile?.settings?.[this.selectedExtruder]?.pressure_advance ?? 0) * 1000) / 1000\n    }\n\n    get default_smooth_time(): number {\n        return Math.floor((this.$store.state.printer.configfile?.settings?.[this.selectedExtruder]?.pressure_advance_smooth_time ?? 0.04) * 1000) / 1000\n    }\n\n}\n</script>\n"]}]}