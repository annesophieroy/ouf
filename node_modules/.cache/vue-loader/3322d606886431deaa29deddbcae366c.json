{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/StatusPanelExcludeObjectDialogMap.vue?vue&type=style&index=0&id=0c726f5d&lang=scss&scoped=true&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/StatusPanelExcludeObjectDialogMap.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1645990066541},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645990070825},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/postcss-loader/src/index.js","mtime":1645990067674},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/sass-loader/dist/cjs.js","mtime":1645990064431},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnN2ZyB7CiAgICAvL2JhY2tncm91bmQ6IHJnYmEoMjAwLCAyMDAsIDIwMCk7CiAgICBib3JkZXI6IDJweCBzb2xpZCAjODg4Owp9CgojdG9vbHRpcE9iamVjdE1hcCB7CiAgICBkaXNwbGF5OiBub25lOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICBib3JkZXItcmFkaXVzOiAzcHg7CiAgICBjb2xvcjogd2hpdGU7CiAgICBwYWRkaW5nOiAzcHggN3B4OwogICAgei1pbmRleDogMTAwOwoKICAgICY6YmVmb3JlIHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBjb250ZW50OiAnICc7CiAgICAgICAgd2lkdGg6IDA7CiAgICAgICAgaGVpZ2h0OiAwOwogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICBib3R0b206IC0xMHB4OwogICAgICAgIGxlZnQ6IDEwcHg7CiAgICAgICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCBibGFjazsKICAgICAgICBib3JkZXItbGVmdDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDsKICAgICAgICBib3JkZXItcmlnaHQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgICB9Cn0K"},{"version":3,"sources":["StatusPanelExcludeObjectDialogMap.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StatusPanelExcludeObjectDialogMap.vue","sourceRoot":"src/components/panels","sourcesContent":["<style lang=\"scss\" scoped>\n    svg {\n        //background: rgba(200, 200, 200);\n        border: 2px solid #888;\n    }\n\n    #tooltipObjectMap {\n        display: none;\n        position: absolute;\n        background: black;\n        border-radius: 3px;\n        color: white;\n        padding: 3px 7px;\n        z-index: 100;\n\n        &:before {\n            display: block;\n            content: ' ';\n            width: 0;\n            height: 0;\n            position: absolute;\n            bottom: -10px;\n            left: 10px;\n            border-top: 10px solid black;\n            border-left: 10px solid transparent;\n            border-right: 10px solid transparent;\n        }\n    }\n</style>\n\n<template>\n    <div style=\"position: relative;\">\n        <div id=\"tooltipObjectMap\" ref=\"tooltipObjectMap\"></div>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" :viewBox=\"viewBox\" xml:space=\"preserve\">\n            <defs>\n                <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"4\" refX=\"2\" refY=\"2\" orient=\"auto\">\n                    <polygon points=\"0 0, 5 2, 0 4\" :fill=\"coordinationCrossColor\" />\n                </marker>\n            </defs>\n            <line :x1=\"convertX(0)\" :y1=\"convertY(1)\" :x2=\"convertX(stepperXmax / 4)\" :y2=\"convertY(1)\" :stroke=\"coordinationCrossColor\" stroke-width=\"2\" marker-end=\"url(#arrowhead)\" />\n            <line :x1=\"convertX(1)\" :y1=\"convertY(0)\" :x2=\"convertX(1)\" :y2=\"convertY(stepperYmax / 4)\" :stroke=\"coordinationCrossColor\" stroke-width=\"2\" marker-end=\"url(#arrowhead)\" />\n            <g>\n                <line v-for=\"x in xStripes\" v-bind:key=\"'xLines'+x\" :x1=\"convertX(x)\" :x2=\"convertX(x)\" :y1=\"convertY(stepperYmin)\" :y2=\"convertY(stepperYmax)\" :stroke=\"coordinationCrossColor\" :stroke-opacity=\"0.25\" stroke-width=\"1\" />\n                <line v-for=\"y in yStripes\" v-bind:key=\"'yLines'+y\" :x1=\"convertX(stepperXmin)\" :x2=\"convertX(stepperXmax)\" :y1=\"convertY(y)\" :y2=\"convertY(y)\" :stroke=\"coordinationCrossColor\" :stroke-opacity=\"0.25\" stroke-width=\"1\" />\n            </g>\n\n            <g v-for=\"(object, index) in printing_objects\" v-bind:key=\"index\">\n                <polygon\n                    :points=\"object.polygon.map(point => convertX(point[0])+','+convertY(point[1])).join(' ')\"\n                    style=\"cursor: pointer;\"\n                    :stroke=\"current_object === object.name ? primaryColor : '#666'\"\n                    stroke-width=\"2\"\n                    fill-rule=\"evenodd\"\n                    :fill=\"hoverName === object.name ? primaryColor : (excluded_objects.includes(object.name) ? '#6668' : '#bbb')\"\n                    @mouseover=\"showObjectTooltip(object.name)\"\n                    @mouseout=\"hideObjectTooltip\"\n                    @click=\"openExcludeObjectDialog(object.name)\"\n                />\n            </g>\n        </svg>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport {Mixins, Prop} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {defaultPrimaryColor} from '@/store/variables'\n\n@Component\nexport default class StatusPanelObjectsDialogMap extends Mixins(BaseMixin) {\n    private coordinationCrossColor = '#888'\n    private stripesOffset = 50\n\n    @Prop({ required: false, default: '' }) readonly hoverName!: string\n\n    $refs!: {\n        tooltipObjectMap: HTMLDivElement\n    }\n\n    get printing_objects() {\n        return this.$store.state.printer.exclude_object?.objects ?? []\n    }\n\n    get current_object() {\n        return this.$store.state.printer.exclude_object?.current_object ?? null\n    }\n\n    get excluded_objects() {\n        return this.$store.state.printer.exclude_object?.excluded_objects ?? []\n    }\n\n    get viewBox() {\n        return this.convertX(this.stepperXmin)+' '+this.convertY(this.stepperYmax)+' '+this.absoluteX+' '+this.absoluteY\n    }\n    \n    get stepperXmin() {\n        return this.$store.state.printer.configfile?.settings?.stepper_x?.position_min ?? 0\n    }\n    \n    get stepperXmax() {\n        return this.$store.state.printer.configfile?.settings?.stepper_x?.position_max ?? 0\n    }\n    \n    get stepperYmin() {\n        return this.$store.state.printer.configfile?.settings?.stepper_y?.position_min ?? 200\n    }\n    \n    get stepperYmax() {\n        return this.$store.state.printer.configfile?.settings?.stepper_y?.position_max ?? 200\n    }\n\n    get absoluteX() {\n        return Math.abs(this.stepperXmin) + Math.abs(this.stepperXmax)\n    }\n\n    get absoluteY() {\n        return Math.abs(this.stepperYmin) + Math.abs(this.stepperYmax)\n    }\n\n    get xStripes() {\n        const output = []\n        const minXstripe = Math.floor(this.stepperXmin / this.stripesOffset) * this.stripesOffset\n        const maxXstripe = Math.floor(this.stepperXmax / this.stripesOffset) * this.stripesOffset\n\n        for (let i = minXstripe; i <= maxXstripe; i = i + this.stripesOffset) {\n            output.push(i)\n        }\n\n        return output\n    }\n\n    get yStripes() {\n        const output = []\n        const minYstripe = Math.floor(this.stepperYmin / this.stripesOffset) * this.stripesOffset\n        const maxYstripe = Math.floor(this.stepperYmax / this.stripesOffset) * this.stripesOffset\n\n        for (let i = minYstripe; i <= maxYstripe; i = i + this.stripesOffset) {\n            output.push(i)\n        }\n\n        return output\n    }\n\n    get primaryColor() {\n        return this.$store.state.gui.theme?.primary ?? defaultPrimaryColor\n    }\n\n    convertX(x: number) {\n\n\n        return x\n    }\n\n    convertY(y: number) {\n\n        return y * -1\n    }\n\n    showObjectTooltip(text: string) {\n        if (this.$refs.tooltipObjectMap) {\n            this.$refs.tooltipObjectMap.innerHTML = text\n            this.$refs.tooltipObjectMap.style.display = 'block'\n        }\n\n        window.addEventListener('mousemove', this.moveTooltip)\n    }\n\n    hideObjectTooltip() {\n        if (this.$refs.tooltipObjectMap) {\n            this.$refs.tooltipObjectMap.style.display = 'none'\n        }\n\n        window.removeEventListener('mousemove', this.moveTooltip)\n    }\n\n    moveTooltip(event: any) {\n        if (this.$refs.tooltipObjectMap) {\n            this.$refs.tooltipObjectMap.style.left = (event.layerX - 20) + 'px'\n            this.$refs.tooltipObjectMap.style.top = (event.layerY - 45) + 'px'\n        }\n    }\n\n    openExcludeObjectDialog(name: string) {\n        this.$emit('update:name', name)\n        this.$emit('update:bool', true)\n    }\n}\n</script>"]}]}