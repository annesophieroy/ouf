{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/Timelapse/TimelapseStatusPanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/Timelapse/TimelapseStatusPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge0NvbXBvbmVudCwgTWl4aW5zfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJ0AvY29tcG9uZW50cy9taXhpbnMvYmFzZScKaW1wb3J0IFNldHRpbmdzUm93IGZyb20gJ0AvY29tcG9uZW50cy9zZXR0aW5ncy9TZXR0aW5nc1Jvdy52dWUnCmltcG9ydCBQYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvdWkvUGFuZWwudnVlJwpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHtQYW5lbCwgU2V0dGluZ3NSb3d9Cn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVsYXBzZVN0YXR1c1BhbmVsIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewogICAgcHJpdmF0ZSBib29sRGlhbG9nUmVuZGVyc2V0dGluZ3MgPSBmYWxzZQoKICAgIGdldCBmcmFtZVVybCgpIHsKICAgICAgICBjb25zdCBmcmFtZSA9IHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci50aW1lbGFwc2U/Lmxhc3RGcmFtZT8uZmlsZSA/PyBudWxsCgogICAgICAgIGlmIChmcmFtZSkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5hcGlVcmwgKyAnL3NlcnZlci9maWxlcy90aW1lbGFwc2VfZnJhbWVzLycgKyBmcmFtZQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG51bGwKICAgIH0KCiAgICBnZXQgZnJhbWVzQ291bnQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci50aW1lbGFwc2U/Lmxhc3RGcmFtZT8uY291bnQgPz8gMAogICAgfQoKICAgIGdldCBlbmFibGVkKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXJ2ZXIudGltZWxhcHNlPy5zZXR0aW5ncz8uZW5hYmxlZCA/PyBmYWxzZQogICAgfQoKICAgIHNldCBlbmFibGVkKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdtYWNoaW5lLnRpbWVsYXBzZS5wb3N0X3NldHRpbmdzJywgeyBlbmFibGVkOiBuZXdWYWwgfSwgeyBhY3Rpb246ICdzZXJ2ZXIvdGltZWxhcHNlL2luaXRTZXR0aW5ncycgfSkKICAgIH0KCiAgICBnZXQgYXV0b3JlbmRlcigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2VydmVyLnRpbWVsYXBzZT8uc2V0dGluZ3M/LmF1dG9yZW5kZXIgPz8gZmFsc2UKICAgIH0KCiAgICBzZXQgYXV0b3JlbmRlcihuZXdWYWwpIHsKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS50aW1lbGFwc2UucG9zdF9zZXR0aW5ncycsIHsgYXV0b3JlbmRlcjogbmV3VmFsIH0sIHsgYWN0aW9uOiAnc2VydmVyL3RpbWVsYXBzZS9pbml0U2V0dGluZ3MnIH0pCiAgICB9CgogICAgZ2V0IHZhcmlhYmxlX2ZwcygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2VydmVyLnRpbWVsYXBzZT8uc2V0dGluZ3M/LnZhcmlhYmxlX2ZwcyA/PyBmYWxzZQogICAgfQoKICAgIHNldCB2YXJpYWJsZV9mcHMobmV3VmFsKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NlcnZlci90aW1lbGFwc2Uvc2F2ZVNldHRpbmcnLCB7IHZhcmlhYmxlX2ZwczogbmV3VmFsIH0pCiAgICB9CgogICAgZ2V0IGZyYW1lcmF0ZVR5cGVPcHRpb25zKCkgewogICAgICAgIHJldHVybiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSwKICAgICAgICAgICAgICAgIHRleHQ6IHRoaXMuJHQoJ1RpbWVsYXBzZS5GaXhlZCcpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZhbHVlOiB0cnVlLAogICAgICAgICAgICAgICAgdGV4dDogdGhpcy4kdCgnVGltZWxhcHNlLlZhcmlhYmxlJykKICAgICAgICAgICAgfSwKICAgICAgICBdCiAgICB9CgogICAgZ2V0IHZhcmlhYmxlX2Zwc19taW4oKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci50aW1lbGFwc2U/LnNldHRpbmdzPy52YXJpYWJsZV9mcHNfbWluID8/IDUKICAgIH0KCiAgICBzZXQgdmFyaWFibGVfZnBzX21pbihuZXdWYWwpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2VydmVyL3RpbWVsYXBzZS9zYXZlU2V0dGluZycsIHsgdmFyaWFibGVfZnBzX21pbjogbmV3VmFsIH0pCiAgICB9CgogICAgZ2V0IHZhcmlhYmxlX2Zwc19tYXgoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci50aW1lbGFwc2U/LnNldHRpbmdzPy52YXJpYWJsZV9mcHNfbWF4ID8/IDYwCiAgICB9CgogICAgc2V0IHZhcmlhYmxlX2Zwc19tYXgobmV3VmFsKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NlcnZlci90aW1lbGFwc2Uvc2F2ZVNldHRpbmcnLCB7IHZhcmlhYmxlX2Zwc19tYXg6IG5ld1ZhbCB9KQogICAgfQoKICAgIGdldCB0YXJnZXRsZW5ndGgoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci50aW1lbGFwc2U/LnNldHRpbmdzPy50YXJnZXRsZW5ndGggPz8gMTAKICAgIH0KCiAgICBzZXQgdGFyZ2V0bGVuZ3RoKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXJ2ZXIvdGltZWxhcHNlL3NhdmVTZXR0aW5nJywgeyB0YXJnZXRsZW5ndGg6IG5ld1ZhbCB9KQogICAgfQoKICAgIGdldCBvdXRwdXRfZnJhbWVyYXRlKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXJ2ZXIudGltZWxhcHNlPy5zZXR0aW5ncz8ub3V0cHV0X2ZyYW1lcmF0ZSA/PyAzMAogICAgfQoKICAgIHNldCBvdXRwdXRfZnJhbWVyYXRlKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXJ2ZXIvdGltZWxhcHNlL3NhdmVTZXR0aW5nJywgeyBvdXRwdXRfZnJhbWVyYXRlOiBuZXdWYWwgfSkKICAgIH0KCiAgICBnZXQgZHVwbGljYXRlbGFzdGZyYW1lKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXJ2ZXIudGltZWxhcHNlPy5zZXR0aW5ncz8uZHVwbGljYXRlbGFzdGZyYW1lID8/IDAKICAgIH0KCiAgICBzZXQgZHVwbGljYXRlbGFzdGZyYW1lKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXJ2ZXIvdGltZWxhcHNlL3NhdmVTZXR0aW5nJywgeyBkdXBsaWNhdGVsYXN0ZnJhbWU6IG5ld1ZhbCB9KQogICAgfQoKICAgIGdldCBlc3RpbWF0ZWRWaWRlb0xlbmd0aCgpIHsKICAgICAgICBsZXQgc2Vjb25kcyA9IDAKCiAgICAgICAgaWYgKHRoaXMudmFyaWFibGVfZnBzKSB7CiAgICAgICAgICAgIHNlY29uZHMgPSBNYXRoLnJvdW5kKCh0aGlzLmZyYW1lc0NvdW50ICsgdGhpcy5kdXBsaWNhdGVsYXN0ZnJhbWUpIC8gdGhpcy52YXJpYWJsZVRhcmdldEZwcykKICAgICAgICAgICAgaWYgKHNlY29uZHMgPCB0aGlzLnRhcmdldGxlbmd0aCkgc2Vjb25kcyA9IHRoaXMudGFyZ2V0bGVuZ3RoCgogICAgICAgIH0gZWxzZSBzZWNvbmRzID0gTWF0aC5yb3VuZCgodGhpcy5mcmFtZXNDb3VudCArIHRoaXMuZHVwbGljYXRlbGFzdGZyYW1lKSAvIHRoaXMub3V0cHV0X2ZyYW1lcmF0ZSkKCiAgICAgICAgcmV0dXJuIHNlY29uZHMgPiA2MCA/IE1hdGguZmxvb3Ioc2Vjb25kcy82MCkrJ20gJysoc2Vjb25kcyAtICBNYXRoLmZsb29yKHNlY29uZHMvNjApICogNjApKydzJyA6IHNlY29uZHMrJ3MnCiAgICB9CgogICAgZ2V0IHZhcmlhYmxlVGFyZ2V0RnBzKCkgewogICAgICAgIGxldCB0YXJnZXRGcHMgPSBNYXRoLmZsb29yKHRoaXMuZnJhbWVzQ291bnQgLyB0aGlzLnRhcmdldGxlbmd0aCkKICAgICAgICB0YXJnZXRGcHMgPSBNYXRoLm1heCh0YXJnZXRGcHMsIHRoaXMudmFyaWFibGVfZnBzX21pbikKICAgICAgICB0YXJnZXRGcHMgPSBNYXRoLm1pbih0YXJnZXRGcHMsIHRoaXMudmFyaWFibGVfZnBzX21heCkKCiAgICAgICAgcmV0dXJuIHRhcmdldEZwcwogICAgfQoKICAgIGdldCBkaXNhYmxlUmVuZGVyQnV0dG9uKCkgewogICAgICAgIHJldHVybiAoKHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci50aW1lbGFwc2U/LnJlbmRlcmluZy5zdGF0dXMgPz8gJycpID09PSAncnVubmluZycpCiAgICB9CgogICAgZ2V0IGNhbUlkKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXJ2ZXIudGltZWxhcHNlLnNldHRpbmdzLmNhbWVyYSA/PyAnJwogICAgfQoKICAgIGdldCBjYW1TZXR0aW5ncygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snZ3VpL3dlYmNhbXMvZ2V0V2ViY2FtJ10odGhpcy5jYW1JZCkKICAgIH0KCiAgICBnZXQgd2ViY2FtU3R5bGUoKSB7CiAgICAgICAgaWYgKHRoaXMuY2FtU2V0dGluZ3MgPT09IHVuZGVmaW5lZCkgcmV0dXJuICcnCgogICAgICAgIGxldCB0cmFuc2Zvcm1zID0gJycKICAgICAgICBpZiAoJ2ZsaXBYJyBpbiB0aGlzLmNhbVNldHRpbmdzICYmIHRoaXMuY2FtU2V0dGluZ3MuZmxpcFgpIHRyYW5zZm9ybXMgKz0gJyBzY2FsZVgoLTEpJwogICAgICAgIGlmICgnZmxpcFgnIGluIHRoaXMuY2FtU2V0dGluZ3MgJiYgdGhpcy5jYW1TZXR0aW5ncy5mbGlwWSkgdHJhbnNmb3JtcyArPSAnIHNjYWxlWSgtMSknCiAgICAgICAgaWYgKHRyYW5zZm9ybXMudHJpbUxlZnQoKS5sZW5ndGgpIHJldHVybiB7IHRyYW5zZm9ybTogdHJhbnNmb3Jtcy50cmltTGVmdCgpIH0KCiAgICAgICAgcmV0dXJuICcnCiAgICB9CgogICAgc3RhcnRSZW5kZXIoKSB7CiAgICAgICAgdGhpcy5ib29sRGlhbG9nUmVuZGVyc2V0dGluZ3MgPSBmYWxzZQoKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS50aW1lbGFwc2UucmVuZGVyJywge30pCiAgICB9CgogICAgc2F2ZUZyYW1lcygpIHsKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS50aW1lbGFwc2Uuc2F2ZWZyYW1lcycsIHt9LCB7IGxvYWRpbmc6ICd0aW1lbGFwc2Vfc2F2ZWZyYW1lcycgfSkKICAgIH0KfQo="},{"version":3,"sources":["TimelapseStatusPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"TimelapseStatusPanel.vue","sourceRoot":"src/components/panels/Timelapse","sourcesContent":["<style scoped>\n\n</style>\n\n<template>\n    <div>\n        <v-card class=\"mb-3\">\n            <v-toolbar flat dense>\n                <v-toolbar-title>\n                    <span class=\"subheading align-baseline\"><v-icon left>mdi-information</v-icon>{{ $t(\"Timelapse.Status\")}}</span>\n                </v-toolbar-title>\n            </v-toolbar>\n            <v-row no-gutters>\n                <v-col class=\"col-12 col-sm-6 col-md-12 pb-3 pb-md-0 text--secondary\">\n                    <v-card-text v-if=\"frameUrl\" class=\"pb-0\">\n                        <v-row>\n                            <v-col>\n                                <vue-load-image>\n                                    <img slot=\"image\" :src=\"frameUrl\" :alt=\"$t('Timelapse.Preview')\" class=\"w-100\" :style=\"webcamStyle\" />\n                                    <v-progress-circular slot=\"preloader\" indeterminate color=\"primary\"></v-progress-circular>\n                                    <v-icon slot=\"error\">mdi-file</v-icon>\n                                </vue-load-image>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                </v-col>\n                <v-col class=\"col-12 col-sm-6 col-md-12 pt-3 pt-md-0 text--secondary\" align-self=\"center\" v-if=\"framesCount > 0\">\n                    <v-card-text :class=\"framesCount ? 'pt-0' : ''\">\n                        <template v-if=\"framesCount > 0\">\n                            <settings-row :title=\"$t('Timelapse.Frames')\">\n                                {{ framesCount }}\n                            </settings-row>\n                            <v-divider class=\"my-2\"></v-divider>\n                            <settings-row :title=\"$t('Timelapse.EstimatedLength')\" :dynamicSlotWidth=\"true\">\n                                {{ estimatedVideoLength }}\n                            </settings-row>\n                        </template>\n                        <template v-if=\"['printing', 'paused'].includes(printer_state)\">\n                            <v-divider class=\"my-2\"></v-divider>\n                            <settings-row :title=\"$t('Timelapse.Enabled')\" :dynamicSlotWidth=\"true\">\n                                <v-switch v-model=\"enabled\" hide-details class=\"mt-0\"></v-switch>\n                            </settings-row>\n                            <template v-if=\"enabled\">\n                                <v-divider class=\"my-2\" v-if=\"framesCount > 0\"></v-divider>\n                                <settings-row :title=\"$t('Timelapse.Autorender')\" :dynamicSlotWidth=\"true\">\n                                    <v-switch v-model=\"autorender\" hide-details class=\"mt-0\"></v-switch>\n                                </settings-row>\n                            </template>\n                        </template>\n                        <template v-if=\"framesCount > 0 && !['printing', 'paused'].includes(printer_state)\">\n                            <v-divider class=\"mt-2 mb-4\"></v-divider>\n                            <v-row>\n                                <v-col class=\"text-center\">\n                                    <v-btn text color=\"primary\" :disabled=\"disableRenderButton\" @click=\"boolDialogRendersettings = true\">{{ $t('Timelapse.Render') }}</v-btn>\n                                    <v-btn text color=\"primary\" @click=\"saveFrames\" :loading=\"loadings.includes('timelapse_saveframes')\">{{ $t('Timelapse.SaveFrames') }}</v-btn>\n                                </v-col>\n                            </v-row>\n                        </template>\n                    </v-card-text>\n                </v-col>\n                <v-col class=\"col-12 text--secondary\" align-self=\"center\" v-else>\n                    <v-card-text class=\"pt-0 pt-md-3\">\n                        <p class=\"text-center my-0 font-italic\">{{ $t('Timelapse.NoActiveTimelapse') }}</p>\n                    </v-card-text>\n                </v-col>\n            </v-row>\n        </v-card>\n        <v-dialog v-model=\"boolDialogRendersettings\" :max-width=\"700\" :max-height=\"500\" >\n            <panel :title=\"$t('Timelapse.RenderSettings')\" icon=\"mdi-text-box-search-outline\" card-class=\"timelapse-rendersettings-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon @click=\"boolDialogRendersettings = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text class=\"\">\n                    <v-row>\n                        <v-col class=\"col-4\">\n                            <v-select\n                                :label=\"$t('Timelapse.Type')\"\n                                :items=\"framerateTypeOptions\"\n                                v-model=\"variable_fps\"\n                                outlined\n                                dense\n                                hide-details\n                                attach\n                            ></v-select>\n                        </v-col>\n                        <v-col class=\"col-4\">\n                            <template v-if=\"variable_fps\">\n                                <v-text-field\n                                    :label=\"$t('Timelapse.MinFramerate')\"\n                                    v-model=\"variable_fps_min\"\n                                    type=\"number\"\n                                    outlined\n                                    dense\n                                    hide-details\n                                    hide-spin-buttons\n                                ></v-text-field>\n                                <v-text-field\n                                    :label=\"$t('Timelapse.MaxFramerate')\"\n                                    v-model=\"variable_fps_max\"\n                                    type=\"number\"\n                                    outlined\n                                    dense\n                                    hide-details\n                                    hide-spin-buttons\n                                    class=\"mt-3\"\n                                ></v-text-field>\n                                <v-text-field\n                                    :label=\"$t('Timelapse.Targetlength')\"\n                                    v-model=\"targetlength\"\n                                    type=\"number\"\n                                    outlined\n                                    dense\n                                    hide-details\n                                    hide-spin-buttons\n                                    class=\"mt-3\"\n                                ></v-text-field>\n                            </template>\n                            <template v-else>\n                                <v-text-field\n                                    :label=\"$t('Timelapse.Framerate')\"\n                                    v-model=\"output_framerate\"\n                                    type=\"number\"\n                                    outlined\n                                    dense\n                                    hide-details\n                                    hide-spin-buttons\n                                ></v-text-field>\n                            </template>\n                            <v-text-field\n                                :label=\"$t('Timelapse.DuplicateLastframe')\"\n                                v-model=\"duplicatelastframe\"\n                                type=\"number\"\n                                outlined\n                                dense\n                                hide-details\n                                hide-spin-buttons\n                                class=\"mt-3\"\n                            ></v-text-field>\n                        </v-col>\n                        <v-col class=\"col-4\">\n                            <template v-if=\"variable_fps\">\n                                <v-text-field\n                                    :label=\"$t('Timelapse.TargetFps')\"\n                                    v-model=\"variableTargetFps\"\n                                    type=\"number\"\n                                    outlined\n                                    dense\n                                    hide-details\n                                    readonly\n                                    class=\"mb-3\"\n                                ></v-text-field>\n                            </template>\n                            <v-text-field\n                                :label=\"$t('Timelapse.EstimatedLength')\"\n                                v-model=\"estimatedVideoLength\"\n                                outlined\n                                dense\n                                hide-details\n                                readonly\n                            ></v-text-field>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn text @click=\"boolDialogRendersettings = false\">{{ $t('Timelapse.Cancel') }}</v-btn>\n                    <v-btn text color=\"primary\" @click=\"startRender\">{{ $t('Timelapse.StartRender') }}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n    </div>\n</template>\n<script lang=\"ts\">\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport Panel from '@/components/ui/Panel.vue'\n@Component({\n    components: {Panel, SettingsRow}\n})\nexport default class TimelapseStatusPanel extends Mixins(BaseMixin) {\n    private boolDialogRendersettings = false\n\n    get frameUrl() {\n        const frame = this.$store.state.server.timelapse?.lastFrame?.file ?? null\n\n        if (frame) {\n            return this.apiUrl + '/server/files/timelapse_frames/' + frame\n        }\n\n        return null\n    }\n\n    get framesCount() {\n        return this.$store.state.server.timelapse?.lastFrame?.count ?? 0\n    }\n\n    get enabled() {\n        return this.$store.state.server.timelapse?.settings?.enabled ?? false\n    }\n\n    set enabled(newVal) {\n        this.$socket.emit('machine.timelapse.post_settings', { enabled: newVal }, { action: 'server/timelapse/initSettings' })\n    }\n\n    get autorender() {\n        return this.$store.state.server.timelapse?.settings?.autorender ?? false\n    }\n\n    set autorender(newVal) {\n        this.$socket.emit('machine.timelapse.post_settings', { autorender: newVal }, { action: 'server/timelapse/initSettings' })\n    }\n\n    get variable_fps() {\n        return this.$store.state.server.timelapse?.settings?.variable_fps ?? false\n    }\n\n    set variable_fps(newVal) {\n        this.$store.dispatch('server/timelapse/saveSetting', { variable_fps: newVal })\n    }\n\n    get framerateTypeOptions() {\n        return [\n            {\n                value: false,\n                text: this.$t('Timelapse.Fixed')\n            },\n            {\n                value: true,\n                text: this.$t('Timelapse.Variable')\n            },\n        ]\n    }\n\n    get variable_fps_min() {\n        return this.$store.state.server.timelapse?.settings?.variable_fps_min ?? 5\n    }\n\n    set variable_fps_min(newVal) {\n        this.$store.dispatch('server/timelapse/saveSetting', { variable_fps_min: newVal })\n    }\n\n    get variable_fps_max() {\n        return this.$store.state.server.timelapse?.settings?.variable_fps_max ?? 60\n    }\n\n    set variable_fps_max(newVal) {\n        this.$store.dispatch('server/timelapse/saveSetting', { variable_fps_max: newVal })\n    }\n\n    get targetlength() {\n        return this.$store.state.server.timelapse?.settings?.targetlength ?? 10\n    }\n\n    set targetlength(newVal) {\n        this.$store.dispatch('server/timelapse/saveSetting', { targetlength: newVal })\n    }\n\n    get output_framerate() {\n        return this.$store.state.server.timelapse?.settings?.output_framerate ?? 30\n    }\n\n    set output_framerate(newVal) {\n        this.$store.dispatch('server/timelapse/saveSetting', { output_framerate: newVal })\n    }\n\n    get duplicatelastframe() {\n        return this.$store.state.server.timelapse?.settings?.duplicatelastframe ?? 0\n    }\n\n    set duplicatelastframe(newVal) {\n        this.$store.dispatch('server/timelapse/saveSetting', { duplicatelastframe: newVal })\n    }\n\n    get estimatedVideoLength() {\n        let seconds = 0\n\n        if (this.variable_fps) {\n            seconds = Math.round((this.framesCount + this.duplicatelastframe) / this.variableTargetFps)\n            if (seconds < this.targetlength) seconds = this.targetlength\n\n        } else seconds = Math.round((this.framesCount + this.duplicatelastframe) / this.output_framerate)\n\n        return seconds > 60 ? Math.floor(seconds/60)+'m '+(seconds -  Math.floor(seconds/60) * 60)+'s' : seconds+'s'\n    }\n\n    get variableTargetFps() {\n        let targetFps = Math.floor(this.framesCount / this.targetlength)\n        targetFps = Math.max(targetFps, this.variable_fps_min)\n        targetFps = Math.min(targetFps, this.variable_fps_max)\n\n        return targetFps\n    }\n\n    get disableRenderButton() {\n        return ((this.$store.state.server.timelapse?.rendering.status ?? '') === 'running')\n    }\n\n    get camId() {\n        return this.$store.state.server.timelapse.settings.camera ?? ''\n    }\n\n    get camSettings() {\n        return this.$store.getters['gui/webcams/getWebcam'](this.camId)\n    }\n\n    get webcamStyle() {\n        if (this.camSettings === undefined) return ''\n\n        let transforms = ''\n        if ('flipX' in this.camSettings && this.camSettings.flipX) transforms += ' scaleX(-1)'\n        if ('flipX' in this.camSettings && this.camSettings.flipY) transforms += ' scaleY(-1)'\n        if (transforms.trimLeft().length) return { transform: transforms.trimLeft() }\n\n        return ''\n    }\n\n    startRender() {\n        this.boolDialogRendersettings = false\n\n        this.$socket.emit('machine.timelapse.render', {})\n    }\n\n    saveFrames() {\n        this.$socket.emit('machine.timelapse.saveframes', {}, { loading: 'timelapse_saveframes' })\n    }\n}\n</script>\n"]}]}