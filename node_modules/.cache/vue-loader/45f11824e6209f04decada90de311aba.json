{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopbar.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopbar.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge01peGluc30gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IEJhc2VNaXhpbiBmcm9tICdAL2NvbXBvbmVudHMvbWl4aW5zL2Jhc2UnCmltcG9ydCB7dmFsaWRHY29kZUV4dGVuc2lvbnN9IGZyb20gJ0Avc3RvcmUvdmFyaWFibGVzJwppbXBvcnQgQ29tcG9uZW50IGZyb20gJ3Z1ZS1jbGFzcy1jb21wb25lbnQnCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgZm9ybWF0RmlsZXNpemUgfSBmcm9tICdAL3BsdWdpbnMvaGVscGVycycKaW1wb3J0IFRoZVRvcENvcm5lck1lbnUgZnJvbSAnQC9jb21wb25lbnRzL1RoZVRvcENvcm5lck1lbnUudnVlJwppbXBvcnQgVGhlU2V0dGluZ3NNZW51IGZyb20gJ0AvY29tcG9uZW50cy9UaGVTZXR0aW5nc01lbnUudnVlJwppbXBvcnQgVGhlVGhyb3R0bGVkU3RhdGVzIGZyb20gJ0AvY29tcG9uZW50cy9UaGVUaHJvdHRsZWRTdGF0ZXMudnVlJwppbXBvcnQgUGFuZWwgZnJvbSAnQC9jb21wb25lbnRzL3VpL1BhbmVsLnZ1ZScKaW1wb3J0IFByaW50ZXJTZWxlY3RvciBmcm9tICdAL2NvbXBvbmVudHMvdWkvUHJpbnRlclNlbGVjdG9yLnZ1ZScKaW1wb3J0IE1haW5zYWlsTG9nbyBmcm9tICdAL2NvbXBvbmVudHMvdWkvTWFpbnNhaWxMb2dvLnZ1ZScKaW1wb3J0IHt0b3BiYXJIZWlnaHR9IGZyb20gJ0Avc3RvcmUvdmFyaWFibGVzJwoKdHlwZSB1cGxvYWRTbmFja2JhciA9IHsKICAgIHN0YXR1czogYm9vbGVhbgogICAgZmlsZW5hbWU6IHN0cmluZwogICAgcGVyY2VudDogbnVtYmVyCiAgICBzcGVlZDogbnVtYmVyCiAgICB0b3RhbDogbnVtYmVyCiAgICBjYW5jZWxUb2tlblNvdXJjZTogYW55CiAgICBsYXN0UHJvZ3Jlc3M6IHsKICAgICAgICB0aW1lOiBudW1iZXIKICAgICAgICBsb2FkZWQ6IG51bWJlcgogICAgfQp9CgpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBQYW5lbCwKICAgICAgICBUaGVUaHJvdHRsZWRTdGF0ZXMsCiAgICAgICAgVGhlU2V0dGluZ3NNZW51LAogICAgICAgIFRoZVRvcENvcm5lck1lbnUsCiAgICAgICAgUHJpbnRlclNlbGVjdG9yLAogICAgICAgIE1haW5zYWlsTG9nbwogICAgfQp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBUaGVUb3BiYXIgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CiAgICB0b3BiYXJIZWlnaHQgPSB0b3BiYXJIZWlnaHQKCiAgICBzaG93RW1lcmdlbmN5U3RvcERpYWxvZyA9IGZhbHNlCgogICAgdXBsb2FkU25hY2tiYXI6IHVwbG9hZFNuYWNrYmFyID0gewogICAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgICAgZmlsZW5hbWU6ICcnLAogICAgICAgIHBlcmNlbnQ6IDAsCiAgICAgICAgc3BlZWQ6IDAsCiAgICAgICAgdG90YWw6IDAsCiAgICAgICAgY2FuY2VsVG9rZW5Tb3VyY2U6IG51bGwsCiAgICAgICAgbGFzdFByb2dyZXNzOiB7CiAgICAgICAgICAgIHRpbWU6IDAsCiAgICAgICAgICAgIGxvYWRlZDogMAogICAgICAgIH0KICAgIH0KCiAgICBmb3JtYXRGaWxlc2l6ZSA9IGZvcm1hdEZpbGVzaXplCgogICAgJHJlZnMhOiB7CiAgICAgICAgZmlsZVVwbG9hZEFuZFN0YXJ0OiBIVE1MRm9ybUVsZW1lbnQKICAgIH0KCiAgICBnZXQgbmF2aURyYXdlcigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubmF2aURyYXdlcgogICAgfQoKICAgIHNldCBuYXZpRHJhd2VyKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXROYXZpRHJhd2VyJywgbmV3VmFsKQogICAgfQoKICAgIGdldCB2YWxpZEdjb2RlRXh0ZW5zaW9ucygpIHsKICAgICAgICByZXR1cm4gdmFsaWRHY29kZUV4dGVuc2lvbnMKICAgIH0KCiAgICBnZXQgY3VycmVudFBhZ2UoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLmZ1bGxQYXRoCiAgICB9CgogICAgZ2V0IHNhdmVDb25maWdQZW5kaW5nKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5wcmludGVyLmNvbmZpZ2ZpbGU/LnNhdmVfY29uZmlnX3BlbmRpbmcgPz8gZmFsc2UKICAgIH0KCiAgICBnZXQgcHJpbnRlck5hbWUoKTpzdHJpbmcgewogICAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZ2VuZXJhbC5wcmludGVybmFtZS5sZW5ndGgpCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuZ2VuZXJhbC5wcmludGVybmFtZQoKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucHJpbnRlci5ob3N0bmFtZQogICAgfQoKICAgIGdldCBib29sV2lkZU5hdkRyYXdlcigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLnVpU2V0dGluZ3MuYm9vbFdpZGVOYXZEcmF3ZXIgPz8gZmFsc2UKICAgIH0KCiAgICBnZXQgY291bnRQcmludGVycygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snZmFybS9jb3VudFByaW50ZXJzJ10KICAgIH0KCiAgICBnZXQgYm9vbEhpZGVVcGxvYWRBbmRQcmludEJ1dHRvbigpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLnVpU2V0dGluZ3MuYm9vbEhpZGVVcGxvYWRBbmRQcmludEJ1dHRvbiA/PyBmYWxzZQogICAgfQoKICAgIGdldCBzaWRlYmFyTG9nbygpOiBzdHJpbmcgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydmaWxlcy9nZXRTaWRlYmFyTG9nbyddCiAgICB9CgogICAgZ2V0IGxvZ29Db2xvcigpOiBzdHJpbmcgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5ndWkudWlTZXR0aW5ncy5sb2dvCiAgICB9CgogICAgYnRuRW1lcmdlbmN5U3RvcCgpIHsKICAgICAgICBjb25zdCBjb25maXJtT25FbWVyZ2VuY3lTdG9wID0gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLnVpU2V0dGluZ3MuY29uZmlybU9uRW1lcmdlbmN5U3RvcAogICAgICAgIGlmIChjb25maXJtT25FbWVyZ2VuY3lTdG9wKSB7CiAgICAgICAgICAgIHRoaXMuc2hvd0VtZXJnZW5jeVN0b3BEaWFsb2cgPSB0cnVlCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB0aGlzLmVtZXJnZW5jeVN0b3AoKQogICAgICAgIH0KICAgIH0KCiAgICBlbWVyZ2VuY3lTdG9wKCkgewogICAgICAgIHRoaXMuc2hvd0VtZXJnZW5jeVN0b3BEaWFsb2cgPSBmYWxzZQogICAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdwcmludGVyLmVtZXJnZW5jeV9zdG9wJywge30sIHsgbG9hZGluZzogJ3RvcGJhckVtZXJnZW5jeVN0b3AnIH0pCiAgICB9CgogICAgc2F2ZUNvbmZpZygpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2VydmVyL2FkZEV2ZW50JywgeyBtZXNzYWdlOiAnU0FWRV9DT05GSUcnLCB0eXBlOiAnY29tbWFuZCcgfSkKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgncHJpbnRlci5nY29kZS5zY3JpcHQnLCB7IHNjcmlwdDogJ1NBVkVfQ09ORklHJyB9LCB7IGxvYWRpbmc6ICd0b3BiYXJTYXZlQ29uZmlnJyB9KQogICAgfQoKICAgIGJ0blVwbG9hZEFuZFN0YXJ0KCkgewogICAgICAgIHRoaXMuJHJlZnMuZmlsZVVwbG9hZEFuZFN0YXJ0LmNsaWNrKCkKICAgIH0KCiAgICBhc3luYyB1cGxvYWRBbmRTdGFydCgpIHsKICAgICAgICBpZiAodGhpcy4kcmVmcy5maWxlVXBsb2FkQW5kU3RhcnQ/LmZpbGVzLmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc29ja2V0L2FkZExvYWRpbmcnLCB7IG5hbWU6ICdidG5VcGxvYWRBbmRTdGFydCcgfSkKICAgICAgICAgICAgbGV0IHN1Y2Nlc3NGaWxlcyA9IFtdCiAgICAgICAgICAgIGZvciAoY29uc3QgZmlsZSBvZiB0aGlzLiRyZWZzLmZpbGVVcGxvYWRBbmRTdGFydD8uZmlsZXMpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZG9VcGxvYWRBbmRTdGFydChmaWxlKQogICAgICAgICAgICAgICAgc3VjY2Vzc0ZpbGVzLnB1c2gocmVzdWx0KQogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc29ja2V0L3JlbW92ZUxvYWRpbmcnLCB7IG5hbWU6ICdidG5VcGxvYWRBbmRTdGFydCcgfSkKICAgICAgICAgICAgZm9yKGNvbnN0IGZpbGUgb2Ygc3VjY2Vzc0ZpbGVzKSB7CiAgICAgICAgICAgICAgICBjb25zdCB0ZXh0ID0gdGhpcy4kdCgnQXBwLlRvcEJhci5VcGxvYWRPZkZpbGVTdWNjZXNzZnVsJywge2ZpbGU6ZmlsZX0pLnRvU3RyaW5nKCkKICAgICAgICAgICAgICAgIHRoaXMuJHRvYXN0LnN1Y2Nlc3ModGV4dCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy4kcmVmcy5maWxlVXBsb2FkQW5kU3RhcnQudmFsdWUgPSAnJwogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50UGFnZSAhPT0gJy8nKSBhd2FpdCB0aGlzLiRyb3V0ZXIucHVzaCgnLycpCiAgICAgICAgfQogICAgfQoKICAgIGRvVXBsb2FkQW5kU3RhcnQoZmlsZTogRmlsZSkgewogICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkKICAgICAgICBjb25zdCBmaWxlbmFtZSA9IGZpbGUubmFtZQoKICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLmZpbGVuYW1lID0gZmlsZW5hbWUKICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLnN0YXR1cyA9IHRydWUKICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLnBlcmNlbnQgPSAwCiAgICAgICAgdGhpcy51cGxvYWRTbmFja2Jhci5zcGVlZCA9IDAKICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLmxhc3RQcm9ncmVzcy5sb2FkZWQgPSAwCiAgICAgICAgdGhpcy51cGxvYWRTbmFja2Jhci5sYXN0UHJvZ3Jlc3MudGltZSA9IDAKCiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSwgZmlsZW5hbWUpCiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdwcmludCcsICd0cnVlJykKCiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLmNhbmNlbFRva2VuU291cmNlID0gYXhpb3MuQ2FuY2VsVG9rZW4uc291cmNlKCkKICAgICAgICAgICAgYXhpb3MucG9zdCh0aGlzLmFwaVVybCArICcvc2VydmVyL2ZpbGVzL3VwbG9hZCcsCiAgICAgICAgICAgICAgICBmb3JtRGF0YSwgewogICAgICAgICAgICAgICAgICAgIGNhbmNlbFRva2VuOiB0aGlzLnVwbG9hZFNuYWNrYmFyLmNhbmNlbFRva2VuU291cmNlLnRva2VuLAogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJyB9LAogICAgICAgICAgICAgICAgICAgIG9uVXBsb2FkUHJvZ3Jlc3M6IChwcm9ncmVzc0V2ZW50OiBQcm9ncmVzc0V2ZW50KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkU25hY2tiYXIucGVyY2VudCA9IChwcm9ncmVzc0V2ZW50LmxvYWRlZCAqIDEwMCkgLyBwcm9ncmVzc0V2ZW50LnRvdGFsCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnVwbG9hZFNuYWNrYmFyLmxhc3RQcm9ncmVzcy50aW1lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lID0gcHJvZ3Jlc3NFdmVudC50aW1lU3RhbXAgLSB0aGlzLnVwbG9hZFNuYWNrYmFyLmxhc3RQcm9ncmVzcy50aW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcHJvZ3Jlc3NFdmVudC5sb2FkZWQgLSB0aGlzLnVwbG9hZFNuYWNrYmFyLmxhc3RQcm9ncmVzcy5sb2FkZWQKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGltZSkgdGhpcy51cGxvYWRTbmFja2Jhci5zcGVlZCA9IGRhdGEgLyAodGltZSAvIDEwMDApCiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkU25hY2tiYXIubGFzdFByb2dyZXNzLnRpbWUgPSBwcm9ncmVzc0V2ZW50LnRpbWVTdGFtcAogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLmxhc3RQcm9ncmVzcy5sb2FkZWQgPSBwcm9ncmVzc0V2ZW50LmxvYWRlZAogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLnRvdGFsID0gcHJvZ3Jlc3NFdmVudC50b3RhbAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKS50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkU25hY2tiYXIuc3RhdHVzID0gZmFsc2UKICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0LmRhdGEucmVzdWx0KQogICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLnN0YXR1cyA9IGZhbHNlCiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc29ja2V0L3JlbW92ZUxvYWRpbmcnLCB7IG5hbWU6ICdidG5VcGxvYWRBbmRTdGFydCcgfSkKICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSB0aGlzLiR0KCdBcHAuVG9wQmFyLkNhbm5vdFVwbG9hZFRoZUZpbGUnKS50b1N0cmluZygpCiAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdC5lcnJvcih0ZXh0KQogICAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9CgogICAgY2FuY2VsVXBsb2FkKCk6IHZvaWQgewogICAgICAgIHRoaXMudXBsb2FkU25hY2tiYXIuY2FuY2VsVG9rZW5Tb3VyY2UuY2FuY2VsKCkKICAgICAgICB0aGlzLnVwbG9hZFNuYWNrYmFyLnN0YXR1cyA9IGZhbHNlCiAgICB9Cn0K"},{"version":3,"sources":["TheTopbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"TheTopbar.vue","sourceRoot":"src/components","sourcesContent":["<style>\n    .topbar .v-toolbar__content {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n    }\n</style>\n<style scoped>\n    .button-min-width-auto {\n        min-width: auto !important;\n    }\n    .topbar .v-btn {\n        height: 100% !important;\n        max-height: none;\n    }\n    .topbar .v-btn.v-btn--icon {\n        width: var(--topbar-icon-btn-width) !important;\n    }\n    @media (min-width: 768px) {\n        header.topbar {\n            z-index: 8 !important;\n        }\n    }\n</style>\n\n<template>\n    <div>\n        <v-app-bar app elevate-on-scroll :height=\"topbarHeight\" class=\"topbar pa-0\" clipped-left>\n            <v-app-bar-nav-icon tile @click.stop=\"naviDrawer = !naviDrawer\"></v-app-bar-nav-icon>\n            <router-link to=\"/\">\n                <template v-if=\"sidebarLogo\">\n                    <img :src=\"sidebarLogo\" style=\"height: 32px;\" class=\"nav-logo ml-4 mr-1 d-none d-sm-flex\" alt=\"Logo\" />\n                </template>\n                <template v-else>\n                    <mainsail-logo :color=\"logoColor\" style=\"height: 32px;\" class=\"nav-logo ml-4 mr-1 d-none d-sm-flex\" router to=\"/\" :ripple=\"false\"></mainsail-logo>\n                </template>\n            </router-link>\n            <v-toolbar-title class=\"text-no-wrap ml-0 pl-2 mr-2\">{{ printerName }}</v-toolbar-title>\n            <printer-selector v-if=\"countPrinters\"></printer-selector>\n            <v-spacer></v-spacer>\n            <the-throttled-states></the-throttled-states>\n            <input type=\"file\" ref=\"fileUploadAndStart\" :accept=\"validGcodeExtensions.join(', ')\" style=\"display: none\" @change=\"uploadAndStart\" />\n            <v-btn tile\n                :icon=\"$vuetify.breakpoint.smAndDown\"\n                :text=\"$vuetify.breakpoint.mdAndUp\"\n                color=\"primary\"\n                class=\"button-min-width-auto px-3 d-none d-sm-flex save-config-button\"\n                v-if=\"klippyIsConnected && saveConfigPending\"\n                :disabled=\"printerIsPrinting\"\n                :loading=\"loadings.includes('topbarSaveConfig')\"\n                @click=\"saveConfig\">\n                <v-icon class=\"d-md-none\">mdi-content-save</v-icon><span class=\"d-none d-md-inline\">{{ $t(\"App.TopBar.SAVE_CONFIG\") }}</span>\n            </v-btn>\n            <v-btn tile\n                :icon=\"$vuetify.breakpoint.smAndDown\"\n                :text=\"$vuetify.breakpoint.mdAndUp\"\n                color=\"primary\"\n                class=\"button-min-width-auto px-3 d-none d-sm-flex upload-and-start-button\"\n                v-if=\"klippyIsConnected && ['standby', 'complete', 'cancelled'].includes(printer_state) && !boolHideUploadAndPrintButton\"\n                :loading=\"loadings.includes('btnUploadAndStart')\"\n                @click=\"btnUploadAndStart\">\n                <v-icon class=\"mr-md-2\">mdi-file-upload</v-icon><span class=\"d-none d-md-inline\">{{ $t(\"App.TopBar.UploadPrint\") }}</span>\n            </v-btn>\n            <v-btn tile\n                :icon=\"$vuetify.breakpoint.smAndDown\"\n                :text=\"$vuetify.breakpoint.mdAndUp\"\n                color=\"error\"\n                class=\"button-min-width-auto px-3 emergency-button\"\n                v-if=\"klippyIsConnected\"\n                :loading=\"loadings.includes('topbarEmergencyStop')\"\n                @click=\"btnEmergencyStop\">\n                <v-icon class=\"mr-md-2\">mdi-alert-circle-outline</v-icon><span class=\"d-none d-md-inline\">{{ $t(\"App.TopBar.EmergencyStop\") }}</span>\n            </v-btn>\n            <the-settings-menu></the-settings-menu>\n            <the-top-corner-menu></the-top-corner-menu>\n        </v-app-bar>\n        <v-snackbar\n            :timeout=\"-1\"\n            :value=\"true\"\n            fixed\n            right\n            bottom\n            dark\n            v-model=\"uploadSnackbar.status\"\n        >\n            <strong>{{ $t(\"App.TopBar.Uploading\") }} {{ uploadSnackbar.filename }}</strong><br />\n            {{ Math.round(uploadSnackbar.percent) }} % @ {{ formatFilesize(Math.round(uploadSnackbar.speed)) }}/s<br />\n            <v-progress-linear class=\"mt-2\" :value=\"uploadSnackbar.percent\"></v-progress-linear>\n            <template v-slot:action=\"{ attrs }\">\n                <v-btn\n                    color=\"red\"\n                    text\n                    v-bind=\"attrs\"\n                    @click=\"cancelUpload\"\n                    style=\"min-width: auto;\"\n                >\n                    <v-icon class=\"0\">mdi-close</v-icon>\n                </v-btn>\n            </template>\n        </v-snackbar>\n        <v-dialog v-model=\"showEmergencyStopDialog\" width=\"400\" :fullscreen=\"isMobile\">\n            <panel :title=\"$t('EmergencyStopDialog.EmergencyStop')\" toolbar-color=\"error\" card-class=\"emergency-stop-dialog\" icon=\"mdi-alert-circle-outline\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"showEmergencyStopDialog = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>{{ $t('EmergencyStopDialog.AreYouSure') }}</v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn text @click=\"showEmergencyStopDialog = false\">{{ $t('EmergencyStopDialog.No')}}</v-btn>\n                    <v-btn color=\"primary\" text @click=\"emergencyStop\">{{$t('EmergencyStopDialog.Yes')}}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport {Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {validGcodeExtensions} from '@/store/variables'\nimport Component from 'vue-class-component'\nimport axios from 'axios'\nimport { formatFilesize } from '@/plugins/helpers'\nimport TheTopCornerMenu from '@/components/TheTopCornerMenu.vue'\nimport TheSettingsMenu from '@/components/TheSettingsMenu.vue'\nimport TheThrottledStates from '@/components/TheThrottledStates.vue'\nimport Panel from '@/components/ui/Panel.vue'\nimport PrinterSelector from '@/components/ui/PrinterSelector.vue'\nimport MainsailLogo from '@/components/ui/MainsailLogo.vue'\nimport {topbarHeight} from '@/store/variables'\n\ntype uploadSnackbar = {\n    status: boolean\n    filename: string\n    percent: number\n    speed: number\n    total: number\n    cancelTokenSource: any\n    lastProgress: {\n        time: number\n        loaded: number\n    }\n}\n\n@Component({\n    components: {\n        Panel,\n        TheThrottledStates,\n        TheSettingsMenu,\n        TheTopCornerMenu,\n        PrinterSelector,\n        MainsailLogo\n    }\n})\nexport default class TheTopbar extends Mixins(BaseMixin) {\n    topbarHeight = topbarHeight\n\n    showEmergencyStopDialog = false\n\n    uploadSnackbar: uploadSnackbar = {\n        status: false,\n        filename: '',\n        percent: 0,\n        speed: 0,\n        total: 0,\n        cancelTokenSource: null,\n        lastProgress: {\n            time: 0,\n            loaded: 0\n        }\n    }\n\n    formatFilesize = formatFilesize\n\n    $refs!: {\n        fileUploadAndStart: HTMLFormElement\n    }\n\n    get naviDrawer() {\n        return this.$store.state.naviDrawer\n    }\n\n    set naviDrawer(newVal) {\n        this.$store.dispatch('setNaviDrawer', newVal)\n    }\n\n    get validGcodeExtensions() {\n        return validGcodeExtensions\n    }\n\n    get currentPage() {\n        return this.$route.fullPath\n    }\n\n    get saveConfigPending() {\n        return this.$store.state.printer.configfile?.save_config_pending ?? false\n    }\n\n    get printerName():string {\n        if (this.$store.state.gui.general.printername.length)\n            return this.$store.state.gui.general.printername\n\n        return this.$store.state.printer.hostname\n    }\n\n    get boolWideNavDrawer() {\n        return this.$store.state.gui.uiSettings.boolWideNavDrawer ?? false\n    }\n\n    get countPrinters() {\n        return this.$store.getters['farm/countPrinters']\n    }\n\n    get boolHideUploadAndPrintButton() {\n        return this.$store.state.gui.uiSettings.boolHideUploadAndPrintButton ?? false\n    }\n\n    get sidebarLogo(): string {\n        return this.$store.getters['files/getSidebarLogo']\n    }\n\n    get logoColor(): string {\n        return this.$store.state.gui.uiSettings.logo\n    }\n\n    btnEmergencyStop() {\n        const confirmOnEmergencyStop = this.$store.state.gui.uiSettings.confirmOnEmergencyStop\n        if (confirmOnEmergencyStop) {\n            this.showEmergencyStopDialog = true\n        }\n        else {\n            this.emergencyStop()\n        }\n    }\n\n    emergencyStop() {\n        this.showEmergencyStopDialog = false\n        this.$socket.emit('printer.emergency_stop', {}, { loading: 'topbarEmergencyStop' })\n    }\n\n    saveConfig() {\n        this.$store.dispatch('server/addEvent', { message: 'SAVE_CONFIG', type: 'command' })\n        this.$socket.emit('printer.gcode.script', { script: 'SAVE_CONFIG' }, { loading: 'topbarSaveConfig' })\n    }\n\n    btnUploadAndStart() {\n        this.$refs.fileUploadAndStart.click()\n    }\n\n    async uploadAndStart() {\n        if (this.$refs.fileUploadAndStart?.files.length) {\n            this.$store.dispatch('socket/addLoading', { name: 'btnUploadAndStart' })\n            let successFiles = []\n            for (const file of this.$refs.fileUploadAndStart?.files) {\n                const result = await this.doUploadAndStart(file)\n                successFiles.push(result)\n            }\n\n            this.$store.dispatch('socket/removeLoading', { name: 'btnUploadAndStart' })\n            for(const file of successFiles) {\n                const text = this.$t('App.TopBar.UploadOfFileSuccessful', {file:file}).toString()\n                this.$toast.success(text)\n            }\n\n            this.$refs.fileUploadAndStart.value = ''\n            if (this.currentPage !== '/') await this.$router.push('/')\n        }\n    }\n\n    doUploadAndStart(file: File) {\n        const formData = new FormData()\n        const filename = file.name\n\n        this.uploadSnackbar.filename = filename\n        this.uploadSnackbar.status = true\n        this.uploadSnackbar.percent = 0\n        this.uploadSnackbar.speed = 0\n        this.uploadSnackbar.lastProgress.loaded = 0\n        this.uploadSnackbar.lastProgress.time = 0\n\n        formData.append('file', file, filename)\n        formData.append('print', 'true')\n\n        return new Promise(resolve => {\n            this.uploadSnackbar.cancelTokenSource = axios.CancelToken.source()\n            axios.post(this.apiUrl + '/server/files/upload',\n                formData, {\n                    cancelToken: this.uploadSnackbar.cancelTokenSource.token,\n                    headers: { 'Content-Type': 'multipart/form-data' },\n                    onUploadProgress: (progressEvent: ProgressEvent) => {\n                        this.uploadSnackbar.percent = (progressEvent.loaded * 100) / progressEvent.total\n                        if (this.uploadSnackbar.lastProgress.time) {\n                            const time = progressEvent.timeStamp - this.uploadSnackbar.lastProgress.time\n                            const data = progressEvent.loaded - this.uploadSnackbar.lastProgress.loaded\n\n                            if (time) this.uploadSnackbar.speed = data / (time / 1000)\n                        }\n\n                        this.uploadSnackbar.lastProgress.time = progressEvent.timeStamp\n                        this.uploadSnackbar.lastProgress.loaded = progressEvent.loaded\n                        this.uploadSnackbar.total = progressEvent.total\n                    }\n                }\n            ).then((result) => {\n                this.uploadSnackbar.status = false\n                resolve(result.data.result)\n            }).catch(() => {\n                this.uploadSnackbar.status = false\n                this.$store.dispatch('socket/removeLoading', { name: 'btnUploadAndStart' })\n                const text = this.$t('App.TopBar.CannotUploadTheFile').toString()\n                this.$toast.error(text)\n            })\n        })\n    }\n\n    cancelUpload(): void {\n        this.uploadSnackbar.cancelTokenSource.cancel()\n        this.uploadSnackbar.status = false\n    }\n}\n</script>"]}]}