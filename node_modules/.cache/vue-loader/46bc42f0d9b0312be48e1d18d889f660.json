{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGeneralTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsGeneralTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SettingsGeneralTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"SettingsGeneralTab.vue","sourceRoot":"src/components/settings","sourcesContent":["<template>\n    <div>\n        <v-card flat>\n            <v-card-text>\n                <settings-row :title=\"$t('Settings.GeneralTab.PrinterName')\">\n                    <v-text-field v-model=\"printerName\" hide-details outlined dense ></v-text-field>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.GeneralTab.Language')\">\n                    <v-select v-model=\"currentLanguage\" :items=\"availableLanguages\" hide-details outlined dense attach></v-select>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.GeneralTab.CalcEstimateTime')\" :sub-title=\"$t('Settings.GeneralTab.CalcEstimateTimeDescription')\">\n                    <v-select v-model=\"calcEstimateTime\" :items=\"calcEstimateItems\" multiple hide-details dense outlined attach></v-select>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.GeneralTab.CalcEtaTime')\" :sub-title=\"$t('Settings.GeneralTab.CalcEtaTimeDescription')\">\n                    <v-select v-model=\"calcEtaTime\" :items=\"calcEtaTimeItems\" multiple hide-details dense outlined attach></v-select>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.GeneralTab.MoonrakerDb')\" :dynamicSlotWidth=\"true\">\n                    <input type=\"file\" :accept=\"['.json']\" ref=\"uploadBackupFile\" class=\"d-none\" @change=\"uploadRestore\" />\n                    <v-btn @click=\"backupDb\" :loading=\"loadings.includes('backupDbButton')\" small>{{ $t('Settings.GeneralTab.Backup') }}</v-btn>\n                    <v-btn @click=\"restoreDb\" small :loading=\"loadings.includes('restoreUploadButton')\" class=\"ml-3\">{{ $t('Settings.GeneralTab.Restore') }}</v-btn>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.GeneralTab.FactoryReset')\" :dynamicSlotWidth=\"true\">\n                    <v-btn @click=\"resetMainsail\" color=\"error\" small>{{ $t('Settings.GeneralTab.FactoryReset') }}</v-btn>\n                </settings-row>\n            </v-card-text>\n        </v-card>\n        <v-dialog v-model=\"dialogBackupMainsail\" persistent :width=\"360\">\n            <panel :title=\"$t('Settings.GeneralTab.Backup')\" card-class=\"mainsail-backup-dialog\" :margin-bottom=\"false\" icon=\"mdi-help-circle\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogBackupMainsail = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-row>\n                        <v-col>\n                            <p class=\"mb-0\">{{ $t('Settings.GeneralTab.BackupDialog') }}</p>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col class=\"pl-6\">\n                            <template v-for=\"db in mainsailKeys\">\n                                <v-checkbox\n                                    :label=\"db.label\"\n                                    hide-details\n                                    class=\"mt-0\"\n                                    :key=\"db.name\"\n                                    @change=\"changeNamespace(db.name)\"\n                                ></v-checkbox>\n                            </template>\n                            <v-checkbox\n                                :label=\"$t('Settings.GeneralTab.DbTimelapseSettings')\"\n                                v-if=\"availableNamespaces.includes('timelapse')\"\n                                hide-details\n                                class=\"mt-0\"\n                                @change=\"changeNamespace('timelapse')\"\n                            ></v-checkbox>\n                            <v-checkbox\n                                :label=\"$t('Settings.GeneralTab.DbWebcams')\"\n                                v-if=\"availableNamespaces.includes('webcams')\"\n                                hide-details\n                                class=\"mt-0\"\n                                @change=\"changeNamespace('webcams')\"\n                            ></v-checkbox>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col class=\"text-center\">\n                            <v-btn\n                                color=\"red\"\n                                @click=\"backupMainsail\"\n                                :loading=\"loadings.includes('backupMainsail')\"\n                            >\n                                {{ $t('Settings.GeneralTab.Backup') }}\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogResetMainsail\" persistent :width=\"360\">\n            <panel :title=\"$t('Settings.GeneralTab.FactoryReset')\" card-class=\"factory-reset-dialog\" :margin-bottom=\"false\" icon=\"mdi-help-circle\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogResetMainsail = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-row>\n                        <v-col>\n                            <p class=\"mb-0\">{{ $t('Settings.GeneralTab.FactoryDialog') }}</p>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col class=\"pl-6\">\n                            <template v-for=\"db in mainsailKeys\">\n                                <v-checkbox\n                                    :label=\"db.label\"\n                                    hide-details\n                                    class=\"mt-0\"\n                                    :key=\"db.name\"\n                                    @change=\"changeNamespace(db.name)\"\n                                ></v-checkbox>\n                            </template>\n                            <v-checkbox\n                                :label=\"$t('Settings.GeneralTab.DbTimelapseSettings')\"\n                                v-if=\"availableNamespaces.includes('timelapse')\"\n                                hide-details\n                                class=\"mt-0\"\n                                @change=\"changeNamespace('timelapse')\"\n                            ></v-checkbox>\n                            <v-checkbox\n                                :label=\"$t('Settings.GeneralTab.DbWebcams')\"\n                                v-if=\"availableNamespaces.includes('webcams')\"\n                                hide-details\n                                class=\"mt-0\"\n                                @change=\"changeNamespace('webcams')\"\n                            ></v-checkbox>\n                            <v-checkbox\n                                :label=\"$t('Settings.GeneralTab.DbHistoryJobs')\"\n                                v-if=\"moonrakerComponents.includes('history')\"\n                                hide-details\n                                class=\"mt-0\"\n                                @change=\"changeNamespace('history_jobs')\"\n                            ></v-checkbox>\n                            <v-checkbox\n                                :label=\"$t('Settings.GeneralTab.DbHistoryTotals')\"\n                                v-if=\"moonrakerComponents.includes('history')\"\n                                hide-details\n                                class=\"mt-0\"\n                                @change=\"changeNamespace('history_totals')\"\n                            ></v-checkbox>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col class=\"text-center\">\n                            <v-btn\n                                color=\"red\"\n                                @click=\"resetMainsailAction\"\n                                :loading=\"loadings.includes('resetMainsail')\"\n                            >\n                                {{ $t('Settings.GeneralTab.Reset') }}\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogRestoreMainsail\" persistent :width=\"360\">\n            <panel :title=\"$t('Settings.GeneralTab.Restore')\" card-class=\"factory-reset-dialog\" :margin-bottom=\"false\" icon=\"mdi-help-circle\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogRestoreMainsail = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-row>\n                        <v-col>\n                            <p class=\"mb-0\">{{ $t('Settings.GeneralTab.RestoreDialog') }}</p>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col class=\"pl-6\">\n                            <template v-for=\"db in restoreableNamespaces\">\n                                <v-checkbox\n                                    :label=\"db.label\"\n                                    hide-details\n                                    class=\"mt-0\"\n                                    :key=\"db.name\"\n                                    @change=\"changeNamespace(db.name)\"\n                                ></v-checkbox>\n                            </template>\n                        </v-col>\n                    </v-row>\n                    <v-row>\n                        <v-col class=\"text-center\">\n                            <v-btn\n                                color=\"red\"\n                                @click=\"restoreDbAction\"\n                                :loading=\"loadings.includes('restoreMainsail')\"\n                            >\n                                {{ $t('Settings.GeneralTab.Restore') }}\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n            </panel>\n        </v-dialog>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\nimport Component from 'vue-class-component'\nimport { Mixins } from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport Panel from '@/components/ui/Panel.vue'\nimport Vue from 'vue'\n\n@Component({\n    components: {Panel, SettingsRow}\n})\nexport default class SettingsGeneralTab extends Mixins(BaseMixin) {\n    private dialogBackupMainsail = false\n    private dialogResetMainsail = false\n    private dialogRestoreMainsail = false\n\n    private dbCheckboxes: string[] = []\n\n    private restoreableNamespaces: { name: string, label: string}[] = []\n    private restoreObjects: any = {}\n\n    private mainsailKeys: { name: string, label: string}[] = []\n    private availableNamespaces: string[] = []\n\n    $refs!: {\n        uploadBackupFile: HTMLInputElement\n    }\n\n    get availableKeys() {\n        return [\n            {\n                name: 'general',\n                label: this.$t('Settings.GeneralTab.General')+''\n            }, {\n                name: 'console',\n                label: this.$t('Settings.ConsoleTab.Console')+''\n            }, {\n                name: 'control',\n                label: this.$t('Settings.ControlTab.Control')+''\n            }, {\n                name: 'dashboard',\n                label: this.$t('Settings.DashboardTab.Dashboard')+''\n            }, {\n                name: 'editor',\n                label: this.$t('Settings.EditorTab.Editor')+''\n            }, {\n                name: 'gcodeviewer',\n                label: this.$t('Settings.GCodeViewerTab.GCodeViewer')+''\n            }, {\n                name: 'gcodehistory',\n                label: this.$t('Settings.GeneralTab.DbConsoleHistory')+''\n            }, {\n                name: 'macros',\n                label: this.$t('Settings.MacrosTab.Macros')+''\n            }, {\n                name: 'presets',\n                label: this.$t('Settings.PresetsTab.PreheatPresets')+''\n            }, {\n                name: 'remoteprinters',\n                label: this.$t('Settings.RemotePrintersTab.RemotePrinters')+''\n            }, {\n                name: 'timelapse',\n                label: this.$t('Settings.TimelapseTab.Timelapse')+''\n            }, {\n                name: 'uiSettings',\n                label: this.$t('Settings.UiSettingsTab.UiSettings')+''\n            }, {\n                name: 'view',\n                label: this.$t('Settings.GeneralTab.DbView')+''\n            }, {\n                name: 'webcams',\n                label: this.$t('Settings.WebcamsTab.Webcams')+''\n            }\n        ]\n    }\n\n    get printerName() {\n        return this.$store.state.gui.general.printername\n    }\n\n    set printerName(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.printername', value: newVal})\n    }\n\n    get currentLanguage() {\n        return this.$store.state.gui.general.language\n    }\n\n    set currentLanguage(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.language', value: newVal })\n    }\n\n    get availableLanguages() {\n        // eslint-disable-next-line no-undef\n        const locales = require.context('@/locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i)\n        const languages: any = []\n\n        locales.keys().map((key: string) => {\n            const langKey = key.slice(2, key.lastIndexOf('.'))\n\n            languages.push({\n                text: locales(key).title,\n                value: langKey\n            })\n        })\n\n        return languages\n    }\n\n    get calcEstimateItems() {\n        return [\n            { value: 'file', text: 'File' },\n            { value: 'filament', text: 'Filament' },\n        ]\n    }\n\n    get calcEstimateTime() {\n        return this.$store.state.gui.general.calcEstimateTime\n    }\n\n    set calcEstimateTime(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.calcEstimateTime', value: newVal })\n    }\n\n    get calcEtaTimeItems() {\n        return [\n            { value: 'file', text: 'File' },\n            { value: 'filament', text: 'Filament' },\n            { value: 'slicer', text: 'Slicer' },\n        ]\n    }\n\n    get calcEtaTime() {\n        return this.$store.state.gui.general.calcEtaTime\n    }\n\n    set calcEtaTime(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'general.calcEtaTime', value: newVal })\n    }\n\n    get moonrakerDbNamespaces() {\n        return this.$store.state.server.dbNamespaces ?? []\n    }\n\n    get moonrakerComponents() {\n        return this.$store.state.server.components ?? []\n    }\n\n    async refreshNamespaces() {\n        this.availableNamespaces = []\n\n        const url = this.$store.getters['socket/getUrl'] + '/server/database/list'\n        const response = await fetch(url)\n        if (response) {\n            const objects = await response.json()\n            this.availableNamespaces = [...objects.result?.namespaces] ?? []\n        }\n    }\n\n    async refreshMainsailKeys() {\n        this.mainsailKeys = []\n\n        const url = this.$store.getters['socket/getUrl'] + '/server/database/item?namespace=mainsail'\n        const response = await fetch(url)\n        if (response) {\n            const objects = await response.json()\n            if (objects?.result?.value) {\n                Object.keys(objects?.result?.value).forEach((tmp: string) => {\n                    if (tmp !== 'initVersion') {\n                        const namespace = this.availableKeys.find((namespace) => namespace.name === tmp)\n                        const tmpNamespace = namespace ? namespace : { name: tmp, label: tmp }\n                        this.mainsailKeys.push(tmpNamespace)\n                    }\n                })\n\n                this.mainsailKeys = this.mainsailKeys.sort((a, b) => {\n                    if (a.name === 'general') return -1\n                    if (b.name === 'general') return 1\n\n                    const stringA = a.label.toString().toLowerCase()\n                    const stringB = b.label.toString().toLowerCase()\n\n                    if (stringA < stringB) return -1\n                    if (stringA > stringB) return 1\n\n                    return 0\n                })\n            }\n        }\n    }\n\n    changeNamespace(name: string) {\n        if (this.dbCheckboxes.includes(name)) {\n            const index = this.dbCheckboxes.indexOf(name)\n            if (index >= 0) this.dbCheckboxes.splice(index, 1)\n        } else this.dbCheckboxes.push(name)\n    }\n\n    async resetMainsail() {\n        await this.refreshNamespaces()\n        if (this.availableNamespaces.includes('mainsail')) await this.refreshMainsailKeys()\n        else this.mainsailKeys = []\n\n        this.dbCheckboxes = []\n        this.dialogResetMainsail = true\n    }\n\n    async resetMainsailAction() {\n        await this.$store.dispatch('socket/addLoading', 'resetMainsail')\n        await this.$store.dispatch('gui/resetMoonrakerDB', this.dbCheckboxes)\n    }\n\n    async backupDb() {\n        this.$store.dispatch('socket/addLoading', 'backupDbButton')\n        await this.refreshNamespaces()\n        if (this.availableNamespaces.includes('mainsail')) await this.refreshMainsailKeys()\n        else this.mainsailKeys = []\n\n        this.dbCheckboxes = []\n        this.dialogBackupMainsail = true\n    }\n\n    async backupMainsail() {\n        await this.$store.dispatch('socket/addLoading', 'backupMainsail')\n        await this.$store.dispatch('gui/backupMoonrakerDB', this.dbCheckboxes)\n        await this.$store.dispatch('socket/removeLoading', 'backupMainsail')\n        this.dialogBackupMainsail = false\n    }\n\n    async restoreDb() {\n        this.$store.dispatch('socket/addLoading', 'restoreUploadButton')\n        this.$refs?.uploadBackupFile?.click()\n    }\n\n    uploadRestore() {\n        if (this.$refs.uploadBackupFile.files?.length) {\n            const backup = this.$refs.uploadBackupFile.files[0]\n            if (backup) {\n                const reader = new FileReader()\n                reader.readAsText(backup, 'UTF-8')\n                reader.onload = (evt) => {\n                    this.restoreableNamespaces = []\n                    try {\n                        this.restoreObjects = JSON.parse(evt?.target?.result+'')\n\n                        Object.keys(this.restoreObjects).forEach((tmp: string) => {\n                            const namespace = this.availableKeys.find((namespace) => namespace.name === tmp)\n                            const tmpNamespace = namespace ? namespace : { name: tmp, label: tmp }\n\n                            this.restoreableNamespaces.push(tmpNamespace)\n                        })\n\n                        this.restoreableNamespaces = this.restoreableNamespaces.sort((a, b) => {\n                            if (a.name === 'general') return -1\n                            if (b.name === 'general') return 1\n\n                            const stringA = a.label.toString().toLowerCase()\n                            const stringB = b.label.toString().toLowerCase()\n\n                            if (stringA < stringB) return -1\n                            if (stringA > stringB) return 1\n\n                            return 0\n                        })\n\n                        this.dbCheckboxes = []\n                        this.dialogRestoreMainsail = true\n                    } catch (e) {\n                        Vue.$toast.error(this.$t('Settings.GeneralTab.CannotReadJson')+'')\n                    }\n                }\n                reader.onerror = (evt) => {\n                    window.console.error(evt)\n                }\n            }\n\n            this.$refs.uploadBackupFile.value = ''\n        }\n    }\n\n    async restoreDbAction () {\n        this.$store.dispatch('socket/addLoading', 'restoreDbAction')\n\n        this.$store.dispatch('gui/restoreMoonrakerDB', {\n            dbCheckboxes: this.dbCheckboxes,\n            restoreObjects: this.restoreObjects\n        })\n    }\n}\n</script>"]}]}