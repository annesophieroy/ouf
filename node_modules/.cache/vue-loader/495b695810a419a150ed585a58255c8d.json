{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/HistoryListPanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/HistoryListPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HistoryListPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"HistoryListPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<template>\n    <div>\n        <panel\n            icon=\"mdi-file-document-multiple-outline\"\n            :title=\"$t('History.PrintHistory')\"\n            card-class=\"history-list-panel\"\n        >\n            <v-card-text>\n                <v-row>\n                    <v-col class=\"col-4 d-flex align-center\">\n\n                        <v-text-field\n                            v-model=\"search\"\n                            append-icon=\"mdi-magnify\"\n                            :label=\"$t('History.Search')\"\n                            single-line\n                            outlined\n                            clearable\n                            hide-details\n                            dense\n                        ></v-text-field>\n                    </v-col>\n                    <v-col class=\"offset-4 col-4 d-flex align-center justify-end\">\n                        <v-btn :title=\"$t('History.TitleRefreshHistory')\" class=\"px-2 minwidth-0 ml-3\" @click=\"refreshHistory\"><v-icon>mdi-refresh</v-icon></v-btn>\n                        <v-menu :offset-y=\"true\" :close-on-content-click=\"false\" title=\"Setup current list\">\n                            <template v-slot:activator=\"{ on, attrs }\">\n                                <v-btn class=\"px-2 minwidth-0 ml-3\" :title=\"$t('History.TitleSettings')\" v-bind=\"attrs\" v-on=\"on\"><v-icon>mdi-cog</v-icon></v-btn>\n                            </template>\n                            <v-list>\n                                <template v-if=\"allPrintStatusArray.length\">\n                                    <v-list-item class=\"minHeight36\" v-for=\"status of allPrintStatusArray\" v-bind:key=\"status.key\">\n                                        <v-checkbox class=\"mt-0\" hide-details :input-value=\"status.showInTable\" @change=\"changeStatusVisible(status)\" :label=\"$t('History.ShowStatusName', { name: status.name, count: status.value })\"></v-checkbox>\n                                    </v-list-item>\n                                    <v-divider></v-divider>\n                                </template>\n                                <v-list-item class=\"minHeight36\" v-for=\"header of configHeaders\" v-bind:key=\"header.key\">\n                                    <v-checkbox class=\"mt-0\" hide-details v-model=\"header.visible\" @change=\"changeColumnVisible(header.value)\" :label=\"header.text\"></v-checkbox>\n                                </v-list-item>\n                            </v-list>\n                        </v-menu>\n                    </v-col>\n                </v-row>\n            </v-card-text>\n            <v-divider class=\"mb-3\"></v-divider>\n            <v-data-table\n                :items=\"jobs\"\n                class=\"files-table\"\n                :headers=\"filteredHeaders\"\n                :options=\"options\"\n                :custom-sort=\"sortFiles\"\n                :sort-by.sync=\"sortBy\"\n                :sort-desc.sync=\"sortDesc\"\n                :items-per-page.sync=\"countPerPage\"\n                :footer-props=\"{\n                    itemsPerPageText: $t('History.Jobs'),\n                    itemsPerPageAllText: $t('History.AllJobs'),\n                    itemsPerPageOptions: [10,25,50,100,-1]\n                }\"\n                item-key=\"name\"\n                :search=\"search\"\n                :custom-filter=\"advancedSearch\"\n                mobile-breakpoint=\"0\">\n\n                <template slot=\"items\" slot-scope=\"props\">\n                    <td v-for=\"header in filteredHeaders\" v-bind:key=\"header.text\">{{ props.item[header.value] }}</td>\n                </template>\n\n                <template #no-data>\n                    <div class=\"text-center\">{{ $t('History.Empty') }}</div>\n                </template>\n\n                <template #item=\"{ index, item }\">\n                    <tr\n                        :key=\"`${index} ${item.filename}`\"\n                        v-longpress:600=\"(e) => showContextMenu(e, item)\"\n                        @contextmenu=\"showContextMenu($event, item)\"\n                        @click=\"clickRow(item)\"\n                        :class=\"'file-list-cursor user-select-none '+(item.exists ? '' : 'text--disabled')\"\n                    >\n                        <td class=\"pr-0 text-center\" style=\"width: 32px;\">\n                            <template v-if=\"!item.exists\">\n                                <v-icon class=\"text--disabled\">mdi-file-cancel</v-icon>\n                            </template>\n                            <template v-else-if=\"getSmallThumbnail(item) && getBigThumbnail(item)\">\n                                <v-tooltip top>\n                                    <template v-slot:activator=\"{ on, attrs }\">\n                                        <vue-load-image>\n                                            <img slot=\"image\" :src=\"getSmallThumbnail(item)\" width=\"32\" height=\"32\" v-bind=\"attrs\" v-on=\"on\"  />\n                                            <v-progress-circular slot=\"preloader\" indeterminate color=\"primary\"></v-progress-circular>\n                                            <v-icon slot=\"error\">mdi-file</v-icon>\n                                        </vue-load-image>\n                                    </template>\n                                    <span><img :src=\"getBigThumbnail(item)\" width=\"250\" /></span>\n                                </v-tooltip>\n                            </template>\n                            <template v-else-if=\"getSmallThumbnail(item)\">\n                                <vue-load-image>\n                                    <img slot=\"image\" :src=\"getSmallThumbnail(item)\" width=\"32\" height=\"32\" />\n                                    <v-progress-circular slot=\"preloader\" indeterminate color=\"primary\"></v-progress-circular>\n                                    <v-icon slot=\"error\">mdi-file</v-icon>\n                                </vue-load-image>\n                            </template>\n                            <template v-else>\n                                <v-icon>mdi-file</v-icon>\n                            </template>\n                        </td>\n                        <td class=\" \">{{ item.filename }}</td>\n                        <td class=\"text-center\">\n                            <v-tooltip top>\n                                <template v-slot:activator=\"{ on, attrs }\">\n                                    <span v-bind=\"attrs\" v-on=\"on\">\n                                        <v-icon small :color=\"getStatusColor(item.status)\" :disabled=\"!item.exists\">{{ getStatusIcon(item.status) }}</v-icon>\n                                    </span>\n                                </template>\n                                <span>{{ item.status.replace(/_/g, \" \") }}</span>\n                            </v-tooltip>\n                        </td>\n                        <td v-for=\"col in tableFields\" v-bind:key=\"col.value\" :class=\"col.outputType !== 'date' ? 'text-no-wrap' : ''\">\n                            {{ outputValue(col, item) }}\n                        </td>\n                        <td class=\" \" v-if=\"headers.find(header => header.value === 'slicer').visible\">\n                            {{ 'slicer' in item.metadata && item.metadata.slicer ? item.metadata.slicer : '--' }}\n                            <small v-if=\"'slicer_version' in item.metadata && item.metadata.slicer_version\"><br />{{ item.metadata.slicer_version }}</small>\n                        </td>\n                    </tr>\n                </template>\n            </v-data-table>\n        </panel>\n        <v-menu v-model=\"contextMenu.shown\" :position-x=\"contextMenu.x\" :position-y=\"contextMenu.y\" absolute offset-y>\n            <v-list>\n                <v-list-item @click=\"clickRow(contextMenu.item)\">\n                    <v-icon class=\"mr-1\">mdi-text-box-search</v-icon> {{ $t('History.Details') }}\n                </v-list-item>\n                <v-list-item @click=\"startPrint(contextMenu.item)\" v-if=\"contextMenu.item.exists\" :disabled=\"printerIsPrinting || !klipperReadyForGui\">\n                    <v-icon class=\"mr-1\">mdi-printer</v-icon> {{ $t('History.Reprint') }}\n                </v-list-item>\n                <v-list-item @click=\"deleteJob(contextMenu.item)\">\n                    <v-icon class=\"mr-1\">mdi-delete</v-icon> {{ $t('History.Delete') }}\n                </v-list-item>\n            </v-list>\n        </v-menu>\n        <v-dialog v-model=\"detailsDialog.boolShow\" :max-width=\"600\" persistent @keydown.esc=\"detailsDialog.boolShow = false\">\n            <panel :title=\"$t('History.JobDetails')\" icon=\"mdi-update\" card-class=\"history-detail-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"detailsDialog.boolShow = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text class=\"px-0\">\n                    <overlay-scrollbars style=\"height: 350px;\" class=\"px-6\">\n                        <v-row>\n                            <v-col>{{ $t('History.Filename') }}</v-col>\n                            <v-col class=\"text-right\">{{ detailsDialog.item.filename }}</v-col>\n                        </v-row>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'size' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.Filesize') }}</v-col>\n                                <v-col class=\"text-right\">{{ formatFilesize(detailsDialog.item.metadata.size) }}</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'modified' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.LastModified') }}</v-col>\n                                <v-col class=\"text-right\">{{ formatDate(detailsDialog.item.metadata.modified) }}</v-col>\n                            </v-row>\n                        </template>\n                        <v-divider class=\"my-3\"></v-divider>\n                        <v-row>\n                            <v-col>{{ $t('History.Status') }}</v-col>\n                            <v-col class=\"text-right\">{{ detailsDialog.item.status }}</v-col>\n                        </v-row>\n                        <v-divider class=\"my-3\"></v-divider>\n                        <v-row>\n                            <v-col>{{ $t('History.StartTime') }}</v-col>\n                            <v-col class=\"text-right\">{{ formatDate(detailsDialog.item.start_time) }}</v-col>\n                        </v-row>\n                        <template v-if=\"'end_time' in detailsDialog.item && detailsDialog.item.end_time > 0\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.EndTime') }}</v-col>\n                                <v-col class=\"text-right\">{{ formatDate(detailsDialog.item.end_time) }}</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'estimated_time' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.EstimatedTime') }}</v-col>\n                                <v-col class=\"text-right\">{{ formatPrintTime(detailsDialog.item.metadata.estimated_time) }}</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"detailsDialog.item.print_duration > 0\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.PrintDuration') }}</v-col>\n                                <v-col class=\"text-right\">{{ formatPrintTime(detailsDialog.item.print_duration) }}</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"detailsDialog.item.total_duration > 0\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.TotalDuration') }}</v-col>\n                                <v-col class=\"text-right\">{{ formatPrintTime(detailsDialog.item.total_duration) }}</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'filament_total' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.EstimatedFilamentWeight') }}</v-col>\n                                <v-col class=\"text-right\">{{ Math.round(detailsDialog.item.metadata.filament_weight_total*100)/100 }} g</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'filament_total' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.EstimatedFilament') }}</v-col>\n                                <v-col class=\"text-right\">{{ Math.round(detailsDialog.item.metadata.filament_total) }} mm</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"detailsDialog.item.filament_used > 0\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.FilamentUsed') }}</v-col>\n                                <v-col class=\"text-right\">{{ Math.round(detailsDialog.item.filament_used) }} mm</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'first_layer_extr_temp' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.FirstLayerExtTemp') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.first_layer_extr_temp }} °C</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'first_layer_bed_temp' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.FirstLayerBedTemp') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.first_layer_bed_temp }} °C</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'first_layer_height' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.FirstLayerHeight') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.first_layer_height }} mm</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'layer_height' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.LayerHeight') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.layer_height }} mm</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'object_height' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.ObjectHeight') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.object_height }} mm</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'slicer' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.Slicer') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.slicer }}</v-col>\n                            </v-row>\n                        </template>\n                        <template v-if=\"'metadata' in detailsDialog.item && 'slicer_version' in detailsDialog.item.metadata\">\n                            <v-divider class=\"my-3\"></v-divider>\n                            <v-row>\n                                <v-col>{{ $t('History.SlicerVersion') }}</v-col>\n                                <v-col class=\"text-right\">{{ detailsDialog.item.metadata.slicer_version }}</v-col>\n                            </v-row>\n                        </template>\n                    </overlay-scrollbars>\n                </v-card-text>\n            </panel>\n        </v-dialog>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\n\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {ServerHistoryStateJob} from '@/store/server/history/types'\nimport {caseInsensitiveSort, formatFilesize} from '@/plugins/helpers'\nimport Panel from '@/components/ui/Panel.vue'\nimport {thumbnailBigMin, thumbnailSmallMax, thumbnailSmallMin} from '@/store/variables'\n@Component({\n    components: {Panel}\n})\nexport default class HistoryListPanel extends Mixins(BaseMixin) {\n    formatFilesize = formatFilesize\n\n    private boolAllData = false\n    private search = ''\n    private sortBy = 'start_time'\n    private sortDesc = true\n    private selected = []\n    private hideHeaderColums = []\n    private options = { }\n    private contextMenu = {\n        shown: false,\n        touchTimer: undefined,\n        x: 0,\n        y: 0,\n        item: {}\n    }\n    private detailsDialog = {\n        item: {},\n        boolShow: false,\n    }\n\n    get jobs() {\n        return this.$store.getters['server/history/getFilterdJobList'] ?? []\n    }\n\n    get headers() {\n        const headers = [ {\n            text: '',\n            value: '',\n            align: 'left',\n            configable: false,\n            visible: true,\n            filterable: false\n        }, {\n            text: this.$t('History.Filename'),\n            value: 'filename',\n            align: 'left',\n            configable: false,\n            visible: true\n        }, {\n            text: '',\n            value: 'status',\n            align: 'left',\n            configable: false,\n            visible: true,\n            filterable: false\n        }, {\n            text: this.$t('History.Filesize'),\n            value: 'size',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'filesize'\n        }, {\n            text: this.$t('History.LastModified'),\n            value: 'modified',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'date'\n        }, {\n            text: this.$t('History.StartTime'),\n            value: 'start_time',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'date'\n        }, {\n            text: this.$t('History.EndTime'),\n            value: 'end_time',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'date'\n        }, {\n            text: this.$t('History.EstimatedTime'),\n            value: 'estimated_time',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'time'\n        }, {\n            text: this.$t('History.PrintTime'),\n            value: 'print_duration',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'time'\n        }, {\n            text: this.$t('History.TotalTime'),\n            value: 'total_duration',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'time'\n        }, {\n            text: this.$t('History.FilamentCalc'),\n            value: 'filament_total',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'length'\n        }, {\n            text: this.$t('History.FilamentUsed'),\n            value: 'filament_used',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'length'\n        }, {\n            text: this.$t('History.FirstLayerExtTemp'),\n            value: 'first_layer_extr_temp',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'temp'\n        }, {\n            text: this.$t('History.FirstLayerBedTemp'),\n            value: 'first_layer_bed_temp',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'temp'\n        }, {\n            text: this.$t('History.FirstLayerHeight'),\n            value: 'first_layer_height',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'length'\n        }, {\n            text: this.$t('History.LayerHeight'),\n            value: 'layer_height',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'length'\n        }, {\n            text: this.$t('History.ObjectHeight'),\n            value: 'object_height',\n            align: 'left',\n            configable: true,\n            visible: true,\n            outputType: 'length'\n        }, {\n            text: this.$t('History.Slicer'),\n            value: 'slicer',\n            align: 'left',\n            configable: true,\n            visible: true\n        },\n        ]\n\n        headers.forEach((header) => {\n            if (header.visible && this.hideColums.includes(header.value)) {\n                header.visible = false\n            } else if (!header.visible && !this.hideColums.includes(header.value)) {\n                header.visible = true\n            }\n        })\n\n        return headers\n    }\n\n    get tableFields() {\n        return this.filteredHeaders.filter((col: any) => !['filename', 'status', 'slicer'].includes(col.value) && col.value !== '')\n    }\n\n    get configHeaders() {\n        return this.headers.filter((header: any) => header.configable === true)\n    }\n\n    get filteredHeaders() {\n        return this.headers.filter((header: any) => header.visible === true)\n    }\n\n    get allPrintStatusArray() {\n        return caseInsensitiveSort(this.$store.getters['server/history/getAllPrintStatusArray'] ?? [], 'name')\n    }\n\n    get countPerPage() {\n        return this.$store.state.gui.view.historycountPerPage\n    }\n\n    set countPerPage(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.history.countPerPage', value: newVal })\n    }\n\n    get hideColums() {\n        return this.$store.state.gui.view.history.hideColums\n    }\n\n    set hideColums(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.history.hideColums', value: newVal })\n    }\n\n    refreshHistory() {\n        this.$socket.emit('server.history.list', { start: 0, limit: 50 }, { action: 'server/history/getHistory' })\n    }\n\n    formatDate(date: number) {\n        const tmp2 = new Date(date*1000)\n\n        return tmp2.toLocaleString().replace(',', '')\n    }\n\n    formatPrintTime(totalSeconds: number) {\n        if (totalSeconds) {\n            let output = ''\n\n            const days = Math.floor(totalSeconds / (3600 * 24))\n            if (days) {\n                totalSeconds %= (3600 * 24)\n                output += days+'d'\n            }\n\n            const hours = Math.floor(totalSeconds / 3600)\n            totalSeconds %= 3600\n            if (hours) output += ' '+hours+'h'\n\n            const minutes = Math.floor(totalSeconds / 60)\n            if (minutes) output += ' '+minutes+'m'\n\n            const seconds = totalSeconds % 60\n            if (seconds) output += ' '+seconds.toFixed(0)+'s'\n\n            return output\n        }\n\n        return '--'\n    }\n    \n    clickRow(item: ServerHistoryStateJob) {\n        this.detailsDialog.item = item\n        this.detailsDialog.boolShow = true\n    }\n    \n    showContextMenu (e: any, item: ServerHistoryStateJob) {\n        if (!this.contextMenu.shown) {\n            e?.preventDefault()\n            this.contextMenu.shown = true\n            this.contextMenu.x = e?.clientX || e?.pageX || window.screenX / 2\n            this.contextMenu.y = e?.clientY || e?.pageY || window.screenY / 2\n            this.contextMenu.item = item\n            this.$nextTick(() => {\n                this.contextMenu.shown = true\n            })\n        }\n    }\n\n    sortFiles(items: any[], sortBy: string[], sortDesc: boolean[]) {\n        const sortByClean = sortBy.length ? sortBy[0] : 'filename'\n        const sortDescClean = sortDesc[0]\n\n        if (items !== undefined) {\n            // Sort by index\n            items.sort(function(a, b) {\n                if (a[sortByClean] === b[sortByClean]) return 0\n                if (a[sortByClean] === null || a[sortByClean] === undefined) return -1\n                if (b[sortByClean] === null || b[sortByClean] === undefined) return 1\n\n                if (a[sortByClean].constructor === String && b[sortByClean].constructor === String) {\n                    return a[sortByClean].localeCompare(b[sortByClean], undefined, { sensivity: 'base' })\n                }\n\n                if (a[sortByClean] instanceof Array && b[sortByClean] instanceof Array) {\n                    const reducedA = a[sortByClean].length ? a.filament.reduce((a: any, b: any) => a + b) : 0\n                    const reducedB = b[sortByClean].length ? b.filament.reduce((a: any, b: any) => a + b) : 0\n                    return reducedA - reducedB\n                }\n\n                return a[sortByClean] - b[sortByClean]\n            })\n\n            // Deal with descending order\n            if (sortDescClean) items.reverse()\n        }\n\n        return items\n    }\n\n    advancedSearch(value: string, search: string) {\n        return value != null &&\n            search != null &&\n            value.toString().toLowerCase().indexOf(search.toLowerCase()) !== -1\n    }\n\n    getSmallThumbnail(item: ServerHistoryStateJob) {\n        if (\n            'metadata' in item &&\n            'thumbnails' in item.metadata &&\n            item.metadata.thumbnails.length\n        ) {\n            const thumbnail = item.metadata.thumbnails.find((thumb: any) =>\n                thumb.width >= thumbnailSmallMin && thumb.width <= thumbnailSmallMax &&\n                thumb.height >= thumbnailSmallMin && thumb.height <= thumbnailSmallMax\n            )\n\n            let relative_url = ''\n            if (item.filename.lastIndexOf('/') !== -1) {\n                relative_url = item.filename.substr(0, item.filename.lastIndexOf('/')+1)\n            }\n\n            if (thumbnail && 'relative_path' in thumbnail) {\n                return `${this.apiUrl}/server/files/gcodes/${encodeURI(relative_url+thumbnail.relative_path)}?timestamp=${item.metadata.modified}`\n            }\n        }\n\n        return false\n    }\n\n    getBigThumbnail(item: ServerHistoryStateJob) {\n        if (\n            'metadata' in item &&\n            'thumbnails' in item.metadata &&\n            item.metadata.thumbnails.length\n        ) {\n            const thumbnail = item.metadata.thumbnails.find((thumb: any) => thumb.width >= thumbnailBigMin)\n\n            let relative_url = ''\n            if (item.filename.lastIndexOf('/') !== -1) {\n                relative_url = item.filename.substr(0, item.filename.lastIndexOf('/')+1)\n            }\n\n            if (thumbnail && 'relative_path' in thumbnail)\n                return `${this.apiUrl}/server/files/gcodes/${encodeURI(relative_url+thumbnail.relative_path)}?timestamp=${item.metadata.modified}`\n        }\n\n        return false\n    }\n\n    getThumbnailWidth(item: ServerHistoryStateJob) {\n        if (this.getBigThumbnail(item)) {\n            const thumbnail = item.metadata.thumbnails.find((thumb: any) => thumb.width >= thumbnailBigMin)\n\n            if (thumbnail) return thumbnail.width\n        }\n\n        return 400\n    }\n\n    changeColumnVisible(name: string) {\n        if (this.headers.filter(header => header.value === name).length) {\n            let value = this.headers.filter(header => header.value === name)[0].visible\n\n            this.$store.dispatch('gui/setHistoryColumns', {name: name, value: value})\n        }\n    }\n\n    changeStatusVisible(status: any) {\n        if (status.showInTable) this.$store.dispatch('gui/hideStatusInHistoryList', status.name)\n        else this.$store.dispatch('gui/showStatusInHistoryList', status.name)\n    }\n\n    startPrint(item: ServerHistoryStateJob) {\n        if (item.exists) this.$socket.emit('printer.print.start', { filename: item.filename }, { action: 'switchToDashboard' })\n    }\n\n    deleteJob(item: ServerHistoryStateJob) {\n        this.$socket.emit('server.history.delete_job', { uid: item.job_id }, { action: 'server/history/getDeletedJobs' })\n    }\n\n    getStatusIcon(status: string) {\n        return this.$store.getters['server/history/getPrintStatusChipIcon'](status)\n    }\n\n    getStatusColor(status: string) {\n        return this.$store.getters['server/history/getPrintStatusChipColor'](status)\n    }\n\n    outputValue(col: any, item: any) {\n        let value = col.value in item ? item[col.value] : null\n        if (value === null) value = col.value in item.metadata ? item.metadata[col.value] : null\n\n        if (value > 0) {\n            switch(col.outputType) {\n            case 'filesize':\n                return formatFilesize(value)\n\n            case 'date':\n                return this.formatDate(value)\n\n            case 'time':\n                return this.formatPrintTime(value)\n\n            case 'temp':\n                return value.toFixed()+' °C'\n\n            case 'length':\n                if (value > 1000) return (value / 1000).toFixed(2)+' m'\n\n                return value.toFixed(2)+' mm'\n\n            default:\n                return value\n            }\n        } else return '--'\n    }\n}\n</script>\n"]}]}