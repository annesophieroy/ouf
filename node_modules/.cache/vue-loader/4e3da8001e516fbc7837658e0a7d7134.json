{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheUpdateDialog.vue?vue&type=style&index=0&id=04ead382&scoped=true&lang=css&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheUpdateDialog.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1645990066541},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645990070825},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/postcss-loader/src/index.js","mtime":1645990067674},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51cGRhdGVyTG9nU2Nyb2xsIHsKICAgIGhlaWdodDogMzUwcHg7CiAgICBtYXgtaGVpZ2h0OiAzNTBweDsKICAgIG92ZXJmbG93LXg6IGhpZGRlbjsKfQoKLnVwZGF0ZXJMb2cgLnRpdGxlLWNlbGwgewogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7Cn0KCi51cGRhdGVyTG9nLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7CiAgICBoZWlnaHQ6IGF1dG87Cn0K"},{"version":3,"sources":["TheUpdateDialog.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TheUpdateDialog.vue","sourceRoot":"src/components","sourcesContent":["<style scoped>\n    .updaterLogScroll {\n        height: 350px;\n        max-height: 350px;\n        overflow-x: hidden;\n    }\n\n    .updaterLog .title-cell {\n        white-space: nowrap;\n        vertical-align: top;\n    }\n\n    .updaterLog.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: auto;\n    }\n</style>\n\n<template>\n    <v-dialog :value=\"application !== ''\" persistent max-width=\"800\" class=\"mx-0\">\n        <v-card\n            dark\n            :loading=\"!complete\"\n        >\n            <template slot=\"progress\">\n                <v-progress-linear color=\"primary\" indeterminate></v-progress-linear>\n            </template>\n            <v-toolbar flat dense >\n                <v-toolbar-title>\n                    <span class=\"subheading\">\n                        <v-icon left>mdi-update</v-icon>\n                        <template v-if=\"application.substr(0, 8) === 'recover_' && !complete\">\n                            {{ $t(\"App.UpdateDialog.Recovering\", { software: application.substr(8) }) }}\n                        </template>\n                        <template v-else-if=\"application.substr(0, 8) === 'recover_'\">\n                            {{ $t(\"App.UpdateDialog.RecoveringDone\", { software: application.substr(8) }) }}\n                        </template>\n                        <template v-else-if=\"!complete\">\n                            {{ $t(\"App.UpdateDialog.Updating\", { software: application }) }}\n                        </template>\n                        <template v-else>\n                            {{ $t(\"App.UpdateDialog.UpdatingDone\", { software: application }) }}\n                        </template>\n                    </span>\n                </v-toolbar-title>\n            </v-toolbar>\n            <v-card-text class=\"px-3\">\n                <v-row>\n                    <v-col class=\"py-6 px-0\">\n                        <overlay-scrollbars class=\"updaterLogScroll\" ref=\"updaterLogScroll\">\n                            <v-data-table\n                                :headers=\"headers\"\n                                :items=\"messages\"\n                                item-key=\"date\"\n                                hide-default-footer\n                                hide-default-header\n                                disable-pagination\n                                class=\"updaterLog\"\n                                ref=\"updaterLog\"\n                                :custom-sort=\"customSort\"\n                                sort-by=\"date\"\n                                :sort-desc=\"true\"\n                                color=\"primary\"\n                            >\n                                <template #no-data>\n                                    <div class=\"py-2\">{{ $t(\"App.UpdateDialog.Empty\")}}</div>\n                                </template>\n\n                                <template #item=\"{ item }\">\n                                    <tr>\n                                        <td class=\"log-cell title-cell py-2\">\n                                            {{ formatTime(item.date)}}\n                                        </td>\n                                        <td class=\"log-cell content-cell pl-0 py-2\" colspan=\"2\" style=\"width:100%;\">\n                                            <span v-if=\"item.message\" class=\"message\" v-html=\"item.message\"></span>\n                                        </td>\n                                    </tr>\n                                </template>\n                            </v-data-table>\n                        </overlay-scrollbars>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col class=\"text-center pt-5\">\n                        <v-btn text @click=\"close\" :disabled=\"!complete\" color=\"primary\">{{ $t(\"App.UpdateDialog.Close\")}}</v-btn>\n                    </v-col>\n                </v-row>\n            </v-card-text>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport {Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\n\n@Component({\n    components: {\n    }\n})\nexport default class TheUpdateDialog extends Mixins(BaseMixin) {\n    $refs!: {\n        updaterLogScroll: any\n        updaterLog: HTMLDivElement\n    }\n\n    headers = [\n        {\n            text: 'Date',\n            value: 'date',\n            width: '1%',\n            dateType: 'Date',\n        }, {\n            text: 'Message',\n            sortable: false,\n            value: 'message',\n            width: '99%'\n        },\n    ]\n\n    get application() {\n        return this.$store.state.server.updateManager.updateResponse.application ?? ''\n    }\n\n    get messages() {\n        return this.$store.state.server.updateManager.updateResponse.messages ?? []\n    }\n\n    get complete() {\n        return this.$store.state.server.updateManager.updateResponse.complete ?? true\n    }\n\n    customSort(items: any[], index: string, isDesc: boolean[]) {\n        items.sort((a, b) => {\n            if (index[0] === 'date') {\n                if (!isDesc[0]) return new Date(b[index]).getTime() -  new Date(a[index]).getTime()\n                else return new Date(a[index]).getTime() - new Date(b[index]).getTime()\n            } else {\n                if(typeof a[index] !== 'undefined'){\n                    if (!isDesc[0]) return a[index].toLowerCase().localeCompare(b[index].toLowerCase())\n                    else return b[index].toLowerCase().localeCompare(a[index].toLowerCase())\n                }\n            }\n        })\n\n        return items\n    }\n\n    formatTime(date: Date) {\n        const hours = (date.getHours() < 10) ? '0'+date.getHours().toString() : date.getHours()\n        const minutes = (date.getMinutes() < 10) ? '0'+date.getMinutes().toString() : date.getMinutes()\n        const seconds = (date.getSeconds() < 10) ? '0'+date.getSeconds().toString() : date.getSeconds()\n\n        return hours+':'+minutes+':'+seconds\n    }\n\n    close() {\n        if (this.application !== null && this.complete && ['client', 'mainsail', 'full'].includes(this.application.toLowerCase())) window.location.reload(true)\n        else {\n            this.$store.commit('server/updateManager/resetUpdateResponse')\n            this.$socket.emit('machine.update.status', { refresh: false }, { action: 'server/updateManager/getStatus' })\n        }\n    }\n\n    @Watch('messages')\n    messagesChanged() {\n        setTimeout(() => {\n            this.$nextTick(() => {\n                if (this.$refs.updaterLogScroll) {\n                    const overlayscroll = this.$refs.updaterLogScroll.osInstance()\n                    overlayscroll?.scroll({ y: '100%' })\n                }\n            })\n        }, 50)\n    }\n}\n</script>"]}]}