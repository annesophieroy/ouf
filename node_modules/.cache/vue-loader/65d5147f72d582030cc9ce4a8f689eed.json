{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/WebcamPanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/WebcamPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IE1qcGVnc3RyZWFtZXIgZnJvbSAnQC9jb21wb25lbnRzL3dlYmNhbXMvTWpwZWdzdHJlYW1lci52dWUnCmltcG9ydCBNanBlZ3N0cmVhbWVyQWRhcHRpdmUgZnJvbSAnQC9jb21wb25lbnRzL3dlYmNhbXMvTWpwZWdzdHJlYW1lckFkYXB0aXZlLnZ1ZScKaW1wb3J0IElwc3RyZWFtZXIgZnJvbSAnQC9jb21wb25lbnRzL3dlYmNhbXMvSXBzdHJlYW1lci52dWUnCmltcG9ydCBVdjRsTWpwZWcgZnJvbSAnQC9jb21wb25lbnRzL3dlYmNhbXMvVXY0bE1qcGVnLnZ1ZScKaW1wb3J0IFdlYmNhbUdyaWQgZnJvbSAnQC9jb21wb25lbnRzL3dlYmNhbXMvV2ViY2FtR3JpZC52dWUnCmltcG9ydCBDb21wb25lbnQgZnJvbSAndnVlLWNsYXNzLWNvbXBvbmVudCcKaW1wb3J0IHtNaXhpbnMsIFByb3B9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InCmltcG9ydCBCYXNlTWl4aW4gZnJvbSAnLi4vbWl4aW5zL2Jhc2UnCmltcG9ydCBQYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvdWkvUGFuZWwudnVlJwppbXBvcnQge0d1aVdlYmNhbVN0YXRlV2ViY2FtfSBmcm9tICdAL3N0b3JlL2d1aS93ZWJjYW1zL3R5cGVzJwoKQENvbXBvbmVudCh7CiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgUGFuZWwsCiAgICAgICAgJ3dlYmNhbS1tanBlZ3N0cmVhbWVyJzogTWpwZWdzdHJlYW1lciwKICAgICAgICAnd2ViY2FtLW1qcGVnc3RyZWFtZXItYWRhcHRpdmUnOiBNanBlZ3N0cmVhbWVyQWRhcHRpdmUsCiAgICAgICAgJ3dlYmNhbS1pcHN0cmVhbWVyJzogSXBzdHJlYW1lciwKICAgICAgICAnd2ViY2FtLXV2NGwtbWpwZWcnOiBVdjRsTWpwZWcsCiAgICAgICAgJ3dlYmNhbS1ncmlkJzogV2ViY2FtR3JpZCwKICAgIH0KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2ViY2FtUGFuZWwgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CiAgICBAUHJvcCh7IGRlZmF1bHQ6ICdkYXNoYm9hcmQnIH0pIHZpZXdwb3J0Pzogc3RyaW5nCgogICAgZ2V0IHdlYmNhbXMoKTogR3VpV2ViY2FtU3RhdGVXZWJjYW1bXSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2d1aS93ZWJjYW1zL2dldFdlYmNhbXMnXQogICAgfQoKICAgIGdldCBjdXJyZW50Q2FtSWQoKTogc3RyaW5nIHsKICAgICAgICBpZiAodGhpcy53ZWJjYW1zLmxlbmd0aCA9PT0gMSkgcmV0dXJuIHRoaXMud2ViY2Ftc1swXS5pZCA/PyAnYWxsJwoKICAgICAgICBsZXQgY3VycmVudENhbUlkID0gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLnZpZXcud2ViY2FtLmN1cnJlbnRDYW1bdGhpcy52aWV3cG9ydCA/PyAnJ10gPz8gJ2FsbCcKICAgICAgICBpZiAodGhpcy53ZWJjYW1zLmZpbmRJbmRleCgod2ViY2FtOiBHdWlXZWJjYW1TdGF0ZVdlYmNhbSkgPT4gd2ViY2FtLmlkID09PSBjdXJyZW50Q2FtSWQpICE9PSAtMSkKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRDYW1JZAogICAgICAgIGVsc2UgaWYgKGN1cnJlbnRDYW1JZCAhPT0gdW5kZWZpbmVkICYmIHRoaXMud2ViY2Ftcy5sZW5ndGggPT09IDEpCiAgICAgICAgICAgIHJldHVybiB0aGlzLndlYmNhbXNbMF0uaWQgPz8gJycKICAgICAgICBlbHNlIHJldHVybiAnYWxsJwogICAgfQoKICAgIHNldCBjdXJyZW50Q2FtSWQobmV3VmFsOiBzdHJpbmcpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NldEN1cnJlbnRXZWJjYW0nLCB7IHZpZXdwb3J0OiB0aGlzLnZpZXdwb3J0LCB2YWx1ZTogbmV3VmFsIH0pCiAgICB9CgogICAgZ2V0IGN1cnJlbnRDYW0oKTogYW55IHsKICAgICAgICBjb25zdCBjYW0gPSB0aGlzLndlYmNhbXMuZmluZCgoY2FtOiBHdWlXZWJjYW1TdGF0ZVdlYmNhbSkgPT4gY2FtLmlkID09PSB0aGlzLmN1cnJlbnRDYW1JZCkKCiAgICAgICAgcmV0dXJuIGNhbSA/PyB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuJHQoJ1BhbmVscy5XZWJjYW1QYW5lbC5BbGwnKSwKICAgICAgICAgICAgc2VydmljZTogJ2dyaWQnLAogICAgICAgICAgICBpY29uOiAnbWRpLXZpZXctZ3JpZCcsCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["WebcamPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WebcamPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<style scoped>\n\n</style>\n\n<template>\n    <panel\n        v-if=\"socketIsConnected\"\n        icon=\"mdi-webcam\"\n        :title=\"$t('Panels.WebcamPanel.Headline')\"\n        :collapsible=\"(this.$route.fullPath !== '/cam')\"\n        card-class=\"webcam-panel\"\n    >\n        <template v-slot:buttons v-if=\"webcams.length > 1\">\n            <v-menu :offset-y=\"true\" title=\"Webcam\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn text tile v-bind=\"attrs\" v-on=\"on\">\n                        <v-icon small v-if=\"'icon' in currentCam\" class=\"mr-2\">{{ currentCam.icon }}</v-icon>\n                        <span class=\"d-none d-md-block\">{{ 'name' in currentCam ? currentCam.name : \"unknown\" }}</span>\n                        <v-icon small>mdi-menu-down</v-icon>\n                    </v-btn>\n                </template>\n                <v-list dense class=\"py-0\">\n                    <v-list-item link @click=\"currentCamId = 'all'\">\n                        <v-list-item-icon class=\"mr-0\">\n                            <v-icon small>mdi-view-grid</v-icon>\n                        </v-list-item-icon>\n                        <v-list-item-content>\n                            <v-list-item-title>{{ $t('Panels.WebcamPanel.All') }}</v-list-item-title>\n                        </v-list-item-content>\n                    </v-list-item>\n                    <v-list-item v-for=\"webcam of webcams\" v-bind:key=\"webcam.id\" link @click=\"currentCamId = webcam.id\">\n                        <v-list-item-icon class=\"mr-0\">\n                            <v-icon small>{{ webcam.icon }}</v-icon>\n                        </v-list-item-icon>\n                        <v-list-item-content>\n                            <v-list-item-title v-text=\"webcam.name\"></v-list-item-title>\n                        </v-list-item-content>\n                    </v-list-item>\n                </v-list>\n            </v-menu>\n        </template>\n        <v-card-text class=\"px-0 py-0 content d-inline-block\">\n            <v-row>\n                <v-col class=\"pb-0\" style=\"position: relative;\">\n                    <template v-if=\"this.currentCam.service === 'grid'\">\n                        <webcam-grid :webcams=\"this.webcams\"></webcam-grid>\n                    </template>\n                    <template v-else-if=\"this.currentCam.service === 'mjpegstreamer'\">\n                        <webcam-mjpegstreamer :cam-settings=\"this.currentCam\"></webcam-mjpegstreamer>\n                    </template>\n                    <template v-else-if=\"this.currentCam.service === 'mjpegstreamer-adaptive'\">\n                        <webcam-mjpegstreamer-adaptive :cam-settings=\"this.currentCam\"></webcam-mjpegstreamer-adaptive>\n                    </template>\n                    <template v-else-if=\"this.currentCam.service === 'uv4l-mjpeg'\">\n                        <webcam-uv4l-mjpeg :cam-settings=\"this.currentCam\"></webcam-uv4l-mjpeg>\n                    </template>\n                    <template v-else-if=\"this.currentCam.service === 'ipstream'\">\n                        <webcam-ipstreamer :cam-settings=\"this.currentCam\"></webcam-ipstreamer>\n                    </template>\n                    <template v-else>\n                        <p class=\"text-center py-3 font-italic\">{{ $t('Panels.WebcamPanel.UnknownWebcamService') }}</p>\n                    </template>\n                </v-col>\n            </v-row>\n        </v-card-text>\n    </panel>\n</template>\n\n<script lang=\"ts\">\nimport Mjpegstreamer from '@/components/webcams/Mjpegstreamer.vue'\nimport MjpegstreamerAdaptive from '@/components/webcams/MjpegstreamerAdaptive.vue'\nimport Ipstreamer from '@/components/webcams/Ipstreamer.vue'\nimport Uv4lMjpeg from '@/components/webcams/Uv4lMjpeg.vue'\nimport WebcamGrid from '@/components/webcams/WebcamGrid.vue'\nimport Component from 'vue-class-component'\nimport {Mixins, Prop} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport Panel from '@/components/ui/Panel.vue'\nimport {GuiWebcamStateWebcam} from '@/store/gui/webcams/types'\n\n@Component({\n    components: {\n        Panel,\n        'webcam-mjpegstreamer': Mjpegstreamer,\n        'webcam-mjpegstreamer-adaptive': MjpegstreamerAdaptive,\n        'webcam-ipstreamer': Ipstreamer,\n        'webcam-uv4l-mjpeg': Uv4lMjpeg,\n        'webcam-grid': WebcamGrid,\n    }\n})\nexport default class WebcamPanel extends Mixins(BaseMixin) {\n    @Prop({ default: 'dashboard' }) viewport?: string\n\n    get webcams(): GuiWebcamStateWebcam[] {\n        return this.$store.getters['gui/webcams/getWebcams']\n    }\n\n    get currentCamId(): string {\n        if (this.webcams.length === 1) return this.webcams[0].id ?? 'all'\n\n        let currentCamId = this.$store.state.gui.view.webcam.currentCam[this.viewport ?? ''] ?? 'all'\n        if (this.webcams.findIndex((webcam: GuiWebcamStateWebcam) => webcam.id === currentCamId) !== -1)\n            return currentCamId\n        else if (currentCamId !== undefined && this.webcams.length === 1)\n            return this.webcams[0].id ?? ''\n        else return 'all'\n    }\n\n    set currentCamId(newVal: string) {\n        this.$store.dispatch('gui/setCurrentWebcam', { viewport: this.viewport, value: newVal })\n    }\n\n    get currentCam(): any {\n        const cam = this.webcams.find((cam: GuiWebcamStateWebcam) => cam.id === this.currentCamId)\n\n        return cam ?? {\n            name: this.$t('Panels.WebcamPanel.All'),\n            service: 'grid',\n            icon: 'mdi-view-grid',\n        }\n    }\n}\n</script>"]}]}