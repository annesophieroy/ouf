{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsMacrosTabExpert.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsMacrosTabExpert.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SettingsMacrosTabExpert.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SettingsMacrosTabExpert.vue","sourceRoot":"src/components/settings","sourcesContent":["\n<template>\n    <div>\n        <template v-if=\"boolFormEdit === false\">\n            <v-card-text>\n                <h3 class=\"text-h5 mb-3\">{{ $t('Settings.MacrosTab.Macrogroups') }}</h3>\n                <template v-if=\"groups.length\">\n                    <div v-for=\"(group, index) in groups\" v-bind:key=\"index\">\n                        <v-divider class=\"my-2\" v-if=\"index\"></v-divider>\n                        <settings-row :title=\"group.name !== '' ? group.name : '<'+$t('Settings.MacrosTab.UnknownGroup')+'>'\" :sub-title=\"$tc('Settings.MacrosTab.CountMacros', ('macros' in group ? group.macros.length : 0), { count: ('macros' in group ? group.macros.length : 0) })\" :dynamicSlotWidth=\"true\">\n                            <v-btn small outlined class=\"ml-3\" @click=\"editMacrogroup(group)\">\n                                <v-icon left small>mdi-pencil</v-icon>{{ $t('Settings.Edit') }}\n                            </v-btn>\n                            <v-btn small outlined @click=\"deleteMacrogroup(group.id)\" class=\"ml-3 minwidth-0 px-2\" color=\"error\">\n                                <v-icon small>mdi-delete</v-icon>\n                            </v-btn>\n                        </settings-row>\n                    </div>\n                </template>\n                <template v-else>\n                    <v-row>\n                        <v-col>\n                            <p class=\"mb-0 text-center font-italic\">{{ $t('Settings.MacrosTab.NoGroups') }}</p>\n                        </v-col>\n                    </v-row>\n                </template>\n            </v-card-text>\n            <v-card-actions class=\"d-flex justify-end\">\n                <v-btn text color=\"primary\" @click=\"addGroup\">{{ $t(\"Settings.MacrosTab.AddGroup\")}}</v-btn>\n            </v-card-actions>\n        </template>\n        <template v-else-if=\"boolFormEdit\">\n            <v-card-text>\n                <h3 class=\"text-h5 mb-3\">{{ $t('Settings.MacrosTab.EditGroup') }}</h3>\n                <settings-row :title=\"$t('Settings.MacrosTab.Name')\">\n                    <v-text-field\n                        v-model=\"editGroup.name\"\n                        hide-details=\"auto\"\n                        :rules=\"[rules.required, rules.groupUnique]\"\n                        dense\n                        outlined\n                        @change=\"updateGroupOptionName\"\n                    ></v-text-field>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.MacrosTab.Color')\">\n                    <v-select v-model=\"editGroup.color\" :items=\"groupColors\" @change=\"updateGroupOptionColor\" outlined dense hide-details attach></v-select>\n                </settings-row>\n                <template v-if=\"editGroup.color === 'custom'\">\n                    <v-divider class=\"my-2\"></v-divider>\n                    <settings-row :title=\"$t('Settings.MacrosTab.CustomColor')\">\n                        <v-menu bottom left offset-y :close-on-content-click=\"false\">\n                            <template v-slot:activator=\"{ on, attrs }\">\n                                <v-btn v-bind=\"attrs\" v-on=\"on\" :color=\"editGroup.colorCustom\" class=\"minwidth-0 px-5\" small></v-btn>\n                            </template>\n                            <v-color-picker\n                                :value=\"editGroup.colorCustom\"\n                                hide-mode-switch\n                                mode=\"rgba\"\n                                @update:color=\"updateGroupOptionColorCustom\"\n                            ></v-color-picker>\n                        </v-menu>\n                    </settings-row>\n                </template>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.MacrosTab.Status')\">\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                            <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"updateGroupOptionShowInStandby(!editGroup.showInStandby)\" class=\"ml-3 minwidth-0 px-2\" :color=\"editGroup.showInStandby ? '' : 'secondary'\">\n                                <v-icon small>mdi-sleep</v-icon>\n                            </v-btn>\n                        </template>\n                        <span>{{ $t('Settings.MacrosTab.ShowInStateStandby') }}</span>\n                    </v-tooltip>\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                            <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"updateGroupOptionShowInPause(!editGroup.showInPause)\" class=\"ml-3 minwidth-0 px-2\" :color=\"editGroup.showInPause ? '' : 'secondary'\">\n                                <v-icon small>mdi-pause</v-icon>\n                            </v-btn>\n                        </template>\n                        <span>{{ $t('Settings.MacrosTab.ShowInStatePaused') }}</span>\n                    </v-tooltip>\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                            <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"updateGroupOptionShowInPrinting(!editGroup.showInPrinting)\" class=\"ml-3 minwidth-0 px-2\" :color=\"editGroup.showInPrinting ? '' : 'secondary'\">\n                                <v-icon small>mdi-printer-3d-nozzle</v-icon>\n                            </v-btn>\n                        </template>\n                        <span>{{ $t('Settings.MacrosTab.ShowInStatePrinting') }}</span>\n                    </v-tooltip>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <h3 class=\"text-h5 mt-6 mb-3\">{{ $t('Settings.MacrosTab.GroupMacros') }}</h3>\n                <template v-if=\"editGroup.macros && editGroup.macros.length\">\n                    <draggable v-model=\"editGroupMacros\" handle=\".handle\" ghost-class=\"ghost\" group=\"macros\" @change=\"updateMacroOrder\">\n                        <template v-for=\"(macro, index) in editGroupMacros\">\n                            <div v-bind:key=\"macro.name\">\n                                <v-row>\n                                    <v-col class=\"col-auto pr-0 d-flex\">\n                                        <v-icon class=\"handle\">mdi-arrow-up-down</v-icon>\n                                    </v-col>\n                                    <v-col>\n                                        <settings-row :title=\"macro.name\" :sub-title=\"getMacroDescription(macro.name)\" v-bind:key=\"'groupMacro_macro_'+index\" :dynamicSlotWidth=\"true\">\n                                            <template v-if=\"existsMacro(macro.name)\">\n                                                <v-tooltip top>\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"changeColorMacroFromGroup(macro)\" class=\"ml-3 minwidth-0 px-2\" :color=\"macro.color \">\n                                                            <v-icon small left>mdi-palette</v-icon> {{ macro.color }}\n                                                        </v-btn>\n                                                    </template>\n                                                    <span>{{ $t('Settings.MacrosTab.ChangeMacroColor') }}</span>\n                                                </v-tooltip>\n                                                <v-tooltip top>\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"updateMacroFromGroup(macro, 'showInStandby', !macro.showInStandby)\" class=\"ml-3 minwidth-0 px-2\" :color=\"macro.showInStandby ? '' : 'secondary'\">\n                                                            <v-icon small>mdi-sleep</v-icon>\n                                                        </v-btn>\n                                                    </template>\n                                                    <span>{{ $t('Settings.MacrosTab.ShowInStateStandby') }}</span>\n                                                </v-tooltip>\n                                                <v-tooltip top>\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"updateMacroFromGroup(macro, 'showInPause', !macro.showInPause)\" class=\"ml-3 minwidth-0 px-2\" :color=\"macro.showInPause ? '' : 'secondary'\">\n                                                            <v-icon small>mdi-pause</v-icon>\n                                                        </v-btn>\n                                                    </template>\n                                                    <span>{{ $t('Settings.MacrosTab.ShowInStatePaused') }}</span>\n                                                </v-tooltip>\n                                                <v-tooltip top>\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"updateMacroFromGroup(macro, 'showInPrinting', !macro.showInPrinting)\" class=\"ml-3 minwidth-0 px-2\" :color=\"macro.showInPrinting ? '' : 'secondary'\">\n                                                            <v-icon small>mdi-printer-3d-nozzle</v-icon>\n                                                        </v-btn>\n                                                    </template>\n                                                    <span>{{ $t('Settings.MacrosTab.ShowInStatePrinting') }}</span>\n                                                </v-tooltip>\n                                            </template>\n                                            <v-tooltip top>\n                                                <template v-slot:activator=\"{ on, attrs }\">\n                                                    <v-btn small outlined v-bind=\"attrs\" v-on=\"on\" @click=\"removeMacroFromGroup(macro)\" class=\"ml-3 minwidth-0 px-2\" color=\"error\">\n                                                        <v-icon small>mdi-delete</v-icon>\n                                                    </v-btn>\n                                                </template>\n                                                <span>{{ $t('Settings.MacrosTab.DeleteMacroFromGroup') }}</span>\n                                            </v-tooltip>\n                                        </settings-row>\n                                    </v-col>\n                                </v-row>\n                                <v-divider class=\"my-2\" ></v-divider>\n                            </div>\n                        </template>\n                    </draggable>\n                </template>\n                <template v-else>\n                    <v-row>\n                        <v-col>\n                            <p class=\"mb-0 text-center font-italic\">{{ $t('Settings.MacrosTab.NoMacrosInGroup') }}</p>\n                        </v-col>\n                    </v-row>\n                </template>\n                <h3 class=\"text-h5 mt-6 mb-3\">{{ $t('Settings.MacrosTab.AvailableMacros') }}</h3>\n                <template v-if=\"availableMacros.length\">\n                    <template v-for=\"(macro, index) in availableMacros\">\n                        <v-divider class=\"my-2\" v-if=\"index\" v-bind:key=\"'availableMacro_deliver_'+index\"></v-divider>\n                        <settings-row :title=\"macro.name\" :sub-title=\"macro.description\" v-bind:key=\"'availableMacro_macro_'+index\" :dynamicSlotWidth=\"true\">\n                            <v-btn small outlined class=\"ml-3\" @click=\"addMacroToGroup(macro)\">\n                                <v-icon left small>mdi-plus</v-icon> {{ $t('Settings.MacrosTab.Add') }}\n                            </v-btn>\n                        </settings-row>\n                    </template>\n                </template>\n                <template v-else>\n                    <v-row>\n                        <v-col>\n                            <p class=\"mb-0 text-center font-italic\">{{ $t('Settings.MacrosTab.NoAvailableMacros') }}</p>\n                        </v-col>\n                    </v-row>\n                </template>\n            </v-card-text>\n            <v-card-actions class=\"d-flex justify-end\">\n                <v-btn text @click=\"cancelEditMacrogroup\">{{ $t('Settings.Close')}}</v-btn>\n            </v-card-actions>\n        </template>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {Component, Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport draggable from 'vuedraggable'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport {Debounce} from 'vue-debounce-decorator'\nimport {PrinterStateMacro} from '@/store/printer/types'\nimport {GuiMacrosStateMacrogroup, GuiMacrosStateMacrogroupMacro} from '@/store/gui/macros/types'\n\n@Component({\n    components: {SettingsRow, draggable}\n})\nexport default class SettingsMacrosTabExpert extends Mixins(BaseMixin) {\n    private rules = {\n        required: (value: string) => value !== '' || 'required',\n        groupUnique: (value: string) => !this.existsGroupName(value) || 'Name already exists',\n    }\n\n    private boolFormEdit = false\n    private editGroupId: string | null = ''\n\n    get groupColors() {\n        return [\n            {\n                text: this.$t('Settings.MacrosTab.Primary'),\n                value: 'primary',\n            },\n            {\n                text: this.$t('Settings.MacrosTab.Secondary'),\n                value: 'secondary',\n            },\n            {\n                text: this.$t('Settings.MacrosTab.Success'),\n                value: 'success',\n            },\n            {\n                text: this.$t('Settings.MacrosTab.Warning'),\n                value: 'warning',\n            },\n            {\n                text: this.$t('Settings.MacrosTab.Error'),\n                value: 'error',\n            },\n            {\n                text: this.$t('Settings.MacrosTab.Custom'),\n                value: 'custom',\n            },\n        ]\n    }\n\n    get macroColors() {\n        const colors = [...this.groupColors]\n        const indexCustom = colors.findIndex((color) => color.value === 'custom')\n        if (indexCustom !== -1) colors.splice(indexCustom, 1)\n\n        colors.push({\n            text: this.$t('Settings.MacrosTab.Group'),\n            value: 'group'\n        })\n\n        return colors\n    }\n\n    get allMacros() {\n        return this.$store.getters['printer/getAllMacros'] ?? []\n    }\n\n    get availableMacros() {\n        return this.allMacros.filter((m: GuiMacrosStateMacrogroupMacro) => !this.editGroupUsedMacros.includes(m.name))\n    }\n\n    get groups() {\n        return this.$store.getters['gui/macros/getAllMacrogroups'] ?? []\n    }\n\n    get editGroupUsedMacros() {\n        return this.editGroup?.macros?.map((m: GuiMacrosStateMacrogroupMacro) => m.name) ?? []\n    }\n\n    get editGroup(): GuiMacrosStateMacrogroup | null {\n        return this.$store.getters['gui/macros/getMacrogroup'](this.editGroupId)\n    }\n\n    get editGroupMacros() {\n        const macros = this.editGroup?.macros ?? []\n        macros.sort((a: GuiMacrosStateMacrogroupMacro, b: GuiMacrosStateMacrogroupMacro) => a.pos - b.pos)\n\n        return macros\n    }\n\n    set editGroupMacros(newVal) {\n\n    }\n\n    existsGroupName(name: string) {\n        return (this.groups.findIndex((group: GuiMacrosStateMacrogroup) => group.name === name && group.id != this.editGroupId) >= 0)\n    }\n\n    clearColorObject(color: any): string {\n        if (typeof color === 'object' && 'hex' in color)\n            color = color.hex\n        if (color.length > 7)\n            color = color.substr(0, 7)\n        return color\n    }\n\n    updateShowGeneral(newVal: boolean) {\n        this.$emit('update:showGeneral', newVal )\n    }\n\n    async addGroup() {\n        const values = {\n            name: '',\n            color: 'primary',\n            colorCustom: '#fff',\n            showInStandby: true,\n            showInPause: true,\n            showInPrinting: true,\n        }\n        this.editGroupId = await this.$store.dispatch('gui/macros/groupStore',  { values })\n\n        this.boolFormEdit = true\n    }\n\n    editMacrogroup(group: GuiMacrosStateMacrogroup) {\n        this.boolFormEdit = true\n        this.editGroupId = group.id\n    }\n\n    deleteMacrogroup(id: string) {\n        this.$store.dispatch('gui/macros/groupDelete', id)\n    }\n\n    addMacroToGroup(macro: PrinterStateMacro) {\n        this.$store.dispatch('gui/macros/addMacroToMacrogroup', {\n            id: this.editGroupId,\n            macro: macro.name\n        })\n    }\n\n    updateMacroFromGroup(macro: GuiMacrosStateMacrogroupMacro, option: string, value: boolean | string | number) {\n        this.$store.dispatch('gui/macros/updateMacroFromMacrogroup', {\n            id: this.editGroupId,\n            macro: macro.name,\n            option: option,\n            value: value\n        })\n    }\n\n    updateMacroOrder(output: any) {\n        const oldIndex = output.moved.oldIndex ?? 0\n        const newIndex = output.moved.newIndex ?? 0\n        const oldPos = this.editGroupMacros[oldIndex].pos\n        const newPos = this.editGroupMacros[newIndex].pos\n\n        this.updateMacroFromGroup(this.editGroupMacros[oldIndex], 'pos', newPos)\n        this.updateMacroFromGroup(this.editGroupMacros[newIndex], 'pos', oldPos)\n    }\n\n    changeColorMacroFromGroup(macro: GuiMacrosStateMacrogroupMacro) {\n        let index = this.macroColors.findIndex((color) => color.value === macro.color) + 1\n        const maxIndex = this.macroColors.length - 1\n\n        if (index > maxIndex) index = 0\n        const newColor = this.macroColors[index].value\n\n        this.updateMacroFromGroup(macro, 'color', newColor)\n    }\n\n    removeMacroFromGroup(macro: GuiMacrosStateMacrogroupMacro) {\n        this.$store.dispatch('gui/macros/removeMacroFromMacrogroup', {\n            id: this.editGroupId,\n            macro: macro.name\n        })\n    }\n\n    existsMacro(macroname: string) {\n        return (this.allMacros.findIndex((m: PrinterStateMacro) => m.name.toLowerCase() === macroname.toLowerCase()) !== -1)\n    }\n\n    getMacroDescription(macroname: string) {\n        const macro = this.allMacros.find((m: PrinterStateMacro) => m.name.toLowerCase() === macroname.toLowerCase())\n        if (!macro) return this.$t('Settings.MacrosTab.DeletedMacro')\n\n        return macro?.description ?? null\n    }\n\n    updateMacrogroupOption(option: string, newVal: boolean | string) {\n        const values:any = {}\n        values[option] = newVal\n\n        this.$store.dispatch('gui/macros/groupUpdate', {\n            id: this.editGroupId,\n            values\n        })\n    }\n\n    @Debounce(250)\n    updateGroupOptionName(newVal: string) {\n        this.updateMacrogroupOption('name', newVal)\n    }\n\n    updateGroupOptionColor(newVal: string) {\n        this.updateMacrogroupOption('color', newVal)\n    }\n\n    @Debounce(250)\n    updateGroupOptionColorCustom(newVal: string) {\n        this.updateMacrogroupOption('colorCustom', this.clearColorObject(newVal))\n    }\n\n    updateGroupOptionShowInStandby(newVal: boolean) {\n        this.updateMacrogroupOption('showInStandby', newVal)\n    }\n\n    updateGroupOptionShowInPause(newVal: boolean) {\n        this.updateMacrogroupOption('showInPause', newVal)\n    }\n\n    updateGroupOptionShowInPrinting(newVal: boolean) {\n        this.updateMacrogroupOption('showInPrinting', newVal)\n    }\n\n    @Watch('boolFormEdit')\n    updatedBoolFormEdit(newVal: boolean) {\n        this.updateShowGeneral(!newVal)\n    }\n\n    cancelEditMacrogroup() {\n        this.boolFormEdit = false\n        this.$emit('scrollToTop')\n    }\n}\n</script>"]}]}