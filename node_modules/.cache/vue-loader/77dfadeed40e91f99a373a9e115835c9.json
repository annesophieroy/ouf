{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheSidebar.vue?vue&type=style&index=1&id=46e9fe5b&scoped=true&lang=css&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheSidebar.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1645990066541},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645990070825},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/postcss-loader/src/index.js","mtime":1645990067674},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWN0aXZlLW5hdi1pdGVtIHsKICAgIGJvcmRlci1yaWdodDogNHB4IHNvbGlkIHZhcigtLXYtcHJpbWFyeS1iYXNlKTsKfQoKLm1lbnUtaXRlbS1pY29uIHsKICAgIG9wYWNpdHk6IC44NTsKfQoKLm1lbnUtaXRlbS10aXRsZSB7CiAgICBsaW5lLWhlaWdodDogMzBweDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGZvbnQtd2VpZ2h0OiA2MDA7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgb3BhY2l0eTogLjg1Owp9CgoubmF2LXNjcm9sbGJhciB7CiAgICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["TheSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TheSidebar.vue","sourceRoot":"src/components","sourcesContent":["<style>\n    .nav-logo {\n        height: 32px;\n    }\n\n    .small-list-item {\n        height: var(--sidebar-menu-item-height);\n    }\n\n    .no-text-decoration {\n        text-decoration: none;\n        background-color: transparent;\n    }\n\n    .no-background:before {\n        background-color: rgba(255, 255, 255, 0) !important;\n    }\n\n    .no-border {\n        border: 0 !important;\n    }\n</style>\n<style scoped>\n    .active-nav-item {\n        border-right: 4px solid var(--v-primary-base);\n    }\n\n    .menu-item-icon {\n        opacity: .85;\n    }\n\n    .menu-item-title {\n        line-height: 30px;\n        font-size: 14px;\n        font-weight: 600;\n        text-transform: uppercase;\n        opacity: .85;\n    }\n\n    .nav-scrollbar {\n        height: 100%;\n    }\n</style>\n<template>\n    <v-navigation-drawer v-model=\"naviDrawer\" :src=\"sidebarBackground\" :mini-variant=\"(navigationStyle === 'iconsOnly')\" :key=\"navigationStyle\" :width=\"navigationWidth\" :temporary=\"boolNaviTemp\" clipped app :style=\"sidebarCssVars\"> \n        <overlay-scrollbars class=\"nav-scrollbar\">\n            <v-list class=\"pr-0 pt-0 ml-0\">\n                <v-list-item-group active-class=\"active-nav-item\">\n                    <v-list-item\n                        router to=\"/\"\n                        :class=\"'sidebar-logo no-text-decoration no-background no-border ' + ((navigationStyle === 'iconsOnly') ? 'pa-0 justify-center' : '')\"\n                        :style=\"'height: ' + topbarHeight + 'px'\"\n                        :ripple=\"false\"\n                        v-if=\"isMobile\"\n                    >\n                        <template v-if=\"sidebarLogo\">\n                            <img :src=\"sidebarLogo\" :style=\"logoCssVars\" class=\"nav-logo\" alt=\"Logo\" />\n                        </template>\n                        <template v-else>\n                            <mainsail-logo :color=\"logoColor\" :style=\"logoCssVars\" class=\"nav-logo\" :ripple=\"false\"></mainsail-logo>\n                        </template>\n                        <template v-if=\"navigationStyle !== 'iconsOnly'\">\n                            <span class=\"text-h6 font-weight-regular text-truncate\"> {{ printerName }} </span> \n                        </template>\n                    </v-list-item>\n                    <template v-if=\"countPrinters\">\n                        <v-tooltip right :open-delay=\"500\" :disabled=\"navigationStyle !== 'iconsOnly'\">\n                            <template v-slot:activator=\"{ on, attrs }\">\n                                <v-list-item\n                                    router to=\"/allPrinters\"\n                                    class=\"small-list-item mt-1\"\n                                    v-bind=\"attrs\"\n                                    v-on=\"on\"\n                                >\n                                    <v-list-item-icon class=\"my-3 mr-3 menu-item-icon\">\n                                        <v-icon>mdi-view-dashboard-outline</v-icon>\n                                    </v-list-item-icon>\n                                    <v-list-item-content>\n                                        <v-list-item-title tile class=\"menu-item-title\">{{ $t(\"App.Printers\") }}</v-list-item-title>\n                                    </v-list-item-content>\n\n                                </v-list-item>\n                            </template>\n                            <span>{{ $t(\"App.Printers\") }}</span>\n                        </v-tooltip>\n                        <v-divider class=\"my-1\"></v-divider>\n                    </template>\n                    <div v-for=\"(category, index) in naviPoints\" :key=\"index\">\n                        <v-tooltip right :open-delay=\"500\" :disabled=\"navigationStyle !== 'iconsOnly'\">\n                            <template v-slot:activator=\"{ on, attrs }\">\n                                <v-list-item\n                                    router :to=\"category.path\"\n                                    class=\"small-list-item\"\n                                    v-bind=\"attrs\"\n                                    v-on=\"on\"\n                                >\n                                    <v-list-item-icon class=\"my-3 mr-3 menu-item-icon\">\n                                        <v-icon>mdi-{{ category.icon }}</v-icon>\n                                    </v-list-item-icon>\n                                    <v-list-item-content>\n                                        <v-list-item-title tile class=\"menu-item-title\">{{ $t(`Router.${category.title}`) }}</v-list-item-title>\n                                    </v-list-item-content>\n                                </v-list-item>\n                            </template>\n                            <span>{{ $t(`Router.${category.title}`) }}</span>\n                        </v-tooltip>\n                    </div>\n                </v-list-item-group>\n            </v-list>\n        </overlay-scrollbars>\n        <template v-slot:append>\n            <v-list-item class=\"small-list-item mb-2\">\n                <v-list-item-icon class=\"menu-item-icon\">\n                    <about-modal></about-modal>\n                </v-list-item-icon>\n            </v-list-item>\n        </template>\n    </v-navigation-drawer>  \n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport routes, {AppRoute} from '@/routes'\nimport {Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {PrinterStateKlipperConfig} from '@/store/printer/types'\nimport TheSelectPrinterDialog from '@/components/TheSelectPrinterDialog.vue'\nimport AboutModal from '@/components/modals/AboutModal.vue'\nimport {navigationWidth, topbarHeight} from '@/store/variables'\nimport MainsailLogo from '@/components/ui/MainsailLogo.vue'\n\n@Component({\n    components: {\n        TheSelectPrinterDialog,\n        AboutModal,\n        MainsailLogo\n    }\n})\n\nexport default class TheSidebar extends Mixins(BaseMixin) {\n    navigationWidth = navigationWidth\n    topbarHeight = topbarHeight\n\n    get naviDrawer(): boolean {\n        return this.$store.state.naviDrawer\n    }\n\n    set naviDrawer(newVal: boolean) {\n        this.$store.dispatch('setNaviDrawer', newVal)\n    }\n\n    get navigationStyle() {\n        return this.$store.state.gui.uiSettings.navigationStyle\n    }\n\n    get sidebarBackground(): string {\n        return this.$store.getters['files/getSidebarBackground']\n    }\n\n    get naviPoints(): AppRoute[] {\n        return routes.filter((element) => {\n            return element.showInNavi && this.showInNavi(element)\n        })\n    }\n\n    get klippy_state(): string {\n        return this.$store.state.server.klippy_state\n    }\n\n    get boolNaviWebcam(): boolean {\n        return this.$store.state.gui.uiSettings.boolWebcamNavi\n    }\n\n    get moonrakerComponents(): string[] {\n        return this.$store.state.server.components\n    }\n\n    get registeredDirectories(): string[] {\n        return this.$store.state.server.registered_directories\n    }\n\n    get klipperConfigfileSettings(): PrinterStateKlipperConfig[] {\n        return this.$store.state.printer.configfile?.settings ?? {}\n    }\n\n    get currentPage(): string {\n        return this.$route.fullPath\n    }\n\n    get countPrinters() {\n        return this.$store.getters['farm/countPrinters']\n    }\n\n    get boolNaviTemp(): boolean {\n        if(!this.isMobile && this.$vuetify.breakpoint.mdAndDown) {\n            return true\n        }\n        return false\n    }\n\n    get sidebarCssVars(): any {\n        if(this.boolNaviTemp){\n            return {\n                'top': `${topbarHeight}px !important`,\n                'padding-bottom': `${topbarHeight}px`\n            }\n        }\n        return {}\n    }\n\n    get sidebarLogo(): string {\n        return this.$store.getters['files/getSidebarLogo']\n    }\n\n    get logoColor(): string {\n        return this.$store.state.gui.uiSettings.logo\n    }\n\n    get printerName():string {\n        if (this.$store.state.gui.general.printername.length)\n            return this.$store.state.gui.general.printername\n\n        return this.$store.state.printer.hostname\n    }\n\n    get logoCssVars() {\n        if(this.navigationStyle !== 'iconsOnly'){\n            return {\n                'margin-right': '16px'\n            }\n        }\n        return {}\n    }\n\n    showInNavi(route: AppRoute): boolean {\n        if (['shutdown', 'error', 'disconnected'].includes(this.klippy_state) && !route.alwaysShow) return false\n        else if (route.title === 'Webcam' && !this.boolNaviWebcam) return false\n        else if (route.moonrakerComponent && !this.moonrakerComponents.includes(route.moonrakerComponent)) return false\n        else if (route.registeredDirectory  && !this.registeredDirectories.includes(route.registeredDirectory)) return false\n        else if (route.klipperComponent && !(route.klipperComponent in this.klipperConfigfileSettings)) return false\n        else if (route.klipperIsConnected && !this.klippyIsConnected) return false\n\n        return true\n    }\n\n    mounted() {\n        this.naviDrawer = this.$vuetify.breakpoint.lgAndUp\n    }\n}\n</script>"]}]}