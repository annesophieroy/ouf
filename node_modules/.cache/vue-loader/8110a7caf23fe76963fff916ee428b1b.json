{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheEditor.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheEditor.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge0NvbXBvbmVudCwgTWl4aW5zfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJ0AvY29tcG9uZW50cy9taXhpbnMvYmFzZScKaW1wb3J0IHtmb3JtYXRGaWxlc2l6ZX0gZnJvbSAnQC9wbHVnaW5zL2hlbHBlcnMnCmltcG9ydCBDb2RlbWlycm9yIGZyb20gJ0AvY29tcG9uZW50cy9pbnB1dHMvQ29kZW1pcnJvci52dWUnCmltcG9ydCBQYW5lbCBmcm9tICdAL2NvbXBvbmVudHMvdWkvUGFuZWwudnVlJwoKQENvbXBvbmVudCh7CiAgICBjb21wb25lbnRzOiB7UGFuZWwsIENvZGVtaXJyb3J9Cn0pCgpleHBvcnQgZGVmYXVsdCBjbGFzcyBUaGVFZGl0b3IgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CiAgICBwcml2YXRlIGRpYWxvZ0NvbmZpcm1DaGFuZ2UgPSBmYWxzZQoKICAgIGZvcm1hdEZpbGVzaXplID0gZm9ybWF0RmlsZXNpemUKCiAgICByZWZzITogewogICAgICAgIGVkaXRvcjogYW55CiAgICB9CgogICAgZ2V0IGNoYW5nZWQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVkaXRvci5jaGFuZ2VkID8gJyonIDogJycKICAgIH0KCiAgICBnZXQgc2hvdygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZWRpdG9yLmJvb2wgPz8gZmFsc2UKICAgIH0KCiAgICBnZXQgZmlsZXBhdGgoKTogc3RyaW5nIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZWRpdG9yLmZpbGVwYXRoID8/ICcnCiAgICB9CgogICAgZ2V0IGZpbGVuYW1lKCk6IHN0cmluZyB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVkaXRvci5maWxlbmFtZSA/PyAnJwogICAgfQoKICAgIGdldCBmaWxlRXh0ZW5zaW9uKCkgewogICAgICAgIGlmICh0aGlzLmZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykpIHJldHVybiB0aGlzLmZpbGVuYW1lLnNsaWNlKHRoaXMuZmlsZW5hbWUubGFzdEluZGV4T2YoJy4nKSArIDEpCgogICAgICAgIHJldHVybiAnJwogICAgfQoKICAgIGdldCBmaWxlcm9vdCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZWRpdG9yLmZpbGVyb290ID8/ICdnY29kZXMnCiAgICB9CgogICAgZ2V0IHBlcm1pc3Npb25zKCk6IHN0cmluZyB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVkaXRvci5wZXJtaXNzaW9ucyA/PyAncicKICAgIH0KCiAgICBnZXQgaXNXcml0ZWFibGUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGVybWlzc2lvbnMuaW5jbHVkZXMoJ3cnKQogICAgfQoKICAgIGdldCBzb3VyY2Vjb2RlKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5lZGl0b3Iuc291cmNlY29kZSA/PyAnJwogICAgfQoKICAgIHNldCBzb3VyY2Vjb2RlKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdlZGl0b3IvdXBkYXRlU291cmNlY29kZScsIG5ld1ZhbCkKICAgIH0KCiAgICBnZXQgbG9hZGVyQm9vbCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZWRpdG9yLmxvYWRlckJvb2wgPz8gZmFsc2UKICAgIH0KCiAgICBnZXQgbG9hZGVyUHJvZ3Jlc3MoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVkaXRvci5sb2FkZXJQcm9ncmVzcyA/PyB7fQogICAgfQoKICAgIGdldCBzbmFja2JhckhlYWRsaW5lKCkgewogICAgICAgIGxldCBkaXJlY3Rpb25VcHBlcmNhc2UgPSB0aGlzLiR0KCdGaWxlcy5Eb3dubG9hZGluZycpCiAgICAgICAgaWYgKHRoaXMubG9hZGVyUHJvZ3Jlc3MuZGlyZWN0aW9uKSB7CiAgICAgICAgICAgIGRpcmVjdGlvblVwcGVyY2FzZSA9IHRoaXMubG9hZGVyUHJvZ3Jlc3MuZGlyZWN0aW9uPy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHRoaXMubG9hZGVyUHJvZ3Jlc3MuZGlyZWN0aW9uPy5zbGljZSgxKQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuJHQoJ0VkaXRvci4nK2RpcmVjdGlvblVwcGVyY2FzZSkKICAgIH0KCiAgICBnZXQgcmVzdGFydFNlcnZpY2VOYW1lKCkgewogICAgICAgIGlmICghdGhpcy5pc1dyaXRlYWJsZSkgcmV0dXJuIG51bGwKICAgICAgICBpZiAoWydwcmludGluZycsICdwYXVzZWQnXS5pbmNsdWRlcyh0aGlzLnByaW50ZXJfc3RhdGUpKSByZXR1cm4gbnVsbAoKICAgICAgICBpZiAodGhpcy5maWxlbmFtZSA9PT0gJ21vb25yYWtlci5jb25mJykKICAgICAgICAgICAgcmV0dXJuICdtb29ucmFrZXInCiAgICAgICAgZWxzZSBpZiAodGhpcy5maWxlbmFtZSA9PT0gJ3dlYmNhbS5jb25mJykKICAgICAgICAgICAgcmV0dXJuICd3ZWJjYW1kJwogICAgICAgIGVsc2UgaWYgKHRoaXMuZmlsZW5hbWUuc3RhcnRzV2l0aCgnd2ViY2FtJykgJiYgdGhpcy5maWxlbmFtZS5lbmRzV2l0aCgnLnR4dCcpKQogICAgICAgICAgICByZXR1cm4gJ3dlYmNhbWQnCiAgICAgICAgZWxzZSBpZiAodGhpcy5maWxlbmFtZS5zdGFydHNXaXRoKCdtb29uY29yZCcpICYmIHRoaXMuZmlsZW5hbWUuZW5kc1dpdGgoJy5qc29uJykpCiAgICAgICAgICAgIHJldHVybiAnbW9vbmNvcmQnCiAgICAgICAgZWxzZSBpZiAodGhpcy5maWxlbmFtZS5lbmRzV2l0aCgnLmNmZycpKQogICAgICAgICAgICByZXR1cm4gJ2tsaXBwZXInCgogICAgICAgIHJldHVybiBudWxsCiAgICB9CgogICAgY2FuY2VsRG93bmxvYWQoKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2VkaXRvci9jYW5jZWxMb2FkJykKICAgIH0KCiAgICBlc2NDbG9zZSgpIHsKICAgICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmVkaXRvci5lc2NUb0Nsb3NlKQogICAgICAgICAgICB0aGlzLmNsb3NlKCkKICAgIH0KCiAgICBjbG9zZSgpIHsKICAgICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmVkaXRvci5jb25maXJtVW5zYXZlZENoYW5nZXMpCiAgICAgICAgICAgIHRoaXMucHJvbXB0VW5zYXZlZENoYW5nZXMoKQogICAgICAgIGVsc2UKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2VkaXRvci9jbG9zZScpCiAgICB9CgogICAgZGlzY2FyZENoYW5nZXMoKSB7CiAgICAgICAgdGhpcy5kaWFsb2dDb25maXJtQ2hhbmdlID0gZmFsc2UKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZWRpdG9yL2Nsb3NlJykKICAgIH0KCiAgICBwcm9tcHRVbnNhdmVkQ2hhbmdlcygpIHsKICAgICAgICBpZiAoIXRoaXMuJHN0b3JlLnN0YXRlLmVkaXRvci5jaGFuZ2VkIHx8ICF0aGlzLmlzV3JpdGVhYmxlKQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZWRpdG9yL2Nsb3NlJykKICAgICAgICBlbHNlCiAgICAgICAgICAgIHRoaXMuZGlhbG9nQ29uZmlybUNoYW5nZSA9IHRydWUKICAgIH0KCiAgICBzYXZlKHJlc3RhcnRTZXJ2aWNlTmFtZTogc3RyaW5nIHwgbnVsbCA9IG51bGwpIHsKICAgICAgICB0aGlzLmRpYWxvZ0NvbmZpcm1DaGFuZ2UgPSBmYWxzZQoKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZWRpdG9yL3NhdmVGaWxlJywgewogICAgICAgICAgICBjb250ZW50OiB0aGlzLnNvdXJjZWNvZGUsCiAgICAgICAgICAgIHJlc3RhcnRTZXJ2aWNlTmFtZTogcmVzdGFydFNlcnZpY2VOYW1lCiAgICAgICAgfSkKICAgIH0KfQo="},{"version":3,"sources":["TheEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"TheEditor.vue","sourceRoot":"src/components","sourcesContent":["<style scoped>\n\n</style>\n\n<template>\n    <div>\n        <v-dialog persistent v-model=\"show\"\n            fullscreen\n            hide-overlay\n            :transition=\"false\"\n            @close=\"close\"\n            @keydown.esc=\"escClose\"\n        >\n            <panel card-class=\"editor-dialog\" :icon=\"(isWriteable ? ' mdi-file-document-edit-outline' : 'mdi-file-document-outline')\" :title=\"(filepath ? filepath.slice(1)+'/': '')+filename+' '+(isWriteable ? changed : '('+$t('Editor.FileReadOnly')+')')\">\n                <template v-slot:buttons>\n                    <v-btn text tile href=\"https://www.klipper3d.org/Config_Reference.html\" v-if=\"restartServiceName === 'klipper'\" target=\"_blank\" class=\"d-none d-md-flex\"><v-icon small class=\"mr-1\">mdi-help</v-icon>{{ $t('Editor.ConfigReference') }}</v-btn>\n                    <v-btn v-if=\"isWriteable\" text tile :color=\"restartServiceName === null ? 'primary' : ''\" @click=\"save(null)\" ><v-icon small class=\"mr-1\">mdi-content-save</v-icon><span class=\"d-none d-sm-inline\">{{ $t('Editor.SaveClose') }}</span></v-btn>\n                    <v-btn v-if=\"restartServiceName !== null\" color=\"primary\" text tile  @click=\"save(restartServiceName)\" class=\"d-none d-sm-flex\"><v-icon small class=\"mr-1\">mdi-restart</v-icon>{{ $t('Editor.SaveRestart') }}</v-btn>\n                    <v-btn icon tile @click=\"close\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text class=\"pa-0\">\n                    <overlay-scrollbars style=\"height: calc(var(--app-height) - 48px)\" :options=\"{  }\">\n                        <codemirror ref=\"editor\" v-model=\"sourcecode\" :name=\"filename\" v-bind:file-extension=\"fileExtension\"></codemirror>\n                    </overlay-scrollbars>\n                </v-card-text>\n            </panel>\n        </v-dialog>\n        <v-snackbar v-model=\"loaderBool\" :timeout=\"-1\" :value=\"true\" fixed right bottom dark>\n            <div>\n                {{ snackbarHeadline }}<br />\n                <strong>{{ filename }}</strong>\n            </div>\n            <template v-if=\"loaderProgress.total > 0\">\n                <span class=\"mr-1\">({{ formatFilesize(loaderProgress.loaded) }}/{{ formatFilesize(loaderProgress.total) }})</span>\n                {{ Math.round(100 * loaderProgress.loaded / loaderProgress.total) }} % @ {{ loaderProgress.speed }}/s<br />\n                <v-progress-linear class=\"mt-2\" :value=\"100 * loaderProgress.loaded / loaderProgress.total\"></v-progress-linear>\n            </template>\n            <template v-else>\n                <v-progress-linear class=\"mt-2\" indeterminate></v-progress-linear>\n            </template>\n            <template v-slot:action=\"{ attrs }\">\n                <v-btn\n                    color=\"red\"\n                    text\n                    v-bind=\"attrs\"\n                    @click=\"cancelDownload\"\n                    style=\"min-width: auto;\"\n                    tile\n                >\n                    <v-icon class=\"0\">mdi-close</v-icon>\n                </v-btn>\n            </template>\n        </v-snackbar>\n        <v-dialog v-model=\"dialogConfirmChange\" persistent :width=\"600\">\n            <panel card-class=\"editor-confirm-change-dialog\" icon=\"mdi-help-circle\" :title=\"$t('Editor.UnsavedChanges')\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogConfirmChange = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text class=\"pt-3\">\n                    <v-row>\n                        <v-col>\n                            <p class=\"body-1 mb-2\">{{ $t('Editor.UnsavedChangesMessage', {filename: filename}) }}</p>\n                            <p class=\"body-2\">{{ $t('Editor.UnsavedChangesSubMessage') }}</p>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn text @click=\"discardChanges\">\n                        {{ $t('Editor.DontSave') }}\n                    </v-btn>\n                    <v-btn text color=\"primary\" @click=\"save\">\n                        {{ $t('Editor.SaveClose') }}\n                    </v-btn>\n                    <template v-if=\"restartServiceName != null\">\n                        <v-btn text color=\"primary\" @click=\"save(restartServiceName)\">\n                            {{ $t('Editor.SaveRestart') }}\n                        </v-btn>\n                    </template>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {formatFilesize} from '@/plugins/helpers'\nimport Codemirror from '@/components/inputs/Codemirror.vue'\nimport Panel from '@/components/ui/Panel.vue'\n\n@Component({\n    components: {Panel, Codemirror}\n})\n\nexport default class TheEditor extends Mixins(BaseMixin) {\n    private dialogConfirmChange = false\n\n    formatFilesize = formatFilesize\n\n    refs!: {\n        editor: any\n    }\n\n    get changed() {\n        return this.$store.state.editor.changed ? '*' : ''\n    }\n\n    get show() {\n        return this.$store.state.editor.bool ?? false\n    }\n\n    get filepath(): string {\n        return this.$store.state.editor.filepath ?? ''\n    }\n\n    get filename(): string {\n        return this.$store.state.editor.filename ?? ''\n    }\n\n    get fileExtension() {\n        if (this.filename.lastIndexOf('.')) return this.filename.slice(this.filename.lastIndexOf('.') + 1)\n\n        return ''\n    }\n\n    get fileroot() {\n        return this.$store.state.editor.fileroot ?? 'gcodes'\n    }\n\n    get permissions(): string {\n        return this.$store.state.editor.permissions ?? 'r'\n    }\n\n    get isWriteable() {\n        return this.permissions.includes('w')\n    }\n\n    get sourcecode() {\n        return this.$store.state.editor.sourcecode ?? ''\n    }\n\n    set sourcecode(newVal) {\n        this.$store.dispatch('editor/updateSourcecode', newVal)\n    }\n\n    get loaderBool() {\n        return this.$store.state.editor.loaderBool ?? false\n    }\n\n    get loaderProgress() {\n        return this.$store.state.editor.loaderProgress ?? {}\n    }\n\n    get snackbarHeadline() {\n        let directionUppercase = this.$t('Files.Downloading')\n        if (this.loaderProgress.direction) {\n            directionUppercase = this.loaderProgress.direction?.charAt(0).toUpperCase() + this.loaderProgress.direction?.slice(1)\n        }\n\n        return this.$t('Editor.'+directionUppercase)\n    }\n\n    get restartServiceName() {\n        if (!this.isWriteable) return null\n        if (['printing', 'paused'].includes(this.printer_state)) return null\n\n        if (this.filename === 'moonraker.conf')\n            return 'moonraker'\n        else if (this.filename === 'webcam.conf')\n            return 'webcamd'\n        else if (this.filename.startsWith('webcam') && this.filename.endsWith('.txt'))\n            return 'webcamd'\n        else if (this.filename.startsWith('mooncord') && this.filename.endsWith('.json'))\n            return 'mooncord'\n        else if (this.filename.endsWith('.cfg'))\n            return 'klipper'\n\n        return null\n    }\n\n    cancelDownload() {\n        this.$store.dispatch('editor/cancelLoad')\n    }\n\n    escClose() {\n        if (this.$store.state.gui.editor.escToClose)\n            this.close()\n    }\n\n    close() {\n        if (this.$store.state.gui.editor.confirmUnsavedChanges)\n            this.promptUnsavedChanges()\n        else\n            this.$store.dispatch('editor/close')\n    }\n\n    discardChanges() {\n        this.dialogConfirmChange = false\n        this.$store.dispatch('editor/close')\n    }\n\n    promptUnsavedChanges() {\n        if (!this.$store.state.editor.changed || !this.isWriteable)\n            this.$store.dispatch('editor/close')\n        else\n            this.dialogConfirmChange = true\n    }\n\n    save(restartServiceName: string | null = null) {\n        this.dialogConfirmChange = false\n\n        this.$store.dispatch('editor/saveFile', {\n            content: this.sourcecode,\n            restartServiceName: restartServiceName\n        })\n    }\n}\n</script>\n"]}]}