{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/Machine/ConfigFilesPanel.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/Machine/ConfigFilesPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConfigFilesPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConfigFilesPanel.vue","sourceRoot":"src/components/panels/Machine","sourcesContent":["<style scoped>\n\n</style>\n\n<template>\n    <div>\n        <panel :title=\"$t('Machine.ConfigFilesPanel.ConfigFiles')\" card-class=\"machine-configfiles-panel\" icon=\"mdi-information\">\n            <v-card-text>\n                <v-row>\n                    <v-col class=\"col-12 col-lg pr-lg-0\">\n                        <v-select\n                            v-model=\"root\"\n                            :items=\"registeredDirectories\"\n                            label=\"Root\"\n                            outlined\n                            hide-details\n                            dense\n                            @change=\"changeRoot\"\n                            attach\n                        ></v-select>\n                    </v-col>\n                    <v-col class=\"col col-lg-auto pl-lg-0 text-right\">\n                        <input type=\"file\" ref=\"fileUpload\" style=\"display: none\" multiple @change=\"uploadFile\" />\n                        <v-btn\n                            v-for=\"button in filteredToolbarButtons\"\n                            v-bind:key=\"button.loadingName\"\n                            class=\"px-2 minwidth-0 ml-3\"\n                            @click=\"button.click\"\n                            :loading=\"button.loadingName !== null && loadings.includes(button.loadingName)\"\n                        >\n                            <v-tooltip top>\n                                <template v-slot:activator=\"{ on, attrs }\">\n                                    <v-icon v-bind=\"attrs\" v-on=\"on\">{{ button.icon }}</v-icon>\n                                </template>\n                                <span>{{ button.text }}</span>\n                            </v-tooltip>\n                        </v-btn>\n                        <v-menu offset-y left :title=\"$t('Machine.ConfigFilesPanel.SetupCurrentList')\" attach>\n                            <template v-slot:activator=\"{ on, attrs }\">\n                                <v-btn class=\"px-2 minwidth-0 ml-3\" v-bind=\"attrs\" v-on=\"on\"><v-icon>mdi-cog</v-icon></v-btn>\n                            </template>\n                            <v-list>\n                                <v-list-item class=\"minHeight36\">\n                                    <v-checkbox class=\"mt-0\" hide-details v-model=\"showHiddenFiles\" :label=\"$t('Machine.ConfigFilesPanel.HiddenFiles')\"></v-checkbox>\n                                </v-list-item>\n                                <v-list-item class=\"minHeight36\">\n                                    <v-checkbox class=\"mt-0\" hide-details v-model=\"hideBackupFiles\" :label=\"$t('Machine.ConfigFilesPanel.HideBackupFiles')\"></v-checkbox>\n                                </v-list-item>\n                            </v-list>\n                        </v-menu>\n                    </v-col>\n                </v-row>\n            </v-card-text>\n            <v-card-text>\n                <v-row>\n                    <v-col class=\"col-12 py-2 d-flex align-center\">\n                        <span><b>{{ $t('Machine.ConfigFilesPanel.CurrentPath') }}:</b> {{ this.absolutePath }}</span>\n                        <v-spacer></v-spacer>\n                        <template v-if=\"disk_usage !== null\">\n                            <v-tooltip top>\n                                <template v-slot:activator=\"{ on, attrs }\">\n                                    <span v-bind=\"attrs\" v-on=\"on\">\n                                        <b>{{ $t('Machine.ConfigFilesPanel.FreeDisk') }}:</b> {{ formatFilesize(disk_usage.free) }}\n                                    </span>\n                                </template>\n                                <span>\n                                    {{ $t('Machine.ConfigFilesPanel.Used') }}: {{ formatFilesize(disk_usage.used) }}<br />\n                                    {{ $t('Machine.ConfigFilesPanel.Free') }}: {{ formatFilesize(disk_usage.free) }}<br />\n                                    {{ $t('Machine.ConfigFilesPanel.Total') }}: {{ formatFilesize(disk_usage.total) }}\n                                </span>\n                            </v-tooltip>\n                        </template>\n                    </v-col>\n                </v-row>\n            </v-card-text>\n            <v-divider></v-divider>\n            <v-data-table\n                :items=\"files\"\n                class=\"files-table\"\n                :headers=\"headers\"\n                :options=\"options\"\n                :page.sync=\"currentPage\"\n                :custom-sort=\"sortFiles\"\n                :sort-by.sync=\"sortBy\"\n                :sort-desc.sync=\"sortDesc\"\n                :items-per-page.sync=\"countPerPage\"\n                :footer-props=\"{\n                    itemsPerPageText:  $t('Machine.ConfigFilesPanel.Files'),\n                    itemsPerPageAllText: $t('Machine.ConfigFilesPanel.AllFiles'),\n                    itemsPerPageOptions: [10,25,50,100,-1]\n                }\"\n                mobile-breakpoint=\"0\"\n                item-key=\"name\">\n\n                <template #no-data>\n                    <div class=\"text-center\">{{ $t('Machine.ConfigFilesPanel.Empty')  }}</div>\n                </template>\n\n                <template slot=\"body.prepend\" v-if=\"(currentPath !== '')\">\n                   <tr\n                        class=\"file-list-cursor\"\n                        @click=\"clickRowGoBack\"\n                        @dragover=\"dragOverFilelist($event, {isDirectory: true, filename: '..'})\"\n                        @dragleave=\"dragLeaveFilelist\"\n                        @drop.prevent.stop=\"dragDropFilelist($event, {isDirectory: true, filename: '..'})\"\n                   >\n                        <td class=\"pr-0 text-center\" style=\"width: 32px;\"><v-icon>mdi-folder-upload</v-icon></td>\n                        <td class=\" \" colspan=\"4\">..</td>\n                    </tr>\n                </template>\n\n                <template #item=\"{ index, item }\">\n                    <tr\n                        :key=\"`${index} ${item.filename}`\"\n                        v-longpress:600=\"(e) => showContextMenu(e, item)\"\n                        @contextmenu=\"showContextMenu($event, item)\"\n                        @click=\"clickRow(item)\"\n                        class=\"file-list-cursor user-select-none\"\n                        :data-name=\"item.filename\"\n                        draggable=\"true\"\n                        @drag=\"dragFile($event, item)\"\n                        @dragend=\"dragendFile($event)\"\n                        @dragover=\"dragOverFilelist($event, item)\" @dragleave=\"dragLeaveFilelist\" @drop.prevent.stop=\"dragDropFilelist($event, item)\"\n                    >\n                        <td class=\"pr-0 text-center\" style=\"width: 32px;\">\n                            <v-icon v-if=\"item.isDirectory\">mdi-folder</v-icon>\n                            <v-icon v-if=\"!item.isDirectory\">mdi-file</v-icon>\n                        </td>\n                        <td class=\" \">{{ item.filename }}</td>\n                        <td class=\"text-no-wrap text-right\">{{ item.isDirectory ? '--' : formatFilesize(item.size) }}</td>\n                        <td class=\"text-right\">{{ formatDate(item.modified) }}</td>\n                    </tr>\n                </template>\n            </v-data-table>\n        </panel>\n        <v-menu v-model=\"contextMenu.shown\" :position-x=\"contextMenu.x\" :position-y=\"contextMenu.y\" absolute offset-y>\n            <v-list>\n                <v-list-item @click=\"clickRow(contextMenu.item, true)\" v-if=\"!contextMenu.item.isDirectory\">\n                    <v-icon class=\"mr-1\">mdi-file-document-edit-outline</v-icon> {{ contextMenu.item.permissions.includes('w') ? $t('Machine.ConfigFilesPanel.EditFile') : $t('Machine.ConfigFilesPanel.ShowFile') }}\n                </v-list-item>\n                <v-list-item @click=\"downloadFile\" v-if=\"!contextMenu.item.isDirectory\">\n                    <v-icon class=\"mr-1\">mdi-cloud-download</v-icon> {{ $t('Machine.ConfigFilesPanel.Download') }}\n                </v-list-item>\n                <v-list-item @click=\"renameFile(contextMenu.item)\" v-if=\"!contextMenu.item.isDirectory && contextMenu.item.permissions.includes('w')\">\n                    <v-icon class=\"mr-1\">mdi-rename-box</v-icon> {{ $t('Machine.ConfigFilesPanel.Rename') }}\n                </v-list-item>\n                <v-list-item @click=\"renameDirectory(contextMenu.item)\" v-if=\"contextMenu.item.isDirectory && contextMenu.item.permissions.includes('w')\">\n                    <v-icon class=\"mr-1\">mdi-rename-box</v-icon> {{ $t('Machine.ConfigFilesPanel.Rename') }}\n                </v-list-item>\n                <v-list-item @click=\"removeFile\" v-if=\"!contextMenu.item.isDirectory && contextMenu.item.permissions.includes('w')\">\n                    <v-icon class=\"mr-1\">mdi-delete</v-icon> {{ $t('Machine.ConfigFilesPanel.Delete') }}\n                </v-list-item>\n                <v-list-item @click=\"deleteDirectory(contextMenu.item)\" v-if=\"contextMenu.item.isDirectory && contextMenu.item.permissions.includes('w')\">\n                    <v-icon class=\"mr-1\">mdi-delete</v-icon> {{ $t('Machine.ConfigFilesPanel.Delete') }}\n                </v-list-item>\n            </v-list>\n        </v-menu>\n        <v-dialog v-model=\"dialogImage.show\" hide-overlay fullscreen @keydown.esc=\"dialogImage.show = false; dialogImage.item.url = null; dialogImage.item.svg = null;\" class=\"fill-height\">\n            <panel :title=\"dialogImage.item.name\" card-class=\"maschine-configfiles-imageviewer-dialog\" style=\"position: relative;\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogImage.show = false; dialogImage.item.url = null; dialogImage.item.svg = null;\">\n                        <v-icon>mdi-close-thick</v-icon>\n                    </v-btn>\n                </template>\n                <div class=\"d-flex justify-center\" style=\"max-height: calc(var(--app-height) - 64px); overflow: auto;\">\n                    <img v-if=\"dialogImage.item.url\" :src=\"dialogImage.item.url\" style=\"max-height: 100%; width: auto;\" alt=\"image\" />\n                    <div v-else-if=\"dialogImage.item.svg\" class=\"fill-width\" v-html=\"dialogImage.item.svg\"></div>\n                </div>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogCreateFile.show\" max-width=\"400\">\n            <panel :title=\"$t('Machine.ConfigFilesPanel.CreateFile')\" card-class=\"maschine-configfiles-create-file-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogCreateFile.show = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-text-field\n                        :label=\"$t('Machine.ConfigFilesPanel.Name')\"\n                        v-model=\"dialogCreateFile.name\"\n                        ref=\"inputDialogCreateFileName\"\n                        @keyup.enter=\"createFileAction\"\n                        required\n                    ></v-text-field>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"\" text @click=\"dialogCreateFile.show = false\">{{ $t('Machine.ConfigFilesPanel.Cancel') }}</v-btn>\n                    <v-btn color=\"primary\" text @click=\"createFileAction\">{{ $t('Machine.ConfigFilesPanel.Create') }}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogRenameFile.show\" max-width=\"400\">\n            <panel :title=\"$t('Machine.ConfigFilesPanel.RenameFile')\" card-class=\"maschine-configfiles-rename-file-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogRenameFile.show = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-text-field\n                        :label=\"$t('Machine.ConfigFilesPanel.Name')\"\n                        v-model=\"dialogRenameFile.newName\"\n                        ref=\"inputDialogRenameFileName\"\n                        @keyup.enter=\"renameFileAction\"\n                        required\n                    ></v-text-field>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"\" text @click=\"dialogRenameFile.show = false\">{{ $t('Machine.ConfigFilesPanel.Cancel') }}</v-btn>\n                    <v-btn color=\"primary\" text @click=\"renameFileAction\">{{ $t('Machine.ConfigFilesPanel.Rename') }}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogCreateDirectory.show\" max-width=\"400\">\n            <panel :title=\"$t('Machine.ConfigFilesPanel.CreateDirectory')\" card-class=\"maschine-configfiles-create-directory-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogCreateDirectory.show = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-text-field\n                        :label=\"$t('Machine.ConfigFilesPanel.Name')\"\n                        v-model=\"dialogCreateDirectory.name\"\n                        ref=\"inputDialogCreateDirectoryName\"\n                        @keyup.enter=\"createDirectoryAction\"\n                        required\n                    ></v-text-field>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"\" text @click=\"dialogCreateDirectory.show = false\">{{ $t('Machine.ConfigFilesPanel.Cancel') }}</v-btn>\n                    <v-btn color=\"primary\" text @click=\"createDirectoryAction\">{{ $t('Machine.ConfigFilesPanel.Create') }}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogRenameDirectory.show\" max-width=\"400\">\n            <panel :title=\"$t('Machine.ConfigFilesPanel.RenameDirectory')\" card-class=\"maschine-configfiles-rename-directory-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogRenameDirectory.show = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <v-text-field\n                        :label=\"$t('Machine.ConfigFilesPanel.Name')\"\n                        v-model=\"dialogRenameDirectory.newName\"\n                        ref=\"inputDialogRenameDirectoryName\"\n                        @keyup.enter=\"renameDirectoryAction\"\n                        required\n                    ></v-text-field>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"\" text @click=\"dialogRenameDirectory.show = false\">{{ $t('Machine.ConfigFilesPanel.Cancel') }}</v-btn>\n                    <v-btn color=\"primary\" text @click=\"renameDirectoryAction\">{{ $t('Machine.ConfigFilesPanel.Rename') }}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n        <v-dialog v-model=\"dialogDeleteDirectory.show\" max-width=\"400\">\n            <panel :title=\"$t('Machine.ConfigFilesPanel.DeleteDirectory')\" card-class=\"maschine-configfiles-delete-directory-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"dialogDeleteDirectory.show = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-text>\n                    <p class=\"mb-0\">{{ $t('Machine.ConfigFilesPanel.DeleteDirectoryQuestion', { name: dialogDeleteDirectory.item.filename } )}}</p>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"\" text @click=\"dialogDeleteDirectory.show = false\">{{ $t('Machine.ConfigFilesPanel.Cancel') }}</v-btn>\n                    <v-btn color=\"error\" text @click=\"deleteDirectoryAction\">{{ $t('Machine.ConfigFilesPanel.Delete') }}</v-btn>\n                </v-card-actions>\n            </panel>\n        </v-dialog>\n        <v-snackbar v-model=\"uploadSnackbar.status\" :timeout=\"-1\" :value=\"true\" fixed right bottom dark>\n            <span v-if=\"uploadSnackbar.max > 1\" class=\"mr-1\">({{ uploadSnackbar.number }}/{{ uploadSnackbar.max }})</span><strong>{{ $t('Machine.ConfigFilesPanel.Uploading') }} {{ uploadSnackbar.filename }}</strong><br />\n            {{ Math.round(uploadSnackbar.percent) }} % @ {{ formatFilesize(Math.round(uploadSnackbar.speed)) }}/s<br />\n            <v-progress-linear class=\"mt-2\" :value=\"uploadSnackbar.percent\"></v-progress-linear>\n            <template v-slot:action=\"{ attrs }\">\n                <v-btn\n                    color=\"red\"\n                    text\n                    v-bind=\"attrs\"\n                    @click=\"cancelUpload\"\n                    style=\"min-width: auto;\"\n                >\n                    <v-icon class=\"0\">mdi-close</v-icon>\n                </v-btn>\n            </template>\n        </v-snackbar>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport {formatDate, formatFilesize, sortFiles} from '@/plugins/helpers'\nimport {FileStateFile} from '@/store/files/types'\nimport axios from 'axios'\nimport Panel from '@/components/ui/Panel.vue'\nimport {hiddenRootDirectories} from '@/store/variables'\n\ninterface contextMenu {\n    shown: boolean\n    isDirectory: boolean\n    touchTimer: number | null\n    x: number\n    y: number\n    item: FileStateFile\n}\n\n\ninterface dialogImageObject {\n    show: boolean\n    item: {\n        name: string | null,\n        url: string | null,\n        svg: string | null\n    }\n}\n\ninterface dialogRenameObject {\n    show: boolean\n    newName: string\n    item: FileStateFile\n}\n\ninterface dialogDeleteObject {\n    show: boolean\n    item: FileStateFile\n}\n\ninterface uploadSnackbar {\n    status: boolean\n    filename: string\n    percent: number\n    speed: number\n    total: number\n    number: number\n    max: number\n    cancelTokenSource: any\n    lastProgress: {\n        time: number\n        loaded: number\n    }\n}\n\ninterface draggingFile {\n    status: boolean\n    item: FileStateFile\n}\n\n@Component({\n    components: {Panel}\n})\nexport default class ConfigFilesPanel extends Mixins(BaseMixin) {\n    sortFiles = sortFiles\n    formatFilesize = formatFilesize\n    formatDate = formatDate\n\n    $refs!: {\n        fileUpload: HTMLInputElement,\n        inputDialogCreateFileName: HTMLInputElement,\n        inputDialogRenameFileName: HTMLInputElement,\n        inputDialogCreateDirectoryName: HTMLInputElement,\n        inputDialogRenameDirectoryName: HTMLInputElement,\n    }\n\n    private selected = []\n    private options = { }\n    private currentPage = 1\n    private contextMenu: contextMenu = {\n        shown: false,\n        isDirectory: false,\n        touchTimer: null,\n        x: 0,\n        y: 0,\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n    private dialogImage: dialogImageObject = {\n        show: false,\n        item: {\n            name: null,\n            url: null,\n            svg: null\n        }\n    }\n    private dialogCreateFile = {\n        show: false,\n        name: '',\n    }\n    private dialogRenameFile: dialogRenameObject = {\n        show: false,\n        newName: '',\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n    private dialogCreateDirectory = {\n        show: false,\n        name: '',\n    }\n    private dialogRenameDirectory: dialogRenameObject = {\n        show: false,\n        newName: '',\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n    private dialogDeleteDirectory: dialogDeleteObject = {\n        show: false,\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n    private uploadSnackbar: uploadSnackbar = {\n        status: false,\n        filename: '',\n        percent: 0,\n        speed: 0,\n        total: 0,\n        number: 0,\n        max: 0,\n        cancelTokenSource: {},\n        lastProgress: {\n            time: 0,\n            loaded: 0\n        }\n    }\n    private draggingFile: draggingFile = {\n        status: false,\n        item: {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    get toolbarButtons() {\n        return [\n            {\n                text: this.$t('Machine.ConfigFilesPanel.UploadFile'),\n                color: 'grey darken-3',\n                icon: 'mdi-file-upload',\n                loadingName: null,\n                onlyWriteable: true,\n                click: this.uploadFileButton\n            }, {\n                text: this.$t('Machine.ConfigFilesPanel.CreateFile'),\n                color: 'grey darken-3',\n                icon: 'mdi-file-plus',\n                loadingName: null,\n                onlyWriteable: true,\n                click: this.createFile\n            }, {\n                text: this.$t('Machine.ConfigFilesPanel.CreateDirectory'),\n                color: 'grey darken-3',\n                icon: 'mdi-folder-plus',\n                loadingName: null,\n                onlyWriteable: true,\n                click: this.createDirecotry\n            }, {\n                text: this.$t('Machine.ConfigFilesPanel.RefreshDirectory'),\n                color: 'grey darken-3',\n                icon: 'mdi-refresh',\n                loadingName: null,\n                onlyWriteable: false,\n                click: this.refreshFileList\n            },\n        ]\n    }\n\n    get filteredToolbarButtons() {\n        return this.toolbarButtons.filter((button) => {\n            return (this.directoryPermissions.includes('w') && button.onlyWriteable) || !button.onlyWriteable\n        })\n    }\n\n    get absolutePath() {\n        let path = '/'+this.root\n        if (this.currentPath) path += this.currentPath\n\n        return path\n    }\n\n    get directory() {\n        return this.$store.getters['files/getDirectory'](this.absolutePath)\n    }\n\n    get disk_usage() {\n        return this.directory?.disk_usage ?? { used: 0, free: 0, total: 0}\n    }\n\n    get directoryPermissions() {\n        return this.directory?.permissions ?? 'r'\n    }\n\n    get files() {\n        let files = [...this.directory?.childrens ?? []]\n\n        if (!this.showHiddenFiles) {\n            files = files.filter(file => file.filename.substr(0, 1) !== '.')\n        }\n\n        if (this.hideBackupFiles) {\n            const backupFileMatcher = /.*\\/?printer-\\d{8}_\\d{6}\\.cfg$/\n            files = files.filter(file => !file.filename.match(backupFileMatcher))\n        }\n\n        return files\n    }\n\n    get headers() {\n        return [\n            { text: '', value: '', },\n            { text: this.$t('Machine.ConfigFilesPanel.Name'), value: 'filename', },\n            { text: this.$t('Machine.ConfigFilesPanel.Filesize'), value: 'size', align: 'right', },\n            { text: this.$t('Machine.ConfigFilesPanel.LastModified'), value: 'modified', align: 'right', },\n        ]\n    }\n\n    get countPerPage() {\n        return this.$store.state.gui.view.configfiles.countPerPage\n    }\n\n    set countPerPage(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.configfiles.countPerPage', value: newVal })\n    }\n\n    get showHiddenFiles() {\n        return this.$store.state.gui.view.configfiles.showHiddenFiles\n    }\n\n    set showHiddenFiles(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.configfiles.showHiddenFiles', value: newVal })\n    }\n\n    get hideBackupFiles() {\n        return this.$store.state.gui.view.configfiles.hideBackupFiles\n    }\n\n    set hideBackupFiles(newVal) {\n        this.$store.dispatch('gui/saveSetting', { name: 'view.configfiles.hideBackupFiles', value: newVal })\n    }\n\n    get sortBy() {\n        return this.$store.state.gui.view.configfiles.sortBy\n    }\n\n    set sortBy(newVal) {\n        if (newVal === undefined) newVal = 'filename'\n\n        this.$store.dispatch('gui/saveSetting', { name: 'view.configfiles.sortBy', value: newVal })\n    }\n\n    get sortDesc() {\n        return this.$store.state.gui.view.configfiles.sortDesc\n    }\n\n    set sortDesc(newVal) {\n        if (newVal === undefined) newVal = false\n\n        this.$store.dispatch('gui/saveSetting', { name: 'view.configfiles.sortDesc', value: newVal })\n    }\n\n    get registeredDirectories() {\n        return this.$store.state.server.registered_directories.filter((dir: string) => !hiddenRootDirectories.includes(dir)).sort()\n    }\n\n    get root() {\n        return this.$store.state.gui.view.configfiles.rootPath\n    }\n\n    set root(newVal) {\n        this.$store.dispatch('gui/saveSettingWithoutUpload', { name: 'view.configfiles.rootPath', value: newVal })\n    }\n\n    get currentPath() {\n        return this.$store.state.gui.view.configfiles.currentPath\n    }\n\n    set currentPath(newVal) {\n        this.$store.dispatch('gui/saveSettingWithoutUpload', { name: 'view.configfiles.currentPath', value: newVal })\n    }\n\n    refreshFileList() {\n        this.$socket.emit('server.files.get_directory', { path: this.absolutePath.substring(1) }, { action: 'files/getDirectory' })\n    }\n\n    changeRoot() {\n        this.currentPath = ''\n    }\n\n    clickRow(item: FileStateFile, force = false) {\n        if (!this.contextMenu.shown || force) {\n            if (force) this.contextMenu.shown = false\n\n            if (!item.isDirectory) {\n                if (['png', 'jpeg', 'jpg', 'gif', 'bmp', 'tif', 'svg'].includes(item.filename.split('.').pop()?.toLowerCase() ?? '')) {\n                    const url = `${this.apiUrl}/server/files${this.absolutePath}/${item.filename}?t=${Date.now()}`\n                    this.dialogImage.item.name = item.filename\n                    if (['svg'].includes(item.filename.split('.').pop()?.toLowerCase() ?? '')) {\n                        fetch(url)\n                            .then(res => res.text())\n                            .then(svg => {\n                                this.dialogImage.show = true\n                                this.dialogImage.item.svg = svg\n                            })\n                    } else {\n                        this.dialogImage.show = true\n                        this.dialogImage.item.url = url\n                    }\n                } else {\n                    this.$store.dispatch('editor/openFile', {\n                        root: this.root,\n                        path: this.currentPath,\n                        filename: item.filename,\n                        size: item.size,\n                        permissions: item.permissions\n                    })\n                }\n            } else {\n                this.currentPath += '/' + item.filename\n                this.currentPage = 1\n            }\n        }\n    }\n\n    clickRowGoBack() {\n        this.currentPath = this.currentPath.substr(0, this.currentPath.lastIndexOf('/'))\n    }\n\n    showContextMenu (e: any, item: FileStateFile) {\n        if (!this.contextMenu.shown) {\n            e?.preventDefault()\n            this.contextMenu.shown = true\n            this.contextMenu.x = e?.clientX || e?.pageX || window.screenX / 2\n            this.contextMenu.y = e?.clientY || e?.pageY || window.screenY / 2\n            this.contextMenu.item = item\n\n            this.$nextTick(() => {\n                this.contextMenu.shown = true\n            })\n        }\n    }\n\n    downloadFile() {\n        const filename = (this.absolutePath+'/'+this.contextMenu.item.filename)\n        const href = `${this.apiUrl}/server/files${encodeURI(filename)}`\n        window.open(href)\n    }\n\n    createDirecotry() {\n        this.dialogCreateDirectory.name = ''\n        this.dialogCreateDirectory.show = true\n\n        setTimeout(() => {\n            this.$refs.inputDialogCreateDirectoryName?.focus()\n        }, 200)\n    }\n\n    createDirectoryAction() {\n        this.dialogCreateDirectory.show = false\n\n        this.$socket.emit('server.files.post_directory', {\n            path: this.absolutePath.substring(1)+'/'+this.dialogCreateDirectory.name\n        }, { action: 'files/getCreateDir' })\n    }\n\n    renameDirectory(item: FileStateFile) {\n        this.dialogRenameDirectory.item = item\n        this.dialogRenameDirectory.newName = item.filename\n        this.dialogRenameDirectory.show = true\n\n        setTimeout(() => {\n            this.$refs.inputDialogRenameDirectoryName?.focus()\n        }, 200)\n    }\n\n    renameDirectoryAction() {\n        this.dialogRenameDirectory.show = false\n        this.$socket.emit('server.files.move', {\n            source: (this.absolutePath+'/'+this.dialogRenameDirectory.item.filename).slice(1),\n            dest: (this.absolutePath+'/'+this.dialogRenameDirectory.newName).slice(1)\n        }, { action: 'files/getMove' })\n    }\n\n    deleteDirectory(item: FileStateFile) {\n        this.dialogDeleteDirectory.item = item\n        this.dialogDeleteDirectory.show = true\n    }\n\n    deleteDirectoryAction() {\n        this.dialogDeleteDirectory.show = false\n        this.$socket.emit('server.files.delete_directory', { path: this.absolutePath+'/'+this.dialogDeleteDirectory.item.filename, force: true }, { action: 'files/getDeleteDir' })\n    }\n\n    createFile() {\n        this.dialogCreateFile.name = ''\n        this.dialogCreateFile.show = true\n\n        setTimeout(() => {\n            this.$refs.inputDialogCreateFileName?.focus()\n        }, 200)\n    }\n\n    createFileAction() {\n        const file = new File([''], this.dialogCreateFile.name)\n\n        let formData = new FormData()\n        formData.append('file', file)\n        formData.append('root', this.root)\n        if(this.currentPath.length) formData.append('path', this.currentPath.slice(1))\n\n        axios.post(this.apiUrl + '/server/files/upload',\n            formData, {\n                headers: { 'Content-Type': 'multipart/form-data' }\n            }\n        ).then(() => {\n            this.$toast.success(this.$t('Files.SuccessfullyCreated', { filename: this.dialogCreateFile.name }).toString())\n            this.dialogCreateFile.show = false\n            this.dialogCreateFile.name = ''\n        }).catch(() => {\n            window.console.error('Error create file: '+this.dialogCreateFile.name)\n        })\n    }\n\n    renameFile(item: FileStateFile) {\n        this.dialogRenameFile.item = item\n        this.dialogRenameFile.newName = item.filename\n        this.dialogRenameFile.show = true\n\n        setTimeout(() => {\n            this.$refs.inputDialogRenameFileName?.focus()\n        }, 200)\n    }\n\n    renameFileAction() {\n        this.dialogRenameFile.show = false\n        this.$socket.emit('server.files.move', {\n            source: (this.absolutePath+'/'+this.dialogRenameFile.item.filename).slice(1),\n            dest: (this.absolutePath+'/'+this.dialogRenameFile.newName).slice(1),\n        }, { action: 'files/getMove' })\n    }\n\n    removeFile() {\n        this.$socket.emit('server.files.delete_file', { path: this.absolutePath+'/'+this.contextMenu.item.filename }, { action: 'files/getDeleteFile' })\n    }\n\n    uploadFileButton() {\n        this.$refs.fileUpload.click()\n    }\n\n    async uploadFile() {\n        if (this.$refs.fileUpload.files?.length) {\n            this.$store.dispatch('socket/addLoading', { name: 'configFileUpload' })\n            let successFiles = []\n            this.uploadSnackbar.number = 0\n            this.uploadSnackbar.max = this.$refs.fileUpload.files.length\n            for (const file of this.$refs.fileUpload.files) {\n                this.uploadSnackbar.number++\n                const result = await this.doUploadFile(file)\n                successFiles.push(result)\n            }\n\n            this.$store.dispatch('socket/removeLoading', { name: 'configFileUpload' })\n            for(const file of successFiles) {\n                this.$toast.success('Upload of '+file+' successful!')\n            }\n\n            this.$refs.fileUpload.value = ''\n        }\n    }\n\n    doUploadFile(file: File) {\n        let toast = this.$toast\n        let formData = new FormData()\n        let filename = file.name.replace(' ', '_')\n\n        this.uploadSnackbar.filename = filename\n        this.uploadSnackbar.status = true\n        this.uploadSnackbar.percent = 0\n        this.uploadSnackbar.speed = 0\n        this.uploadSnackbar.lastProgress.loaded = 0\n        this.uploadSnackbar.lastProgress.time = 0\n\n        formData.append('root', this.root)\n        formData.append('file', file, this.currentPath+'/'+filename)\n        this.$store.dispatch('socket/addLoading', { name: 'configFileUpload' })\n\n        return new Promise(resolve => {\n            this.uploadSnackbar.cancelTokenSource = axios.CancelToken.source()\n            axios.post(this.apiUrl + '/server/files/upload',\n                formData, {\n                    headers: { 'Content-Type': 'multipart/form-data' },\n                    cancelToken: this.uploadSnackbar.cancelTokenSource.token,\n                    onUploadProgress: (progressEvent) => {\n                        this.uploadSnackbar.percent = (progressEvent.loaded * 100) / progressEvent.total\n                        if (this.uploadSnackbar.lastProgress.time) {\n                            const time = progressEvent.timeStamp - this.uploadSnackbar.lastProgress.time\n                            const data = progressEvent.loaded - this.uploadSnackbar.lastProgress.loaded\n\n                            if (time) this.uploadSnackbar.speed = data / (time / 1000)\n                        }\n\n                        this.uploadSnackbar.lastProgress.time = progressEvent.timeStamp\n                        this.uploadSnackbar.lastProgress.loaded = progressEvent.loaded\n                        this.uploadSnackbar.total = progressEvent.total\n                    }\n                }\n            ).then((result) => {\n                const filename = result.data.item.path.substr(result.data.item.path.indexOf('/')+1)\n                this.uploadSnackbar.status = false\n                resolve(filename)\n            }).catch(() => {\n                this.uploadSnackbar.status = false\n                this.$store.dispatch('socket/removeLoading', { name: 'configFileUpload' })\n                toast.error('Cannot upload the file!')\n            })\n        })\n    }\n\n    cancelUpload() {\n        this.uploadSnackbar.cancelTokenSource.cancel()\n        this.uploadSnackbar.status = false\n    }\n\n    dragFile(e: Event, item: FileStateFile) {\n        e.preventDefault()\n        this.draggingFile.status = true\n        this.draggingFile.item = item\n    }\n\n    dragendFile(e: Event) {\n        e.preventDefault()\n        this.draggingFile.status = false\n        this.draggingFile.item = {\n            isDirectory: false,\n            filename: '',\n            permissions: '',\n            modified: new Date()\n        }\n    }\n\n    dragOverFilelist(e: any, row: any) {\n        if (this.draggingFile.status) {\n            e.preventDefault()\n            //e.stopPropagation()\n\n            if (row.isDirectory) e.target.parentElement.style.backgroundColor = '#43A04720'\n        }\n    }\n\n    dragLeaveFilelist(e: any) {\n        if (this.draggingFile.status) {\n            e.preventDefault()\n            e.stopPropagation()\n\n            e.target.parentElement.style.backgroundColor = 'transparent'\n        }\n    }\n\n    async dragDropFilelist(e: any, row: any) {\n        if (this.draggingFile.status) {\n            e.preventDefault()\n            e.target.parentElement.style.backgroundColor = 'transparent'\n\n            let dest = ''\n            if (row.filename === '..') {\n                dest = this.absolutePath.slice(1, this.absolutePath.lastIndexOf('/')+1)+this.draggingFile.item.filename\n            } else dest = this.absolutePath+'/'+row.filename+'/'+this.draggingFile.item.filename\n\n            this.$socket.emit('server.files.move', {\n                source: this.absolutePath.slice(1)+'/'+this.draggingFile.item.filename,\n                dest: dest\n            }, { action: 'files/getMove' })\n        }\n    }\n}\n</script>\n"]}]}