{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/CommandHelpModal.vue?vue&type=style&index=0&id=77c0dede&lang=scss&scoped=true&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/CommandHelpModal.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1645990066541},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645990070825},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/postcss-loader/src/index.js","mtime":1645990067674},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/sass-loader/dist/cjs.js","mtime":1645990064431},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb21tYW5kLWhlbHAtY29udGVudCB7CiAgICBvdmVyZmxvdy14OiBoaWRkZW47CgogICAgJi5oZWlnaHQzMDAgewogICAgICAgIGhlaWdodDogMzAwcHg7CiAgICB9Cn0K"},{"version":3,"sources":["CommandHelpModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;;AAEA;AACA;AACA;AACA","file":"CommandHelpModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-dialog\n        transition=\"dialog-bottom-transition\"\n        max-width=\"600\"\n        scrollable\n        v-model=\"isOpen\"\n        :fullscreen=\"isMobile\"\n    >\n        <template #activator=\"{ on, attrs }\">\n            <template v-if=\"inToolbar\">\n                <v-btn icon tile v-bind=\"attrs\" v-on=\"on\"><v-icon small>mdi-help</v-icon></v-btn>\n            </template>\n            <template v-else>\n                <v-btn\n                    class=\"gcode-command-btn px-2 minwidth-0\"\n                    color=\"lightgray\"\n                    :small=\"isMini\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\">\n                    <v-icon>mdi-help</v-icon>\n                </v-btn>\n            </template>\n        </template>\n        <template #default>\n            <panel :title=\"$t('Console.CommandList')\" icon=\"mdi-help\" card-class=\"command-help-dialog\" :margin-bottom=\"false\">\n                <template v-slot:buttons>\n                    <v-btn icon tile @click=\"isOpen = false\"><v-icon>mdi-close-thick</v-icon></v-btn>\n                </template>\n                <v-card-title>\n                    <v-row>\n                        <v-col>\n                            <v-text-field\n                                v-model=\"cmdListSearch\"\n                                label=\"Search\"\n                                outlined\n                                hide-details\n                                clearable\n                                dense\n                            ></v-text-field>\n                        </v-col>\n                    </v-row>\n                </v-card-title>\n                <v-divider></v-divider>\n                <overlay-scrollbars :class=\"'command-help-content '+(isMobile ? '' : 'height300')\">\n                    <v-card-text class=\"pt-0\">\n                        <v-row>\n                            <v-col>\n                                <v-list>\n                                    <v-list-item\n                                        v-for=\"cmd of helplistFiltered\"\n                                        :key=\"cmd.commandLow\"\n                                        class=\"px-0\"\n                                        two-line>\n                                        <v-list-item-content class=\"px-0\">\n                                            <v-list-item-title class=\"blue--text font-weight-bold cursor-pointer\" @click=\"$emit('onCommand', cmd.command); isOpen = false\">{{ cmd.command }}</v-list-item-title>\n                                            <v-list-item-subtitle class=\"text-wrap\">{{ cmd.description }}</v-list-item-subtitle>\n                                        </v-list-item-content>\n                                    </v-list-item>\n                                </v-list>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                </overlay-scrollbars>\n            </panel>\n        </template>\n    </v-dialog>\n</template>\n\n<script lang=\"ts\">\nimport BaseMixin from './mixins/base'\nimport {CommandHelp} from '@/store/printer/types'\nimport {Mixins, Prop, Watch} from 'vue-property-decorator'\nimport Component from 'vue-class-component'\nimport Panel from '@/components/ui/Panel.vue'\n\n@Component({\n    components: {Panel}\n})\n\nexport default class CommandHelpModal extends Mixins(BaseMixin) {\n    @Prop({ required: false, default: false }) isMini!: boolean;\n    @Prop({ required: false, default: false }) inToolbar!: boolean;\n\n    cmdListSearch = '';\n    isOpen = false;\n\n    get helplist(): CommandHelp[] {\n        return this.$store.state.printer.helplist ?? []\n    }\n\n    get helplistFiltered(): CommandHelp[] {\n        return this.helplist\n            .filter(cmd => typeof(cmd.description) === 'string' && (!this.cmdListSearch || cmd.commandLow.includes(this.cmdListSearch.toLowerCase())))\n            .sort((a, b) => a.commandLow.localeCompare(b.commandLow))\n    }\n\n    @Watch('isOpen')\n    onIsOpen(val: boolean): void {\n        if (!val) {\n            this.cmdListSearch = ''\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .command-help-content {\n        overflow-x: hidden;\n\n        &.height300 {\n            height: 300px;\n        }\n    }\n</style>\n"]}]}