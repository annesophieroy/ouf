{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsConsoleTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsConsoleTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Q29tcG9uZW50LCBNaXhpbnMsIFdhdGNofSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJy4uL21peGlucy9iYXNlJwppbXBvcnQgU2V0dGluZ3NSb3cgZnJvbSAnQC9jb21wb25lbnRzL3NldHRpbmdzL1NldHRpbmdzUm93LnZ1ZScKaW1wb3J0IHtEZWJvdW5jZX0gZnJvbSAndnVlLWRlYm91bmNlLWRlY29yYXRvcicKCmludGVyZmFjZSBjb25zb2xlRm9ybSB7CiAgICBib29sOiBib29sZWFuCiAgICBpZDogc3RyaW5nIHwgbnVsbAogICAgdmFsaWQ6IGJvb2xlYW4KICAgIG5hbWU6IHN0cmluZwogICAgcmVnZXg6IHN0cmluZwp9CgpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHtTZXR0aW5nc1Jvd30KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NDb25zb2xlVGFiIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewogICAgcHJpdmF0ZSBmb3JtOiBjb25zb2xlRm9ybSA9IHsKICAgICAgICBib29sOiBmYWxzZSwKICAgICAgICB2YWxpZDogZmFsc2UsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcmVnZXg6ICcnLAogICAgICAgIGlkOiBudWxsLAogICAgfQoKICAgIHByaXZhdGUgcnVsZXMgPSB7CiAgICAgICAgcmVxdWlyZWQ6ICh2YWx1ZTogc3RyaW5nKSA9PiB2YWx1ZSAhPT0gJycgfHwgJ3JlcXVpcmVkJywKICAgICAgICB1bmlxdWU6ICh2YWx1ZTogc3RyaW5nKSA9PiAhdGhpcy5leGlzdHNQcmVzZXROYW1lKHZhbHVlKSB8fCAnTmFtZSBhbHJlYWR5IGV4aXN0cycsCiAgICB9CgogICAgcHJpdmF0ZSBjb25zb2xlSGVpZ2h0VG1wID0gMzAwCgogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmNvbnNvbGVIZWlnaHRUbXAgPSB0aGlzLmNvbnNvbGVIZWlnaHQKICAgIH0KCiAgICBnZXQgY29uc29sZUZpbHRlcnMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2d1aS9jb25zb2xlL2dldENvbnNvbGVmaWx0ZXJzJ10gPz8gW10KICAgIH0KCiAgICBnZXQgYXZhaWxhYmxlRGlyZWN0aW9ucygpIHsKICAgICAgICByZXR1cm4gWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5Db25zb2xlVGFiLkRpcmVjdGlvblRhYmxlJyksCiAgICAgICAgICAgICAgICB2YWx1ZTogJ3RhYmxlJwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5Db25zb2xlVGFiLkRpcmVjdGlvblNoZWxsJyksCiAgICAgICAgICAgICAgICB2YWx1ZTogJ3NoZWxsJwogICAgICAgICAgICB9CiAgICAgICAgXQogICAgfQoKICAgIGdldCBjb25zb2xlRGlyZWN0aW9uKCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5ndWkuY29uc29sZS5kaXJlY3Rpb24gPz8gJ3RhYmxlJwogICAgfQoKICAgIHNldCBjb25zb2xlRGlyZWN0aW9uKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvY29uc29sZS9zYXZlU2V0dGluZycsIHsgbmFtZTogJ2RpcmVjdGlvbicsIHZhbHVlOiBuZXdWYWwgfSkKICAgIH0KCiAgICBnZXQgYXZhaWxhYmxlRW50cnlTdHlsZXMoKSB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuQ29uc29sZVRhYi5FbnRyeVN0eWxlRGVmYXVsdCcpLAogICAgICAgICAgICAgICAgdmFsdWU6ICdkZWZhdWx0JwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5Db25zb2xlVGFiLkVudHJ5U3R5bGVDb21wYWN0JyksCiAgICAgICAgICAgICAgICB2YWx1ZTogJ2NvbXBhY3QnCiAgICAgICAgICAgIH0KICAgICAgICBdCiAgICB9CgogICAgZ2V0IGVudHJ5U3R5bGUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5jb25zb2xlLmVudHJ5U3R5bGUgPz8gJ2RlZmF1bHQnCiAgICB9CgogICAgc2V0IGVudHJ5U3R5bGUobmV3VmFsKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9jb25zb2xlL3NhdmVTZXR0aW5nJywgeyBuYW1lOiAnZW50cnlTdHlsZScsIHZhbHVlOiBuZXdWYWwgfSkKICAgIH0KCiAgICBnZXQgY29uc29sZUhlaWdodCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmNvbnNvbGUuaGVpZ2h0ID8/IDMwMAogICAgfQoKICAgIHNldCBjb25zb2xlSGVpZ2h0KG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvY29uc29sZS9zYXZlU2V0dGluZycsIHsgbmFtZTogJ2hlaWdodCcsIHZhbHVlOiBuZXdWYWwgfSkKICAgIH0KCiAgICBAV2F0Y2goJ2NvbnNvbGVIZWlnaHQnKQogICAgY29uc29sZUhlaWdodENoYW5nZWQobmV3VmFsOiBudW1iZXIpIHsKICAgICAgICB0aGlzLmNvbnNvbGVIZWlnaHRUbXAgPSBuZXdWYWwKICAgIH0KCiAgICBARGVib3VuY2UoNTAwKQogICAgdXBkYXRlQ29uc29sZUhlaWdodChuZXdWYWw6IG51bWJlcikgewogICAgICAgIHRoaXMuY29uc29sZUhlaWdodCA9IG5ld1ZhbAogICAgfQoKICAgIGdldCBoaWRlV2FpdFRlbXBlcmF0dXJlcygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLmNvbnNvbGUuaGlkZVdhaXRUZW1wZXJhdHVyZXMKICAgIH0KCiAgICBzZXQgaGlkZVdhaXRUZW1wZXJhdHVyZXMobmV3VmFsKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9jb25zb2xlL3NhdmVTZXR0aW5nJywgeyBuYW1lOiAnaGlkZVdhaXRUZW1wZXJhdHVyZXMnLCB2YWx1ZTogbmV3VmFsIH0pCiAgICB9CgogICAgZ2V0IGhpZGVUaW1lbGFwc2UoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5jb25zb2xlLmhpZGVUbENvbW1hbmRzCiAgICB9CgogICAgc2V0IGhpZGVUaW1lbGFwc2UobmV3VmFsKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS9jb25zb2xlL3NhdmVTZXR0aW5nJywgeyBuYW1lOiAnaGlkZVRsQ29tbWFuZHMnLCB2YWx1ZTogbmV3VmFsIH0pCiAgICB9CgogICAgZXhpc3RzUHJlc2V0TmFtZShuYW1lOiBzdHJpbmcpIHsKICAgICAgICByZXR1cm4gKHRoaXMuY29uc29sZUZpbHRlcnMuZmluZEluZGV4KChmaWx0ZXI6IGFueSkgPT4gZmlsdGVyLm5hbWUgPT09IG5hbWUgJiYgZmlsdGVyLmlkICE9PSB0aGlzLmZvcm0uaWQpID49IDApCiAgICB9CgogICAgY2xlYXJGb3JtKCkgewogICAgICAgIHRoaXMuZm9ybS5ib29sID0gZmFsc2UKICAgICAgICB0aGlzLmZvcm0uaWQgPSBudWxsCiAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSAnJwogICAgICAgIHRoaXMuZm9ybS5yZWdleCA9ICcnCiAgICB9CgogICAgdG9nZ2xlRmlsdGVyKGZpbHRlcjogYW55KSB7CiAgICAgICAgY29uc3QgdmFsdWVzID0gewogICAgICAgICAgICBuYW1lOiBmaWx0ZXIubmFtZSwKICAgICAgICAgICAgYm9vbDogIWZpbHRlci5ib29sLAogICAgICAgICAgICByZWdleDogZmlsdGVyLnJlZ2V4CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL2NvbnNvbGUvZmlsdGVyVXBkYXRlJywgeyBpZDogZmlsdGVyLmlkLCB2YWx1ZXMgfSkKICAgIH0KCiAgICBjcmVhdGVGaWx0ZXIoKSB7CiAgICAgICAgdGhpcy5jbGVhckZvcm0oKQogICAgICAgIHRoaXMuZm9ybS5ib29sID0gdHJ1ZQogICAgfQoKICAgIGVkaXRGaWx0ZXIoZmlsdGVyOiBhbnkpIHsKICAgICAgICB0aGlzLmZvcm0ubmFtZSA9IGZpbHRlci5uYW1lCiAgICAgICAgdGhpcy5mb3JtLmlkID0gZmlsdGVyLmlkCiAgICAgICAgdGhpcy5mb3JtLnJlZ2V4ID0gZmlsdGVyLnJlZ2V4CgogICAgICAgIHRoaXMuZm9ybS5ib29sID0gdHJ1ZQogICAgfQoKICAgIHNhdmVGaWx0ZXIoKSB7CiAgICAgICAgaWYgKHRoaXMuZm9ybS52YWxpZCkgewogICAgICAgICAgICBjb25zdCBmaWx0ZXIgPSB7CiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLmZvcm0ubmFtZSwKICAgICAgICAgICAgICAgIGJvb2w6IHRoaXMuZm9ybS5ib29sLAogICAgICAgICAgICAgICAgcmVnZXg6IHRoaXMuZm9ybS5yZWdleCwKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMuZm9ybS5pZCkKICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvY29uc29sZS9maWx0ZXJVcGRhdGUnLCB7IGlkOiB0aGlzLmZvcm0uaWQsIHZhbHVlczogZmlsdGVyIH0pCiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvY29uc29sZS9maWx0ZXJTdG9yZScsIHsgdmFsdWVzOiBmaWx0ZXIgfSkKCiAgICAgICAgICAgIHRoaXMuY2xlYXJGb3JtKCkKICAgICAgICB9CiAgICB9CgogICAgZGVsZXRlRmlsdGVyKGlkOiBzdHJpbmcpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL2NvbnNvbGUvZmlsdGVyRGVsZXRlJywgaWQpCiAgICB9Cn0K"},{"version":3,"sources":["SettingsConsoleTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"SettingsConsoleTab.vue","sourceRoot":"src/components/settings","sourcesContent":["<style scoped>\n\n</style>\n\n<template>\n    <div>\n        <v-card flat v-if=\"!form.bool\">\n            <v-card-text>\n                <settings-row :title=\"$t('Settings.ConsoleTab.Direction')\">\n                    <v-select v-model=\"consoleDirection\" :items=\"availableDirections\" hide-details outlined dense attach></v-select>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.ConsoleTab.EntryStyle')\">\n                    <v-select v-model=\"entryStyle\" :items=\"availableEntryStyles\" hide-details outlined dense attach></v-select>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.ConsoleTab.Height')\">\n                    <v-slider v-model=\"consoleHeightTmp\" @change=\"updateConsoleHeight\" hide-details :min=\"200\" :max=\"900\" :step=\"10\" :label=\"consoleHeightTmp+'px'\" ></v-slider>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.ConsoleTab.HideTemperatures')\" :dynamic-slot-width=\"true\">\n                    <v-switch v-model=\"hideWaitTemperatures\" hide-details class=\"mt-0\"></v-switch>\n                </settings-row>\n                <template v-if=\"moonrakerComponents.includes('timelapse')\">\n                    <v-divider class=\"my-2\"></v-divider>\n                    <settings-row :title=\"$t('Settings.ConsoleTab.HideTimelapse')\" :dynamic-slot-width=\"true\">\n                        <v-switch v-model=\"hideTimelapse\" hide-details class=\"mt-0\"></v-switch>\n                    </settings-row>\n                </template>\n                <v-divider class=\"my-2\"></v-divider>\n                <div v-for=\"(filter, index) in consoleFilters\" v-bind:key=\"index\">\n                    <v-divider class=\"my-2\" v-if=\"index\"></v-divider>\n                    <settings-row :title=\"filter.name\">\n                        <v-btn small outlined class=\"minwidth-0 px-2\" :color=\"filter.bool ? 'white' : 'grey'\" @click=\"toggleFilter(filter)\" >\n                            <v-icon small>mdi-{{ filter.bool ? \"filter\" : \"filter-off\" }}</v-icon>\n                        </v-btn>\n                        <v-btn small outlined class=\"ml-3\" @click=\"editFilter(filter)\">\n                            <v-icon left small>mdi-pencil</v-icon>{{ $t('Settings.Edit') }}\n                        </v-btn>\n                        <v-btn small outlined @click=\"deleteFilter(filter.id)\" class=\"ml-3 minwidth-0 px-2\" color=\"error\">\n                            <v-icon small>mdi-delete</v-icon>\n                        </v-btn>\n                    </settings-row>\n                </div>\n            </v-card-text>\n            <v-card-actions class=\"d-flex justify-end\">\n                <v-btn text color=\"primary\" @click=\"createFilter\">{{ $t(\"Settings.ConsoleTab.AddFilter\")}}</v-btn>\n            </v-card-actions>\n        </v-card>\n        <v-card flat v-else>\n            <v-form v-model=\"form.valid\" @submit.prevent=\"saveFilter\">\n                <v-card-title>{{ form.id === null ? $t('Settings.ConsoleTab.CreateHeadline') : $t('Settings.ConsoleTab.EditHeadline') }}</v-card-title>\n                <v-card-text>\n                    <settings-row :title=\"$t('Settings.ConsoleTab.Name')\">\n                        <v-text-field\n                            v-model=\"form.name\"\n                            hide-details=\"auto\"\n                            :rules=\"[rules.required, rules.unique]\"\n                            dense\n                            outlined\n                        ></v-text-field>\n                    </settings-row>\n                    <v-divider class=\"my-2\"></v-divider>\n                    <settings-row :title=\"$t('Settings.ConsoleTab.Regex')\">\n                        <v-textarea\n                            outlined\n                            v-model=\"form.regex\"\n                            hide-details=\"auto\"\n                        ></v-textarea>\n                    </settings-row>\n                </v-card-text>\n                <v-card-actions class=\"d-flex justify-end\">\n                    <v-btn text @click=\"form.bool = false\" >\n                        {{ $t('Settings.Cancel') }}\n                    </v-btn>\n                    <v-btn color=\"primary\" text type=\"submit\" >\n                        {{ form.id === null ? $t(\"Settings.ConsoleTab.StoreButton\") : $t(\"Settings.ConsoleTab.UpdateButton\") }}\n                    </v-btn>\n                </v-card-actions>\n            </v-form>\n        </v-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport {Debounce} from 'vue-debounce-decorator'\n\ninterface consoleForm {\n    bool: boolean\n    id: string | null\n    valid: boolean\n    name: string\n    regex: string\n}\n\n@Component({\n    components: {SettingsRow}\n})\nexport default class SettingsConsoleTab extends Mixins(BaseMixin) {\n    private form: consoleForm = {\n        bool: false,\n        valid: false,\n        name: '',\n        regex: '',\n        id: null,\n    }\n\n    private rules = {\n        required: (value: string) => value !== '' || 'required',\n        unique: (value: string) => !this.existsPresetName(value) || 'Name already exists',\n    }\n\n    private consoleHeightTmp = 300\n\n    mounted() {\n        this.consoleHeightTmp = this.consoleHeight\n    }\n\n    get consoleFilters() {\n        return this.$store.getters['gui/console/getConsolefilters'] ?? []\n    }\n\n    get availableDirections() {\n        return [\n            {\n                text: this.$t('Settings.ConsoleTab.DirectionTable'),\n                value: 'table'\n            }, {\n                text: this.$t('Settings.ConsoleTab.DirectionShell'),\n                value: 'shell'\n            }\n        ]\n    }\n\n    get consoleDirection() {\n        return this.$store.state.gui.console.direction ?? 'table'\n    }\n\n    set consoleDirection(newVal) {\n        this.$store.dispatch('gui/console/saveSetting', { name: 'direction', value: newVal })\n    }\n\n    get availableEntryStyles() {\n        return [\n            {\n                text: this.$t('Settings.ConsoleTab.EntryStyleDefault'),\n                value: 'default'\n            }, {\n                text: this.$t('Settings.ConsoleTab.EntryStyleCompact'),\n                value: 'compact'\n            }\n        ]\n    }\n\n    get entryStyle() {\n        return this.$store.state.gui.console.entryStyle ?? 'default'\n    }\n\n    set entryStyle(newVal) {\n        this.$store.dispatch('gui/console/saveSetting', { name: 'entryStyle', value: newVal })\n    }\n\n    get consoleHeight() {\n        return this.$store.state.gui.console.height ?? 300\n    }\n\n    set consoleHeight(newVal) {\n        this.$store.dispatch('gui/console/saveSetting', { name: 'height', value: newVal })\n    }\n\n    @Watch('consoleHeight')\n    consoleHeightChanged(newVal: number) {\n        this.consoleHeightTmp = newVal\n    }\n\n    @Debounce(500)\n    updateConsoleHeight(newVal: number) {\n        this.consoleHeight = newVal\n    }\n\n    get hideWaitTemperatures() {\n        return this.$store.state.gui.console.hideWaitTemperatures\n    }\n\n    set hideWaitTemperatures(newVal) {\n        this.$store.dispatch('gui/console/saveSetting', { name: 'hideWaitTemperatures', value: newVal })\n    }\n\n    get hideTimelapse() {\n        return this.$store.state.gui.console.hideTlCommands\n    }\n\n    set hideTimelapse(newVal) {\n        this.$store.dispatch('gui/console/saveSetting', { name: 'hideTlCommands', value: newVal })\n    }\n\n    existsPresetName(name: string) {\n        return (this.consoleFilters.findIndex((filter: any) => filter.name === name && filter.id !== this.form.id) >= 0)\n    }\n\n    clearForm() {\n        this.form.bool = false\n        this.form.id = null\n        this.form.name = ''\n        this.form.regex = ''\n    }\n\n    toggleFilter(filter: any) {\n        const values = {\n            name: filter.name,\n            bool: !filter.bool,\n            regex: filter.regex\n        }\n\n        this.$store.dispatch('gui/console/filterUpdate', { id: filter.id, values })\n    }\n\n    createFilter() {\n        this.clearForm()\n        this.form.bool = true\n    }\n\n    editFilter(filter: any) {\n        this.form.name = filter.name\n        this.form.id = filter.id\n        this.form.regex = filter.regex\n\n        this.form.bool = true\n    }\n\n    saveFilter() {\n        if (this.form.valid) {\n            const filter = {\n                name: this.form.name,\n                bool: this.form.bool,\n                regex: this.form.regex,\n            }\n\n            if (this.form.id)\n                this.$store.dispatch('gui/console/filterUpdate', { id: this.form.id, values: filter })\n            else\n                this.$store.dispatch('gui/console/filterStore', { values: filter })\n\n            this.clearForm()\n        }\n    }\n\n    deleteFilter(id: string) {\n        this.$store.dispatch('gui/console/filterDelete', id)\n    }\n}\n</script>"]}]}