{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/HistoryPrinttimeAvg.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/charts/HistoryPrinttimeAvg.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgppbXBvcnQgQ29tcG9uZW50IGZyb20gJ3Z1ZS1jbGFzcy1jb21wb25lbnQnCmltcG9ydCB7Y3JlYXRlQ29tcG9uZW50fSBmcm9tICdlY2hhcnRzLWZvci12dWUnCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKaW1wb3J0IHtNaXhpbnMsIFdhdGNofSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJy4uL21peGlucy9iYXNlJwppbXBvcnQge0VDaGFydHN9IGZyb20gJ2VjaGFydHMvY29yZScKCkBDb21wb25lbnQoewogICAgY29tcG9uZW50czogewogICAgICAgIEVDaGFydHM6IGNyZWF0ZUNvbXBvbmVudCh7IGVjaGFydHMgfSksCiAgICB9Cn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhpc3RvcnlQcmludHRpbWVBdmcgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CiAgICAkcmVmcyE6IHsKICAgICAgICBoaXN0b3J5UHJpbnR0aW1lQXZnOiBhbnkKICAgIH0KCiAgICBwcml2YXRlIGNoYXJ0T3B0aW9uczogYW55ID0gewogICAgICAgIGRhcmtNb2RlOiB0cnVlLAogICAgICAgIGFuaW1hdGlvbjogZmFsc2UsCiAgICAgICAgZ3JpZDogewogICAgICAgICAgICB0b3A6IDI1LAogICAgICAgICAgICByaWdodDogNDAsCiAgICAgICAgICAgIGJvdHRvbTogMzAsCiAgICAgICAgICAgIGxlZnQ6IDQwLAogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAwLAogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgZGF0YTogWycwLTJoJywgJzItNmgnLCAnNi0xMmgnLCAnMTItMjRoJywgJz4yNGgnXSwKICAgICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDYpJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjQpJywKICAgICAgICAgICAgICAgIG1hcmdpbjogMTAsCiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgICBuYW1lOiB0aGlzLiR0KCdIaXN0b3J5Lkhpc3RvcnlQcmludHRpbWVBVkcnKSwKICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgbWluSW50ZXJ2YWw6IDEwLAogICAgICAgICAgICBtYXhJbnRlcnZhbDogMTAwLAogICAgICAgICAgICBuYW1lTG9jYXRpb246ICdlbmQnLAogICAgICAgICAgICBuYW1lR2FwOiA1LAogICAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNCknLAogICAgICAgICAgICAgICAgYWxpZ246ICdsZWZ0JywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMiknLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNCknLAogICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfScsCiAgICAgICAgICAgICAgICAvL3JvdGF0ZTogOTAsCiAgICAgICAgICAgICAgICAvL3Nob3dNYXhMYWJlbDogZmFsc2UsCiAgICAgICAgICAgICAgICBzaG93TWluTGFiZWw6IHRydWUsCiAgICAgICAgICAgICAgICBtYXJnaW46IDUsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTIpJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnI0JEQkRCRCcKICAgICAgICAgICAgfQogICAgICAgIH1dCiAgICB9CgogICAgZ2V0IHByaW50dGltZUF2Z0FycmF5KCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydzZXJ2ZXIvaGlzdG9yeS9nZXRQcmludHRpbWVBdmdBcnJheSddCiAgICB9CgogICAgZ2V0IGNoYXJ0ICgpOiBFQ2hhcnRzIHwgbnVsbCB7CiAgICAgICAgY29uc3QgaGlzdG9yeVByaW50dGltZUF2ZyA9IHRoaXMuJHJlZnMuaGlzdG9yeVByaW50dGltZUF2ZwogICAgICAgIHJldHVybiBoaXN0b3J5UHJpbnR0aW1lQXZnPy5pbnN0ID8/IG51bGwKICAgIH0KCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuY2hhcnRPcHRpb25zLnNlcmllc1swXS5kYXRhID0gdGhpcy5wcmludHRpbWVBdmdBcnJheQogICAgICAgIHRoaXMuY2hhcnQ/LnNldE9wdGlvbih0aGlzLmNoYXJ0T3B0aW9ucykKCiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuZXZlbnRMaXN0ZW5lclJlc2l6ZSkKICAgIH0KCiAgICBkZXN0cm95ZWQoKSB7CiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuZXZlbnRMaXN0ZW5lclJlc2l6ZSkKICAgIH0KCiAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuCiAgICAgICAgaWYgKHRoaXMuY2hhcnQpIHRoaXMuY2hhcnQuZGlzcG9zZSgpCiAgICB9CgogICAgQFdhdGNoKCdwcmludHRpbWVBdmdBcnJheScpCiAgICBwcmludHRpbWVBdmdBcnJheUNoYW5nZWQobmV3VmFsOiBhbnkpIHsKICAgICAgICB0aGlzLmNoYXJ0Py5zZXRPcHRpb24oewogICAgICAgICAgICBzZXJpZXM6IHsKICAgICAgICAgICAgICAgIGRhdGE6IG5ld1ZhbAogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgIH0KCiAgICB2aXNpYmlsaXR5Q2hhbmdlZCAoaXNWaXNpYmxlOiBib29sZWFuKSB7CiAgICAgICAgaWYgKGlzVmlzaWJsZSkgdGhpcy5jaGFydD8ucmVzaXplKCkKICAgIH0KCiAgICBldmVudExpc3RlbmVyUmVzaXplKCkgewogICAgICAgIHRoaXMuY2hhcnQ/LnJlc2l6ZSgpCiAgICB9Cgp9Cg=="},{"version":3,"sources":["HistoryPrinttimeAvg.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"HistoryPrinttimeAvg.vue","sourceRoot":"src/components/charts","sourcesContent":["<template>\n    <ECharts\n        ref=\"historyPrinttimeAvg\"\n        :option=\"chartOptions\"\n        :init-options=\"{ renderer: 'svg' }\"\n        style=\"height: 175px; width: 100%;\"\n        v-observe-visibility=\"visibilityChanged\"\n    ></ECharts>\n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport {createComponent} from 'echarts-for-vue'\nimport * as echarts from 'echarts'\nimport {Mixins, Watch} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport {ECharts} from 'echarts/core'\n\n@Component({\n    components: {\n        ECharts: createComponent({ echarts }),\n    }\n})\nexport default class HistoryPrinttimeAvg extends Mixins(BaseMixin) {\n    $refs!: {\n        historyPrinttimeAvg: any\n    }\n\n    private chartOptions: any = {\n        darkMode: true,\n        animation: false,\n        grid: {\n            top: 25,\n            right: 40,\n            bottom: 30,\n            left: 40,\n        },\n        tooltip: {\n            trigger: 'item',\n            borderWidth: 0,\n        },\n        xAxis: {\n            type: 'category',\n            data: ['0-2h', '2-6h', '6-12h', '12-24h', '>24h'],\n            splitLine: {\n                show: true,\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.06)',\n                },\n            },\n            axisLabel: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                margin: 10,\n            },\n        },\n        yAxis: {\n            name: this.$t('History.HistoryPrinttimeAVG'),\n            type: 'value',\n            minInterval: 10,\n            maxInterval: 100,\n            nameLocation: 'end',\n            nameGap: 5,\n            nameTextStyle: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                align: 'left',\n            },\n            splitLine: {\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.12)',\n                },\n            },\n            axisLabel: {\n                color: 'rgba(255, 255, 255, 0.24)',\n                formatter: '{value}',\n                //rotate: 90,\n                //showMaxLabel: false,\n                showMinLabel: true,\n                margin: 5,\n            },\n            axisLine: {\n                show: true,\n                lineStyle: {\n                    color: 'rgba(255, 255, 255, 0.12)',\n                },\n            }\n        },\n        series: [{\n            type: 'bar',\n            data: [],\n            itemStyle: {\n                color: '#BDBDBD'\n            }\n        }]\n    }\n\n    get printtimeAvgArray() {\n        return this.$store.getters['server/history/getPrinttimeAvgArray']\n    }\n\n    get chart (): ECharts | null {\n        const historyPrinttimeAvg = this.$refs.historyPrinttimeAvg\n        return historyPrinttimeAvg?.inst ?? null\n    }\n\n    mounted() {\n        this.chartOptions.series[0].data = this.printtimeAvgArray\n        this.chart?.setOption(this.chartOptions)\n\n        window.addEventListener('resize', this.eventListenerResize)\n    }\n\n    destroyed() {\n        window.removeEventListener('resize', this.eventListenerResize)\n    }\n\n    beforeDestroy() {\n        if (typeof window === 'undefined') return\n        if (this.chart) this.chart.dispose()\n    }\n\n    @Watch('printtimeAvgArray')\n    printtimeAvgArrayChanged(newVal: any) {\n        this.chart?.setOption({\n            series: {\n                data: newVal\n            }\n        })\n    }\n\n    visibilityChanged (isVisible: boolean) {\n        if (isVisible) this.chart?.resize()\n    }\n\n    eventListenerResize() {\n        this.chart?.resize()\n    }\n\n}\n</script>"]}]}