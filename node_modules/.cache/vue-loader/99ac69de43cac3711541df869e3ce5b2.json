{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsEditorTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsEditorTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBDb21wb25lbnQgZnJvbSAndnVlLWNsYXNzLWNvbXBvbmVudCcKaW1wb3J0IHsgTWl4aW5zIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IEJhc2VNaXhpbiBmcm9tICdAL2NvbXBvbmVudHMvbWl4aW5zL2Jhc2UnCmltcG9ydCBTZXR0aW5nc1JvdyBmcm9tICdAL2NvbXBvbmVudHMvc2V0dGluZ3MvU2V0dGluZ3NSb3cudnVlJwpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHtTZXR0aW5nc1Jvd30KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NFZGl0b3JUYWIgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CgogICAgZ2V0IGVzY1RvQ2xvc2UoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5lZGl0b3IuZXNjVG9DbG9zZQogICAgfQoKICAgIHNldCBlc2NUb0Nsb3NlKG5ld1ZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdndWkvc2F2ZVNldHRpbmcnLCB7bmFtZTogJ2VkaXRvci5lc2NUb0Nsb3NlJywgdmFsdWU6IG5ld1ZhbCB9KQogICAgfQoKICAgIGdldCBjb25maXJtVW5zYXZlZENoYW5nZXMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmd1aS5lZGl0b3IuY29uZmlybVVuc2F2ZWRDaGFuZ2VzCiAgICB9CgogICAgc2V0IGNvbmZpcm1VbnNhdmVkQ2hhbmdlcyhuZXdWYWwpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3NhdmVTZXR0aW5nJywge25hbWU6ICdlZGl0b3IuY29uZmlybVVuc2F2ZWRDaGFuZ2VzJywgdmFsdWU6IG5ld1ZhbCB9KQogICAgfQp9Cg=="},{"version":3,"sources":["SettingsEditorTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SettingsEditorTab.vue","sourceRoot":"src/components/settings","sourcesContent":["<template>\n    <div>\n        <v-card flat>\n            <v-card-text>\n                <settings-row :title=\"$t('Settings.EditorTab.UseEscToClose')\" :sub-title=\"$t('Settings.EditorTab.UseEscToCloseDescription')\" :dynamicSlotWidth=\"true\">\n                    <v-switch v-model=\"escToClose\" hide-details class=\"mt-0\"></v-switch>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n                <settings-row :title=\"$t('Settings.EditorTab.ConfirmUnsavedChanges')\" :sub-title=\"$t('Settings.EditorTab.ConfirmUnsavedChangesDescription')\" :dynamicSlotWidth=\"true\">\n                    <v-switch v-model=\"confirmUnsavedChanges\" hide-details class=\"mt-0\"></v-switch>\n                </settings-row>\n                <v-divider class=\"my-2\"></v-divider>\n            </v-card-text>\n        </v-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\nimport Component from 'vue-class-component'\nimport { Mixins } from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\n@Component({\n    components: {SettingsRow}\n})\nexport default class SettingsEditorTab extends Mixins(BaseMixin) {\n\n    get escToClose() {\n        return this.$store.state.gui.editor.escToClose\n    }\n\n    set escToClose(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'editor.escToClose', value: newVal })\n    }\n\n    get confirmUnsavedChanges() {\n        return this.$store.state.gui.editor.confirmUnsavedChanges\n    }\n\n    set confirmUnsavedChanges(newVal) {\n        this.$store.dispatch('gui/saveSetting', {name: 'editor.confirmUnsavedChanges', value: newVal })\n    }\n}\n</script>"]}]}