{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsWebcamsTab.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/settings/SettingsWebcamsTab.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Q29tcG9uZW50LCBNaXhpbnN9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InCmltcG9ydCBCYXNlTWl4aW4gZnJvbSAnLi4vbWl4aW5zL2Jhc2UnCmltcG9ydCBTZXR0aW5nc1JvdyBmcm9tICdAL2NvbXBvbmVudHMvc2V0dGluZ3MvU2V0dGluZ3NSb3cudnVlJwppbXBvcnQge0d1aVdlYmNhbVN0YXRlV2ViY2FtfSBmcm9tICdAL3N0b3JlL2d1aS93ZWJjYW1zL3R5cGVzJwppbXBvcnQgTWpwZWdzdHJlYW1lciBmcm9tICdAL2NvbXBvbmVudHMvd2ViY2Ftcy9NanBlZ3N0cmVhbWVyLnZ1ZScKaW1wb3J0IE1qcGVnc3RyZWFtZXJBZGFwdGl2ZSBmcm9tICdAL2NvbXBvbmVudHMvd2ViY2Ftcy9NanBlZ3N0cmVhbWVyQWRhcHRpdmUudnVlJwppbXBvcnQgVXY0bE1qcGVnIGZyb20gJ0AvY29tcG9uZW50cy93ZWJjYW1zL1V2NGxNanBlZy52dWUnCmltcG9ydCBJcHN0cmVhbWVyIGZyb20gJ0AvY29tcG9uZW50cy93ZWJjYW1zL0lwc3RyZWFtZXIudnVlJwoKaW50ZXJmYWNlIHdlYmNhbUZvcm0gewogICAgYm9vbDogYm9vbGVhbgogICAgaWQ6IHN0cmluZyB8IG51bGwKICAgIHZhbGlkOiBib29sZWFuCiAgICBuYW1lOiBzdHJpbmcKICAgIGljb246IHN0cmluZwogICAgc2VydmljZTogc3RyaW5nCiAgICB0YXJnZXRGcHM6IG51bWJlcgogICAgdXJsU3RyZWFtOiBzdHJpbmcKICAgIHVybFNuYXBzaG90OiBzdHJpbmcKICAgIGZsaXBYOiBib29sZWFuCiAgICBmbGlwWTogYm9vbGVhbgp9CgpAQ29tcG9uZW50KHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBTZXR0aW5nc1JvdywKICAgICAgICAnd2ViY2FtLW1qcGVnc3RyZWFtZXInOiBNanBlZ3N0cmVhbWVyLAogICAgICAgICd3ZWJjYW0tbWpwZWdzdHJlYW1lci1hZGFwdGl2ZSc6IE1qcGVnc3RyZWFtZXJBZGFwdGl2ZSwKICAgICAgICAnd2ViY2FtLXV2NGwtbWpwZWcnOiBVdjRsTWpwZWcsCiAgICAgICAgJ3dlYmNhbS1pcHN0cmVhbWVyJzogSXBzdHJlYW1lciwKICAgIH0KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NXZWJjYW1zVGFiIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewoKICAgIHByaXZhdGUgZm9ybTogd2ViY2FtRm9ybSA9IHsKICAgICAgICBib29sOiBmYWxzZSwKICAgICAgICBpZDogbnVsbCwKICAgICAgICB2YWxpZDogZmFsc2UsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgaWNvbjogJycsCiAgICAgICAgc2VydmljZTogJycsCiAgICAgICAgdGFyZ2V0RnBzOiAxNSwKICAgICAgICB1cmxTdHJlYW06ICcnLAogICAgICAgIHVybFNuYXBzaG90OiAnJywKICAgICAgICBmbGlwWDogZmFsc2UsCiAgICAgICAgZmxpcFk6IGZhbHNlLAogICAgfQoKICAgIHByaXZhdGUgcnVsZXMgPSB7CiAgICAgICAgcmVxdWlyZWQ6ICh2YWx1ZTogc3RyaW5nKSA9PiB2YWx1ZSAhPT0gJycgfHwgdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5SZXF1aXJlZCcpLAogICAgICAgIHVuaXF1ZTogKHZhbHVlOiBzdHJpbmcpID0+ICF0aGlzLmV4aXN0c1dlYmNhbU5hbWUodmFsdWUpIHx8IHRoaXMuJHQoJ1NldHRpbmdzLldlYmNhbXNUYWIuTmFtZUFscmVhZHlFeGlzdHMnKSwKICAgIH0KCiAgICAkcmVmcyE6IHsKICAgICAgICB3ZWJjYW1Gb3JtOiBhbnkKICAgIH0KCiAgICBnZXQgd2ViY2FtcygpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snZ3VpL3dlYmNhbXMvZ2V0V2ViY2FtcyddID8/IFtdCiAgICB9CgogICAgZ2V0IGljb25JdGVtcygpIHsKICAgICAgICByZXR1cm4gWwogICAgICAgICAgICB7IHZhbHVlOiAnbWRpLXByaW50ZXItM2QnLCAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5XZWJjYW1zVGFiLkljb25QcmludGVyJykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ21kaS1wcmludGVyLTNkLW5venpsZScsICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5JY29uTm96emxlJykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ21kaS1yYWRpYXRvci1kaXNhYmxlZCcsICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5JY29uQmVkJykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ21kaS13ZWJjYW0nLCAgICAgICAgICAgICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5JY29uQ2FtJykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ21kaS1hbGJ1bScsICAgICAgICAgICAgICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5JY29uRmlsYW1lbnQnKSB9LAogICAgICAgICAgICB7IHZhbHVlOiAnbWRpLWRvb3InLCAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5XZWJjYW1zVGFiLkljb25Eb29yJykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ21kaS1yYXNwYmVycnktcGknLCAgICAgICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5JY29uTWN1JykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ21kaS1jYW1wZmlyZScsICAgICAgICAgICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5JY29uSG90JykgfSwKICAgICAgICBdCiAgICB9CgogICAgZ2V0IHNlcnZpY2VJdGVtcygpIHsKICAgICAgICByZXR1cm4gWwogICAgICAgICAgICB7IHZhbHVlOiAnbWpwZWdzdHJlYW1lcicsICAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5XZWJjYW1zVGFiLk1qcGVnc3RyZWFtZXInKX0sCiAgICAgICAgICAgIHsgdmFsdWU6ICdtanBlZ3N0cmVhbWVyLWFkYXB0aXZlJywgIHRleHQ6IHRoaXMuJHQoJ1NldHRpbmdzLldlYmNhbXNUYWIuTWpwZWdzdHJlYW1lckFkYXB0aXZlJykgfSwKICAgICAgICAgICAgeyB2YWx1ZTogJ3V2NGwtbWpwZWcnLCAgICAgICAgICAgICAgdGV4dDogdGhpcy4kdCgnU2V0dGluZ3MuV2ViY2Ftc1RhYi5VdjRsTWpwZWcnKSB9LAogICAgICAgICAgICB7IHZhbHVlOiAnaXBzdHJlYW0nLCAgICAgICAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCdTZXR0aW5ncy5XZWJjYW1zVGFiLklwc3RyZWFtJykgfSwKICAgICAgICBdCiAgICB9CgogICAgZ2V0IHdlYmNhbVN0eWxlKCkgewogICAgICAgIGxldCB0cmFuc2Zvcm1zID0gJycKICAgICAgICBpZiAodGhpcy5mb3JtLmZsaXBYKSB0cmFuc2Zvcm1zICs9ICcgc2NhbGVYKC0xKScKICAgICAgICBpZiAodGhpcy5mb3JtLmZsaXBZKSB0cmFuc2Zvcm1zICs9ICcgc2NhbGVZKC0xKScKICAgICAgICBpZiAodHJhbnNmb3Jtcy50cmltTGVmdCgpLmxlbmd0aCkgewogICAgICAgICAgICByZXR1cm4geyB0cmFuc2Zvcm06IHRyYW5zZm9ybXMudHJpbUxlZnQoKSB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJycKICAgIH0KCiAgICBnZXRTdWJ0aXRsZSh3ZWJjYW06IEd1aVdlYmNhbVN0YXRlV2ViY2FtKSB7CiAgICAgICAgcmV0dXJuICdVUkw6ICcrICh3ZWJjYW0uc2VydmljZSA9PT0gJ21qcGVnc3RyZWFtZXItYWRhcHRpdmUnID8gd2ViY2FtLnVybFNuYXBzaG90IDogd2ViY2FtLnVybFN0cmVhbSkKICAgIH0KCiAgICBleGlzdHNXZWJjYW1OYW1lKG5hbWU6IHN0cmluZykgewogICAgICAgIHJldHVybiAodGhpcy53ZWJjYW1zLmZpbmRJbmRleCgod2ViY2FtOiBHdWlXZWJjYW1TdGF0ZVdlYmNhbSkgPT4gd2ViY2FtLm5hbWUgPT09IG5hbWUgJiYgd2ViY2FtLmlkICE9PSB0aGlzLmZvcm0uaWQpICE9PSAtMSkKICAgIH0KCiAgICBjcmVhdGVXZWJjYW0oKSB7CiAgICAgICAgdGhpcy5jbGVhckRpYWxvZygpCgogICAgICAgIHRoaXMuZm9ybS5ib29sID0gdHJ1ZQogICAgfQoKICAgIGVkaXRXZWJjYW0od2ViY2FtOiBHdWlXZWJjYW1TdGF0ZVdlYmNhbSkgewogICAgICAgIHRoaXMuZm9ybS5pZCA9IHdlYmNhbS5pZCA/PyBudWxsCiAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSB3ZWJjYW0ubmFtZQogICAgICAgIHRoaXMuZm9ybS5pY29uID0gd2ViY2FtLmljb24KICAgICAgICB0aGlzLmZvcm0uc2VydmljZSA9IHdlYmNhbS5zZXJ2aWNlCiAgICAgICAgdGhpcy5mb3JtLnRhcmdldEZwcyA9IHdlYmNhbS50YXJnZXRGcHMKICAgICAgICB0aGlzLmZvcm0udXJsU3RyZWFtID0gd2ViY2FtLnVybFN0cmVhbQogICAgICAgIHRoaXMuZm9ybS51cmxTbmFwc2hvdCA9IHdlYmNhbS51cmxTbmFwc2hvdAogICAgICAgIHRoaXMuZm9ybS5mbGlwWCA9IHdlYmNhbS5mbGlwWAogICAgICAgIHRoaXMuZm9ybS5mbGlwWSA9IHdlYmNhbS5mbGlwWQoKICAgICAgICB0aGlzLmZvcm0uYm9vbCA9IHRydWUKICAgICAgICB0aGlzLmZvcm0udmFsaWQgPSBmYWxzZQoKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMud2ViY2FtRm9ybT8udmFsaWRhdGUoKQogICAgICAgIH0pCiAgICB9CgogICAgc2F2ZVdlYmNhbSgpIHsKICAgICAgICBpZiAodGhpcy5mb3JtLnZhbGlkKSB7CiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHsKICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuZm9ybS5uYW1lLAogICAgICAgICAgICAgICAgaWNvbjogdGhpcy5mb3JtLmljb24sCiAgICAgICAgICAgICAgICBzZXJ2aWNlOiB0aGlzLmZvcm0uc2VydmljZSwKICAgICAgICAgICAgICAgIHRhcmdldEZwczogdGhpcy5mb3JtLnRhcmdldEZwcywKICAgICAgICAgICAgICAgIHVybFN0cmVhbTogdGhpcy5mb3JtLnVybFN0cmVhbSwKICAgICAgICAgICAgICAgIHVybFNuYXBzaG90OiB0aGlzLmZvcm0udXJsU25hcHNob3QsCiAgICAgICAgICAgICAgICBmbGlwWDogdGhpcy5mb3JtLmZsaXBYLAogICAgICAgICAgICAgICAgZmxpcFk6IHRoaXMuZm9ybS5mbGlwWSwKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMuZm9ybS5pZCAhPT0gbnVsbCkgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS93ZWJjYW1zL3VwZGF0ZScsIHsgaWQ6IHRoaXMuZm9ybS5pZCwgdmFsdWVzOiB2YWx1ZXMgfSkKICAgICAgICAgICAgZWxzZSB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ3VpL3dlYmNhbXMvc3RvcmUnLCB7IHZhbHVlcyB9KQoKICAgICAgICAgICAgdGhpcy5jbGVhckRpYWxvZygpCiAgICAgICAgfQogICAgfQoKICAgIGRlbGV0ZVdlYmNhbShpZDogc3RyaW5nKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2d1aS93ZWJjYW1zL2RlbGV0ZScsIGlkKQogICAgfQoKICAgIGNsZWFyRGlhbG9nKCkgewogICAgICAgIHRoaXMuZm9ybS5ib29sID0gZmFsc2UKICAgICAgICB0aGlzLmZvcm0uaWQgPSBudWxsCiAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSAnJwogICAgICAgIHRoaXMuZm9ybS5pY29uID0gJ21kaS13ZWJjYW0nCiAgICAgICAgdGhpcy5mb3JtLnNlcnZpY2UgPSAnbWpwZWdzdHJlYW1lci1hZGFwdGl2ZScKICAgICAgICB0aGlzLmZvcm0udGFyZ2V0RnBzID0gMTUKICAgICAgICB0aGlzLmZvcm0udXJsU3RyZWFtID0gJy93ZWJjYW0vP2FjdGlvbj1zdHJlYW0nCiAgICAgICAgdGhpcy5mb3JtLnVybFNuYXBzaG90ID0gJy93ZWJjYW0vP2FjdGlvbj1zbmFwc2hvdCcKICAgICAgICB0aGlzLmZvcm0uZmxpcFggPSBmYWxzZQogICAgICAgIHRoaXMuZm9ybS5mbGlwWSA9IGZhbHNlCiAgICB9CgogICAgc2V0Rm9ybUljb24oaWNvbjogc3RyaW5nKSB7CiAgICAgICAgdGhpcy5mb3JtLmljb24gPSBpY29uCiAgICB9Cn0K"},{"version":3,"sources":["SettingsWebcamsTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"SettingsWebcamsTab.vue","sourceRoot":"src/components/settings","sourcesContent":["<template>\n    <div>\n        <v-card flat v-if=\"!form.bool\">\n            <v-card-text>\n                <h3 class=\"text-h5 mb-3\">{{ $t('Settings.WebcamsTab.Webcams') }}</h3>\n                <div v-for=\"(webcam) in webcams\" v-bind:key=\"webcam.id\">\n                    <v-divider class=\"my-2\"></v-divider>\n                    <settings-row :title=\"webcam.name\" :icon=\"webcam.icon\" :sub-title=\"getSubtitle(webcam)\">\n                        <v-btn small outlined @click=\"editWebcam(webcam)\">\n                            <v-icon small left>mdi-pencil</v-icon> {{ $t('Settings.Edit') }}\n                        </v-btn>\n                        <v-btn small outlined @click=\"deleteWebcam(webcam.id)\" class=\"ml-3 minwidth-0 px-2\" color=\"error\">\n                            <v-icon small>mdi-delete</v-icon>\n                        </v-btn>\n                    </settings-row>\n                </div>\n            </v-card-text>\n            <v-card-actions class=\"d-flex justify-end\">\n                <v-btn text color=\"primary\" @click=\"createWebcam\">{{ $t(\"Settings.WebcamsTab.AddWebcam\")}}</v-btn>\n            </v-card-actions>\n        </v-card>\n        <v-card flat v-else>\n            <v-form v-model=\"form.valid\" ref=\"webcamForm\" @submit.prevent=\"saveWebcam\">\n                <v-card-title>\n                    {{ form.id === null ? $t(\"Settings.WebcamsTab.CreateWebcam\") : $t(\"Settings.WebcamsTab.EditWebcam\") }}\n                </v-card-title>\n                <v-card-text>\n                    <v-row>\n                        <v-col class=\"col-12 col-sm-6\">\n                            <v-row>\n                                <v-col class=\"col-2\">\n                                    <v-item-group>\n                                        <v-menu :offset-y=\"true\" title=\"Icon\">\n                                            <template v-slot:activator=\"{ on, attrs }\">\n                                                <v-btn class=\"px-2 minwidth-0\" color=\"transparent\" v-bind=\"attrs\" v-on=\"on\" elevation=\"0\">\n                                                    <v-icon>{{ form.icon }}</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list dense class=\"py-0\">\n                                                <v-list-item v-for=\"icon of iconItems\" v-bind:key=\"icon.value\" link @click=\"setFormIcon(icon.value)\">\n                                                    <v-list-item-icon class=\"mr-0\">\n                                                        <v-icon small>{{ icon.value }}</v-icon>\n                                                    </v-list-item-icon>\n                                                    <v-list-item-content>\n                                                        <v-list-item-title v-text=\"icon.text\"></v-list-item-title>\n                                                    </v-list-item-content>\n                                                </v-list-item>\n                                            </v-list>\n                                        </v-menu>\n                                    </v-item-group>\n                                </v-col>\n                                <v-col class=\"col-10\">\n                                    <v-text-field\n                                        v-model=\"form.name\"\n                                        :label=\"$t('Settings.WebcamsTab.Name')\"\n                                        hide-details=\"auto\"\n                                        :rules=\"[rules.required, rules.unique]\"\n                                        dense\n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row>\n                                <v-col class=\"py-1\">\n                                    <v-text-field\n                                        v-model=\"form.urlStream\"\n                                        :label=\"$t('Settings.WebcamsTab.UrlStream')\"\n                                        hide-details=\"auto\"\n                                        :rules=\"form.service !== 'mjpegstreamer-adaptive' ? [rules.required] : []\"\n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row>\n                                <v-col class=\"py-1\">\n                                    <v-text-field\n                                        v-model=\"form.urlSnapshot\"\n                                        :label=\"$t('Settings.WebcamsTab.UrlSnapshot')\"\n                                        hide-details=\"auto\"\n                                        :rules=\"form.service === 'mjpegstreamer-adaptive' ? [rules.required] : []\"\n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row>\n                                <v-col class=\"py-1\">\n                                    <v-select\n                                        v-model=\"form.service\"\n                                        :items=\"serviceItems\"\n                                        hide-details\n                                        :label=\"$t('Settings.WebcamsTab.Service')\"\n                                        attach\n                                    ></v-select>\n                                </v-col>\n                            </v-row>\n                            <v-row v-if=\"form.service === 'mjpegstreamer-adaptive'\">\n                                <v-col class=\"py-1\">\n                                    <v-text-field\n                                        v-model=\"form.targetFps\"\n                                        hide-details\n                                        :label=\"$t('Settings.WebcamsTab.TargetFPS')\"\n                                    ></v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row>\n                                <v-col class=\"py-1\">\n                                    <v-checkbox\n                                        v-model=\"form.flipX\"\n                                        hide-details\n                                        class=\"mt-1\"\n                                        :label=\"$t('Settings.WebcamsTab.FlipHorizontally')\"\n                                    ></v-checkbox>\n                                </v-col>\n                            </v-row>\n                            <v-row>\n                                <v-col class=\"py-1\">\n                                    <v-checkbox\n                                        v-model=\"form.flipY\"\n                                        hide-details\n                                        class=\"mt-1\"\n                                        :label=\"$t('Settings.WebcamsTab.FlipVertically')\"\n                                    ></v-checkbox>\n                                </v-col>\n                            </v-row>\n                        </v-col>\n                        <v-col class=\"col-12 col-sm-6 text-center\" align-self=\"center\">\n                            <template v-if=\"form.service === 'mjpegstreamer'\">\n                                <webcam-mjpegstreamer :cam-settings=\"form\"></webcam-mjpegstreamer>\n                            </template>\n                            <template v-else-if=\"form.service === 'mjpegstreamer-adaptive'\">\n                                <webcam-mjpegstreamer-adaptive :cam-settings=\"form\"></webcam-mjpegstreamer-adaptive>\n                            </template>\n                            <template v-else-if=\"form.service === 'uv4l-mjpeg'\">\n                                <webcam-uv4l-mjpeg :cam-settings=\"form\"></webcam-uv4l-mjpeg>\n                            </template>\n                            <template v-else-if=\"form.service === 'ipstream'\">\n                                <webcam-ipstreamer :cam-settings=\"form\"></webcam-ipstreamer>\n                            </template>\n                            <template v-else>\n                                <p class=\"text-center py-3 font-italic\">{{ $t('Panels.WebcamPanel.UnknownWebcamService') }}</p>\n                            </template>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n                <v-card-actions class=\"d-flex justify-end\">\n                    <v-btn\n                        text\n                        @click=\"form.bool = false\"\n                    >\n                        {{ $t('Settings.Cancel') }}\n                    </v-btn>\n                    <v-btn\n                        color=\"primary\"\n                        text\n                        type=\"submit\"\n                    >\n                        {{ form.id === null ? $t(\"Settings.WebcamsTab.SaveWebcam\") : $t(\"Settings.WebcamsTab.UpdateWebcam\") }}\n                    </v-btn>\n                </v-card-actions>\n            </v-form>\n        </v-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {Component, Mixins} from 'vue-property-decorator'\nimport BaseMixin from '../mixins/base'\nimport SettingsRow from '@/components/settings/SettingsRow.vue'\nimport {GuiWebcamStateWebcam} from '@/store/gui/webcams/types'\nimport Mjpegstreamer from '@/components/webcams/Mjpegstreamer.vue'\nimport MjpegstreamerAdaptive from '@/components/webcams/MjpegstreamerAdaptive.vue'\nimport Uv4lMjpeg from '@/components/webcams/Uv4lMjpeg.vue'\nimport Ipstreamer from '@/components/webcams/Ipstreamer.vue'\n\ninterface webcamForm {\n    bool: boolean\n    id: string | null\n    valid: boolean\n    name: string\n    icon: string\n    service: string\n    targetFps: number\n    urlStream: string\n    urlSnapshot: string\n    flipX: boolean\n    flipY: boolean\n}\n\n@Component({\n    components: {\n        SettingsRow,\n        'webcam-mjpegstreamer': Mjpegstreamer,\n        'webcam-mjpegstreamer-adaptive': MjpegstreamerAdaptive,\n        'webcam-uv4l-mjpeg': Uv4lMjpeg,\n        'webcam-ipstreamer': Ipstreamer,\n    }\n})\nexport default class SettingsWebcamsTab extends Mixins(BaseMixin) {\n\n    private form: webcamForm = {\n        bool: false,\n        id: null,\n        valid: false,\n        name: '',\n        icon: '',\n        service: '',\n        targetFps: 15,\n        urlStream: '',\n        urlSnapshot: '',\n        flipX: false,\n        flipY: false,\n    }\n\n    private rules = {\n        required: (value: string) => value !== '' || this.$t('Settings.WebcamsTab.Required'),\n        unique: (value: string) => !this.existsWebcamName(value) || this.$t('Settings.WebcamsTab.NameAlreadyExists'),\n    }\n\n    $refs!: {\n        webcamForm: any\n    }\n\n    get webcams() {\n        return this.$store.getters['gui/webcams/getWebcams'] ?? []\n    }\n\n    get iconItems() {\n        return [\n            { value: 'mdi-printer-3d',          text: this.$t('Settings.WebcamsTab.IconPrinter') },\n            { value: 'mdi-printer-3d-nozzle',   text: this.$t('Settings.WebcamsTab.IconNozzle') },\n            { value: 'mdi-radiator-disabled',   text: this.$t('Settings.WebcamsTab.IconBed') },\n            { value: 'mdi-webcam',              text: this.$t('Settings.WebcamsTab.IconCam') },\n            { value: 'mdi-album',               text: this.$t('Settings.WebcamsTab.IconFilament') },\n            { value: 'mdi-door',                text: this.$t('Settings.WebcamsTab.IconDoor') },\n            { value: 'mdi-raspberry-pi',        text: this.$t('Settings.WebcamsTab.IconMcu') },\n            { value: 'mdi-campfire',            text: this.$t('Settings.WebcamsTab.IconHot') },\n        ]\n    }\n\n    get serviceItems() {\n        return [\n            { value: 'mjpegstreamer',           text: this.$t('Settings.WebcamsTab.Mjpegstreamer')},\n            { value: 'mjpegstreamer-adaptive',  text: this.$t('Settings.WebcamsTab.MjpegstreamerAdaptive') },\n            { value: 'uv4l-mjpeg',              text: this.$t('Settings.WebcamsTab.Uv4lMjpeg') },\n            { value: 'ipstream',                text: this.$t('Settings.WebcamsTab.Ipstream') },\n        ]\n    }\n\n    get webcamStyle() {\n        let transforms = ''\n        if (this.form.flipX) transforms += ' scaleX(-1)'\n        if (this.form.flipY) transforms += ' scaleY(-1)'\n        if (transforms.trimLeft().length) {\n            return { transform: transforms.trimLeft() }\n        }\n\n        return ''\n    }\n\n    getSubtitle(webcam: GuiWebcamStateWebcam) {\n        return 'URL: '+ (webcam.service === 'mjpegstreamer-adaptive' ? webcam.urlSnapshot : webcam.urlStream)\n    }\n\n    existsWebcamName(name: string) {\n        return (this.webcams.findIndex((webcam: GuiWebcamStateWebcam) => webcam.name === name && webcam.id !== this.form.id) !== -1)\n    }\n\n    createWebcam() {\n        this.clearDialog()\n\n        this.form.bool = true\n    }\n\n    editWebcam(webcam: GuiWebcamStateWebcam) {\n        this.form.id = webcam.id ?? null\n        this.form.name = webcam.name\n        this.form.icon = webcam.icon\n        this.form.service = webcam.service\n        this.form.targetFps = webcam.targetFps\n        this.form.urlStream = webcam.urlStream\n        this.form.urlSnapshot = webcam.urlSnapshot\n        this.form.flipX = webcam.flipX\n        this.form.flipY = webcam.flipY\n\n        this.form.bool = true\n        this.form.valid = false\n\n        this.$nextTick(() => {\n            this.$refs.webcamForm?.validate()\n        })\n    }\n\n    saveWebcam() {\n        if (this.form.valid) {\n            const values = {\n                name: this.form.name,\n                icon: this.form.icon,\n                service: this.form.service,\n                targetFps: this.form.targetFps,\n                urlStream: this.form.urlStream,\n                urlSnapshot: this.form.urlSnapshot,\n                flipX: this.form.flipX,\n                flipY: this.form.flipY,\n            }\n\n            if (this.form.id !== null) this.$store.dispatch('gui/webcams/update', { id: this.form.id, values: values })\n            else this.$store.dispatch('gui/webcams/store', { values })\n\n            this.clearDialog()\n        }\n    }\n\n    deleteWebcam(id: string) {\n        this.$store.dispatch('gui/webcams/delete', id)\n    }\n\n    clearDialog() {\n        this.form.bool = false\n        this.form.id = null\n        this.form.name = ''\n        this.form.icon = 'mdi-webcam'\n        this.form.service = 'mjpegstreamer-adaptive'\n        this.form.targetFps = 15\n        this.form.urlStream = '/webcam/?action=stream'\n        this.form.urlSnapshot = '/webcam/?action=snapshot'\n        this.form.flipX = false\n        this.form.flipY = false\n    }\n\n    setFormIcon(icon: string) {\n        this.form.icon = icon\n    }\n}\n</script>\n"]}]}