{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopCornerMenu.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/TheTopCornerMenu.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/thread-loader/dist/cjs.js","mtime":1645990064416},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IENvbXBvbmVudCBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JwppbXBvcnQgeyBNaXhpbnMgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJ0AvY29tcG9uZW50cy9taXhpbnMvYmFzZScKaW1wb3J0IHtTZXJ2ZXJQb3dlclN0YXRlRGV2aWNlfSBmcm9tICdAL3N0b3JlL3NlcnZlci9wb3dlci90eXBlcycKaW1wb3J0IFBhbmVsIGZyb20gJ0AvY29tcG9uZW50cy91aS9QYW5lbC52dWUnCgppbnRlcmZhY2UgZGlhbG9nUG93ZXJEZXZpY2VDaGFuZ2UgewogICAgc2hvdzogYm9vbGVhbgogICAgZGV2aWNlOiBzdHJpbmcKICAgIHZhbHVlOiBzdHJpbmcKfQoKaW50ZXJmYWNlIGRpYWxvZ0NvbmZpcm1hdGlvbiB7CiAgICBzaG93OiBib29sZWFuCiAgICBzZXJ2aWNlTmFtZTogc3RyaW5nIHwgbnVsbAogICAgZXhlY3V0YWJsZUZ1bmN0aW9uOiBhbnkgfCBudWxsCiAgICB0aXRsZTogc3RyaW5nCiAgICBkZXNjcmlwdGlvbjogc3RyaW5nCiAgICBhY3Rpb25CdXR0b25UZXh0OiBzdHJpbmcKfQoKQENvbXBvbmVudCh7CiAgICBjb21wb25lbnRzOiB7UGFuZWx9Cn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRoZVRvcENvcm5lck1lbnUgZXh0ZW5kcyBNaXhpbnMoQmFzZU1peGluKSB7CgogICAgc2hvd01lbnUgPSBmYWxzZQogICAgZGlhbG9nUG93ZXJEZXZpY2VDaGFuZ2UgOiBkaWFsb2dQb3dlckRldmljZUNoYW5nZSA9IHsKICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICBkZXZpY2U6ICcnLAogICAgICAgIHZhbHVlOiAnJwogICAgfQoKICAgIGRpYWxvZ0NvbmZpcm1hdGlvbjogZGlhbG9nQ29uZmlybWF0aW9uID0gewogICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgIHNlcnZpY2VOYW1lOiBudWxsLAogICAgICAgIGV4ZWN1dGFibGVGdW5jdGlvbjogbnVsbCwKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIGFjdGlvbkJ1dHRvblRleHQ6ICcnCiAgICB9CgogICAgZ2V0IHNlcnZpY2VzKCkgewogICAgICAgIGNvbnN0IHNlcnZpY2VzID0gdGhpcy4kc3RvcmUuc3RhdGUuc2VydmVyLnN5c3RlbV9pbmZvPy5hdmFpbGFibGVfc2VydmljZXM/LmZpbHRlcigobmFtZTogc3RyaW5nKSA9PiBuYW1lICE9PSAna2xpcHBlcl9tY3UnKSA/PyBbXQogICAgICAgIHNlcnZpY2VzLnNvcnQoKQogICAgICAgIHJldHVybiBzZXJ2aWNlcwogICAgfQoKICAgIGdldCBwb3dlckRldmljZXMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3NlcnZlci9wb3dlci9nZXREZXZpY2VzJ10KICAgIH0KCiAgICBnZXQgc2VydmljZV9zdGF0ZXMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNlcnZlci5zeXN0ZW1faW5mbz8uc2VydmljZV9zdGF0ZSA/PyB7fQogICAgfQoKICAgIGdldFNlcnZpY2VTdGF0ZShuYW1lOiBzdHJpbmcpIHsKICAgICAgICBpZiAobmFtZSBpbiB0aGlzLnNlcnZpY2Vfc3RhdGVzKSByZXR1cm4gdGhpcy5zZXJ2aWNlX3N0YXRlc1tuYW1lXS5hY3RpdmVfc3RhdGUKCiAgICAgICAgcmV0dXJuIG51bGwKICAgIH0KCiAgICBnZXRTZXJ2aWNlU3ViU3RhdGUobmFtZTogc3RyaW5nKSB7CiAgICAgICAgaWYgKG5hbWUgaW4gdGhpcy5zZXJ2aWNlX3N0YXRlcykgcmV0dXJuIHRoaXMuc2VydmljZV9zdGF0ZXNbbmFtZV0uc3ViX3N0YXRlCgogICAgICAgIHJldHVybiBudWxsCiAgICB9CgogICAgY2hlY2tEaWFsb2coZXhlY3V0YWJsZUZ1bmN0aW9uOiBhbnksIHNlcnZpY2VOYW1lOiBzdHJpbmcsIGFjdGlvbjogc3RyaW5nKSB7CiAgICAgICAgaWYgKHRoaXMucHJpbnRlcklzUHJpbnRpbmcpIHsKICAgICAgICAgICAgdGhpcy5kaWFsb2dDb25maXJtYXRpb24uZXhlY3V0YWJsZUZ1bmN0aW9uID0gZXhlY3V0YWJsZUZ1bmN0aW9uCiAgICAgICAgICAgIHRoaXMuZGlhbG9nQ29uZmlybWF0aW9uLnNlcnZpY2VOYW1lID0gc2VydmljZU5hbWUKCiAgICAgICAgICAgIGNvbnN0IGFjdGlvblVwcGVyY2FzZSA9IGFjdGlvbi50cmltKCkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBhY3Rpb24udHJpbSgpLnNsaWNlKDEpCiAgICAgICAgICAgIGxldCB0aXRsZUtleSA9ICdBcHAuVG9wQ29ybmVyTWVudS5Db25maXJtYXRpb25EaWFsb2cuVGl0bGUuU2VydmljZScgKyBhY3Rpb25VcHBlcmNhc2UKICAgICAgICAgICAgbGV0IGRlc2NyaXB0aW9uS2V5ID0gJ0FwcC5Ub3BDb3JuZXJNZW51LkNvbmZpcm1hdGlvbkRpYWxvZy5EZXNjcmlwdGlvbi5TZXJ2aWNlJyArIGFjdGlvblVwcGVyY2FzZQogICAgICAgICAgICBsZXQgYnV0dG9uS2V5ID0gJ0FwcC5Ub3BDb3JuZXJNZW51LicgKyBhY3Rpb25VcHBlcmNhc2UKCiAgICAgICAgICAgIGlmIChzZXJ2aWNlTmFtZSA9PT0gJ2tsaXBwZXInICYmIFsnc3RvcCcsICdyZXN0YXJ0JywgJ2Zpcm13YXJlUmVzdGFydCddLmluY2x1ZGVzKGFjdGlvbikpewogICAgICAgICAgICAgICAgdGl0bGVLZXkgPSAnQXBwLlRvcENvcm5lck1lbnUuQ29uZmlybWF0aW9uRGlhbG9nLlRpdGxlLicgKyAoYWN0aW9uICE9PSAnc3RvcCcgPyAnS2xpcHBlcicgOiAnU2VydmljZScpICsgYWN0aW9uVXBwZXJjYXNlCiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbktleSA9ICdBcHAuVG9wQ29ybmVyTWVudS5Db25maXJtYXRpb25EaWFsb2cuRGVzY3JpcHRpb24uS2xpcHBlcicgKyBhY3Rpb25VcHBlcmNhc2UKCiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uID09PSAnZmlybXdhcmVSZXN0YXJ0JykgYnV0dG9uS2V5ID0gJ0FwcC5Ub3BDb3JuZXJNZW51LktsaXBwZXJGaXJtd2FyZVJlc3RhcnQnCiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VydmljZU5hbWUgPT09ICdob3N0JykgewogICAgICAgICAgICAgICAgdGl0bGVLZXkgPSAnQXBwLlRvcENvcm5lck1lbnUuQ29uZmlybWF0aW9uRGlhbG9nLlRpdGxlLkhvc3QnICsgYWN0aW9uVXBwZXJjYXNlCiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbktleSA9ICdBcHAuVG9wQ29ybmVyTWVudS5Db25maXJtYXRpb25EaWFsb2cuRGVzY3JpcHRpb24uSG9zdCcgKyBhY3Rpb25VcHBlcmNhc2UKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5kaWFsb2dDb25maXJtYXRpb24udGl0bGUgPSB0aGlzLiR0KHRpdGxlS2V5KS50b1N0cmluZygpCiAgICAgICAgICAgIHRoaXMuZGlhbG9nQ29uZmlybWF0aW9uLmRlc2NyaXB0aW9uID0gdGhpcy4kdChkZXNjcmlwdGlvbktleSkudG9TdHJpbmcoKQogICAgICAgICAgICB0aGlzLmRpYWxvZ0NvbmZpcm1hdGlvbi5hY3Rpb25CdXR0b25UZXh0ID0gdGhpcy4kdChidXR0b25LZXkpLnRvU3RyaW5nKCkKICAgICAgICAgICAgdGhpcy5kaWFsb2dDb25maXJtYXRpb24uc2hvdyA9IHRydWUKICAgICAgICB9IGVsc2UgZXhlY3V0YWJsZUZ1bmN0aW9uKHNlcnZpY2VOYW1lKQogICAgfQoKICAgIGV4ZWN1dGVEaWFsb2coKSB7CiAgICAgICAgdGhpcy5kaWFsb2dDb25maXJtYXRpb24uZXhlY3V0YWJsZUZ1bmN0aW9uKHRoaXMuZGlhbG9nQ29uZmlybWF0aW9uLnNlcnZpY2VOYW1lKQogICAgICAgIHRoaXMuZGlhbG9nQ29uZmlybWF0aW9uLnNob3cgPSBmYWxzZQogICAgfQoKICAgIGtsaXBwZXJSZXN0YXJ0KCkgewogICAgICAgIHRoaXMuc2hvd01lbnUgPSBmYWxzZQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZXJ2ZXIvYWRkRXZlbnQnLCB7IG1lc3NhZ2U6ICdSRVNUQVJUJywgdHlwZTogJ2NvbW1hbmQnIH0pCiAgICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ3ByaW50ZXIuZ2NvZGUuc2NyaXB0JywgeyBzY3JpcHQ6ICdSRVNUQVJUJyB9KQogICAgfQoKICAgIGtsaXBwZXJGaXJtd2FyZVJlc3RhcnQoKSB7CiAgICAgICAgdGhpcy5zaG93TWVudSA9IGZhbHNlCiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3NlcnZlci9hZGRFdmVudCcsIHsgbWVzc2FnZTogJ0ZJUk1XQVJFX1JFU1RBUlQnLCB0eXBlOiAnY29tbWFuZCcgfSkKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgncHJpbnRlci5nY29kZS5zY3JpcHQnLCB7IHNjcmlwdDogJ0ZJUk1XQVJFX1JFU1RBUlQnIH0pCiAgICB9CgogICAgc2VydmljZVN0YXJ0KHNlcnZpY2U6IHN0cmluZykgewogICAgICAgIHRoaXMuc2hvd01lbnUgPSBmYWxzZQogICAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdtYWNoaW5lLnNlcnZpY2VzLnN0YXJ0JywgeyBzZXJ2aWNlOiBzZXJ2aWNlIH0pCiAgICB9CgogICAgc2VydmljZVJlc3RhcnQoc2VydmljZTogc3RyaW5nKSB7CiAgICAgICAgdGhpcy5zaG93TWVudSA9IGZhbHNlCiAgICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ21hY2hpbmUuc2VydmljZXMucmVzdGFydCcsIHsgc2VydmljZTogc2VydmljZSB9KQogICAgfQoKICAgIHNlcnZpY2VTdG9wKHNlcnZpY2U6IHN0cmluZykgewogICAgICAgIHRoaXMuc2hvd01lbnUgPSBmYWxzZQogICAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdtYWNoaW5lLnNlcnZpY2VzLnN0b3AnLCB7IHNlcnZpY2U6IHNlcnZpY2UgfSkKICAgIH0KCiAgICBjaGFuZ2VTd2l0Y2goZGV2aWNlOiBTZXJ2ZXJQb3dlclN0YXRlRGV2aWNlLCB2YWx1ZTogc3RyaW5nKSB7CiAgICAgICAgdGhpcy5kaWFsb2dQb3dlckRldmljZUNoYW5nZS5kZXZpY2UgPSBkZXZpY2UuZGV2aWNlCiAgICAgICAgdGhpcy5kaWFsb2dQb3dlckRldmljZUNoYW5nZS52YWx1ZSA9IHZhbHVlCgogICAgICAgIGNvbnN0IGNvbmZpcm1PblBvd2VyRGV2aWNlQ2hhbmdlID0gdGhpcy4kc3RvcmUuc3RhdGUuZ3VpLnVpU2V0dGluZ3MuY29uZmlybU9uUG93ZXJEZXZpY2VDaGFuZ2UKICAgICAgICBpZiAoY29uZmlybU9uUG93ZXJEZXZpY2VDaGFuZ2UpIHsKICAgICAgICAgICAgdGhpcy5kaWFsb2dQb3dlckRldmljZUNoYW5nZS5zaG93ID0gdHJ1ZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMucG93ZXJEZXZpY2VUb2dnbGUoKQogICAgICAgIH0KICAgIH0KCiAgICBwb3dlckRldmljZVRvZ2dsZSgpIHsKICAgICAgICB0aGlzLmRpYWxvZ1Bvd2VyRGV2aWNlQ2hhbmdlLnNob3cgPSBmYWxzZQogICAgICAgIGNvbnN0IHJwYyA9ICh0aGlzLmRpYWxvZ1Bvd2VyRGV2aWNlQ2hhbmdlLnZhbHVlID09PSAnb2ZmJyA/ICdtYWNoaW5lLmRldmljZV9wb3dlci5vbicgOiAnbWFjaGluZS5kZXZpY2VfcG93ZXIub2ZmJykKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdChycGMseyBbdGhpcy5kaWFsb2dQb3dlckRldmljZUNoYW5nZS5kZXZpY2VdOiBudWxsIH0seyBhY3Rpb246ICdzZXJ2ZXIvcG93ZXIvcmVzcG9uc2VUb2dnbGUnIH0pCiAgICB9CgogICAgaG9zdFJlYm9vdCgpIHsKICAgICAgICB0aGlzLnNob3dNZW51ID0gZmFsc2UKICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnbWFjaGluZS5yZWJvb3QnLCB7IH0pCiAgICB9CgogICAgaG9zdFNodXRkb3duKCkgewogICAgICAgIHRoaXMuc2hvd01lbnUgPSBmYWxzZQogICAgICAgIHRoaXMuJHNvY2tldC5lbWl0KCdtYWNoaW5lLnNodXRkb3duJywgeyB9KQogICAgfQp9Cg=="},null]}