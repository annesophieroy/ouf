{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/inputs/MotionSettingsInput.vue?vue&type=style&index=0&id=0bfdeeca&scoped=true&lang=css&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/inputs/MotionSettingsInput.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1645990066541},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645990070825},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/postcss-loader/src/index.js","mtime":1645990067674},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5fc3Bpbl9idXR0b25fZ3JvdXAgewogICAgd2lkdGg6IDI0cHg7CiAgICBtYXJnaW46IC02cHggLTZweCAwIC02cHg7Cn0K"},{"version":3,"sources":["MotionSettingsInput.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA","file":"MotionSettingsInput.vue","sourceRoot":"src/components/inputs","sourcesContent":["<style scoped>\n    ._spin_button_group {\n        width: 24px;\n        margin: -6px -6px 0 -6px;\n    }\n</style>\n\n<template>\n    <form v-on:submit.prevent=\"sendCmd\">\n        <v-text-field\n            v-model=\"value\"\n            class=\"d-flex align-center\"\n            @click:append=\"resetLimit\"\n            @blur=\"value = target\"\n            :label=\"label\"\n            :suffix=\"unit\"\n            :append-icon=\"value !== defaultValue ? 'mdi-restart' : ''\"\n            :error=\"error = ((value < min) || ((value > max) && max !== null))\"\n            :step=\"step\"\n            :min=\"min\"\n            :max=\"max\"\n            :dec=\"dec\"\n            type=\"number\"\n            hide-spin-buttons\n            hide-details\n            outlined\n            dense\n        >\n            <template v-if=\"hasSpinner\" v-slot:append-outer>\n                <div class=\"_spin_button_group\">\n                    <v-btn\n                        @click=\"increment\"\n                        :disabled=\"((value >= max) && max !== null) || error\"\n                        class=\"mt-n3\"\n                        icon plain small\n                    >\n                        <v-icon>mdi-chevron-up</v-icon>\n                    </v-btn>\n                    <v-btn\n                        @click=\"decrement\"\n                        :disabled=\"(value <= min) || error\"\n                        class=\"mb-n3\"\n                        icon plain small\n                    >\n                        <v-icon>mdi-chevron-down</v-icon>\n                    </v-btn>\n                </div>\n            </template>\n        </v-text-field>\n    </form>\n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport {Mixins, Prop, Watch} from 'vue-property-decorator'\nimport {Debounce} from 'vue-debounce-decorator'\nimport BaseMixin from '@/components/mixins/base'\n\n@Component\nexport default class MotionSettingsInput extends Mixins(BaseMixin) {\n    private value: number = 0\n    private error: boolean | undefined\n\n    @Prop({ type: String, required: true }) readonly label!: string\n    @Prop({ type: Number, required: false , default: 1 }) readonly step!: number\n    @Prop({ type: Boolean, required: false , default: false }) readonly hasSpinner!: number\n    @Prop({ type: Number, required: false , default: 1 }) readonly spinnerFactor!: number\n    @Prop({ type: Number, required: true , default: 0 }) readonly min!: number\n    @Prop({ type: Number, default: null }) readonly max!: number | null\n    @Prop({ type: Number, required: true , default: 0 }) readonly dec!: number\n    @Prop({ type: Number, required: true, default: 0 }) readonly target!: number\n    @Prop({ type: Number, required: true, default: 0 }) readonly defaultValue!: number\n    @Prop({ type: String, required: true }) readonly attributeName!: string\n    @Prop({ type: String, required: true }) readonly unit!: string\n\n    @Watch('target')\n    targetChanged(newVal: number): void {\n        this.value = newVal\n    }\n\n    created(): void {\n        this.value = this.target\n    }\n\n    resetLimit(): void {\n        this.value = this.defaultValue\n\n        this.sendCmd()\n    }\n\n    decrement(): void {\n        this.value = (this.value > this.min) ? Math.round((this.value - this.step * this.spinnerFactor) * (10 ** this.dec)) / (10 ** this.dec) : this.min\n        this.sendCmd()\n    }\n\n    increment(): void {\n        this.value = (this.value < this.max! || this.max === null) ? Math.round((this.value + this.step * this.spinnerFactor) * (10 ** this.dec)) / (10 ** this.dec) : this.max\n        this.sendCmd()\n    }\n\n    @Debounce(500)\n    sendCmd(): void {\n        const gcode = 'SET_VELOCITY_LIMIT ' + this.attributeName + '=' + Math.max(this.min, this.value).toFixed(this.dec)\n        this.$store.dispatch('server/addEvent', {message: gcode, type: 'command'})\n        this.$socket.emit('printer.gcode.script', {script: gcode})\n    }\n\n}\n</script>"]}]}