{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/webcams/Mjpegstreamer.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/webcams/Mjpegstreamer.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/thread-loader/dist/cjs.js","mtime":1645990064416},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IENvbXBvbmVudCBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JwppbXBvcnQge01peGlucywgUHJvcCwgV2F0Y2h9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InCmltcG9ydCBCYXNlTWl4aW4gZnJvbSAnQC9jb21wb25lbnRzL21peGlucy9iYXNlJwoKY29uc3QgQ09OVEVOVF9MRU5HVEggPSAnY29udGVudC1sZW5ndGgnCmNvbnN0IFRZUEVfSlBFRyA9ICdpbWFnZS9qcGVnJwoKQENvbXBvbmVudApleHBvcnQgZGVmYXVsdCBjbGFzcyBNanBlZ3N0cmVhbWVyIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewogICAgcHJpdmF0ZSBpc1Zpc2libGUgPSB0cnVlCiAgICBwcml2YXRlIGN1cnJlbnRGUFMgPSAwCiAgICBwcml2YXRlIHRpbWVyRlBTOiBudW1iZXIgfCBudWxsID0gbnVsbAogICAgcHJpdmF0ZSB0aW1lclJlc3RhcnQ6IG51bWJlciB8IG51bGwgPSBudWxsCiAgICBwcml2YXRlIHN0cmVhbTogUmVhZGFibGVTdHJlYW0gfCBudWxsID0gbnVsbAogICAgcHJpdmF0ZSBjb250cm9sbGVyOiBBYm9ydENvbnRyb2xsZXIgfCBudWxsID0gbnVsbAoKICAgIEBQcm9wKHsgcmVxdWlyZWQ6IHRydWUgfSkKICAgIGNhbVNldHRpbmdzOiBhbnkKCiAgICBAUHJvcCgpCiAgICBwcmludGVyVXJsOiBzdHJpbmcgfCB1bmRlZmluZWQKCiAgICBAUHJvcCh7IGRlZmF1bHQ6IHRydWUgfSkgc2hvd0ZwcyE6IGJvb2xlYW4KCiAgICAkcmVmcyE6IHsKICAgICAgICBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50LAogICAgICAgIGltYWdlOiBIVE1MSW1hZ2VFbGVtZW50LAogICAgfQoKICAgIGdldCB1cmwoKSB7CiAgICAgICAgY29uc3QgYmFzZVVybCA9IHRoaXMuY2FtU2V0dGluZ3MudXJsU3RyZWFtCiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChiYXNlVXJsLCB0aGlzLnByaW50ZXJVcmwgPT09IHVuZGVmaW5lZCA/IHRoaXMuaG9zdFVybC50b1N0cmluZygpIDogdGhpcy5wcmludGVyVXJsKQoKICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHVybC50b1N0cmluZygpKQogICAgfQoKICAgIGdldCB3ZWJjYW1TdHlsZSgpIHsKICAgICAgICBsZXQgdHJhbnNmb3JtcyA9ICcnCiAgICAgICAgaWYgKCdmbGlwWCcgaW4gdGhpcy5jYW1TZXR0aW5ncyAmJiB0aGlzLmNhbVNldHRpbmdzLmZsaXBYKSB0cmFuc2Zvcm1zICs9ICcgc2NhbGVYKC0xKScKICAgICAgICBpZiAoJ2ZsaXBYJyBpbiB0aGlzLmNhbVNldHRpbmdzICYmIHRoaXMuY2FtU2V0dGluZ3MuZmxpcFkpIHRyYW5zZm9ybXMgKz0gJyBzY2FsZVkoLTEpJwogICAgICAgIGlmICh0cmFuc2Zvcm1zLnRyaW1MZWZ0KCkubGVuZ3RoKSByZXR1cm4geyB0cmFuc2Zvcm06IHRyYW5zZm9ybXMudHJpbUxlZnQoKSB9CgogICAgICAgIHJldHVybiAnJwogICAgfQoKICAgIGdldCBmcHNPdXRwdXQoKSB7CiAgICAgICAgcmV0dXJuICh0aGlzLmN1cnJlbnRGUFMgPCAxMCkgPyAnMCcrdGhpcy5jdXJyZW50RlBTLnRvU3RyaW5nKCkgOiB0aGlzLmN1cnJlbnRGUFMKICAgIH0KCiAgICBzdGFydFN0cmVhbSgpIHsKICAgICAgICBjb25zdCBTT0kgPSBuZXcgVWludDhBcnJheSgyKQogICAgICAgIFNPSVswXSA9IDB4RkYKICAgICAgICBTT0lbMV0gPSAweEQ4CgogICAgICAgIGZ1bmN0aW9uIGdldExlbmd0aChoZWFkZXJzOiBhbnkpIHsKICAgICAgICAgICAgbGV0IGNvbnRlbnRMZW5ndGggPSAtMQogICAgICAgICAgICBoZWFkZXJzLnNwbGl0KCdcbicpLmZvckVhY2goKGhlYWRlcjogYW55KSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBwYWlyID0gaGVhZGVyLnNwbGl0KCc6JykKICAgICAgICAgICAgICAgIGlmIChwYWlyWzBdLnRvTG93ZXJDYXNlKCkgPT09IENPTlRFTlRfTEVOR1RIKSB7IC8vIEZpeCBmb3IgaXNzdWUgaHR0cHM6Ly9naXRodWIuY29tL2FydW50ai9tanBlZy1yZWFkYWJsZS1zdHJlYW0vaXNzdWVzLzMgc3VnZ2VzdGVkIGJ5IG1hcnRhcGFuYwogICAgICAgICAgICAgICAgICAgIGNvbnRlbnRMZW5ndGggPSBwYWlyWzFdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHJldHVybiBjb250ZW50TGVuZ3RoCiAgICAgICAgfQoKICAgICAgICB0aGlzLmNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCkKICAgICAgICBjb25zdCB7IHNpZ25hbCB9ID0gdGhpcy5jb250cm9sbGVyCgogICAgICAgIC8vcmVhZGFibGUgc3RyZWFtIGNyZWRpdCB0byBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hcnVudGovbWpwZWctcmVhZGFibGUtc3RyZWFtCiAgICAgICAgZmV0Y2godGhpcy51cmwsIHsgc2lnbmFsIH0pCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmJvZHkpCiAgICAgICAgICAgIC50aGVuKHJiID0+IHsKICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IHJiPy5nZXRSZWFkZXIoKQoKICAgICAgICAgICAgICAgIGxldCBoZWFkZXJzID0gJycKICAgICAgICAgICAgICAgIGxldCBjb250ZW50TGVuZ3RoID0gLTEKICAgICAgICAgICAgICAgIGxldCBpbWFnZUJ1ZmZlcjogYW55ID0gbnVsbAogICAgICAgICAgICAgICAgbGV0IGJ5dGVzUmVhZCA9IDAKICAgICAgICAgICAgICAgIGNvbnN0IGltZyA9IHRoaXMuJHJlZnMuaW1hZ2UKCiAgICAgICAgICAgICAgICAvLyBjYWxjdWxhdGluZyBmcHMuIFRoaXMgaXMgcHJldHR5IGxhbWUuIFNob3VsZCBwcm9iYWJseSBpbXBsZW1lbnQgYSBmbG9hdGluZyB3aW5kb3cgZnVuY3Rpb24uCiAgICAgICAgICAgICAgICBsZXQgZnJhbWVzID0gMAoKICAgICAgICAgICAgICAgIHRoaXMudGltZXJGUFMgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50RlBTID0gZnJhbWVzCiAgICAgICAgICAgICAgICAgICAgZnJhbWVzID0gMAogICAgICAgICAgICAgICAgfSwgMTAwMCkKCiAgICAgICAgICAgICAgICB0aGlzLnRpbWVyUmVzdGFydCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3RhcnRTdHJlYW0oKQogICAgICAgICAgICAgICAgfSwgNjAwMDApCgogICAgICAgICAgICAgICAgdGhpcy5zdHJlYW0gPSBuZXcgUmVhZGFibGVTdHJlYW0oewogICAgICAgICAgICAgICAgICAgIHN0YXJ0KGNvbnRyb2xsZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHB1bXAoKQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBmdW5jdGlvbiBoYW5kbGVzIGVhY2ggZGF0YSBjaHVuawogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBwdW1wKCk6IGFueSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAiZG9uZSIgaXMgYSBCb29sZWFuIGFuZCB2YWx1ZSBhICJVaW50OEFycmF5IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYWRlcj8ucmVhZCgpLnRoZW4oICh7ZG9uZSwgdmFsdWV9KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgaXMgbm8gbW9yZSBkYXRhIHRvIHJlYWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9uZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJ2RvbmUnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEdldCB0aGUgZGF0YSBhbmQgc2VuZCBpdCB0byB0aGUgYnJvd3NlciB2aWEgdGhlIGNvbnRyb2xsZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUodmFsdWUpCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9MDsgaW5kZXggPCB2YWx1ZS5sZW5ndGg7IGluZGV4KyspIHsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSd2ZSBmb3VuZCBzdGFydCBvZiB0aGUgZnJhbWUuIEV2ZXJ5dGhpbmcgd2UndmUgcmVhZCB0aWxsIG5vdyBpcyB0aGUgaGVhZGVyLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlW2luZGV4XSA9PT0gU09JWzBdICYmIHZhbHVlW2luZGV4KzFdID09PSBTT0lbMV0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50TGVuZ3RoID0gZ2V0TGVuZ3RoKGhlYWRlcnMpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VCdWZmZXIgPSBuZXcgVWludDhBcnJheShuZXcgQXJyYXlCdWZmZXIoY29udGVudExlbmd0aCkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSdyZSBzdGlsbCByZWFkaW5nIHRoZSBoZWFkZXIuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudExlbmd0aCA8PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVycyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHZhbHVlW2luZGV4XSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlJ3JlIG5vdyByZWFkaW5nIHRoZSBqcGVnLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYnl0ZXNSZWFkIDwgY29udGVudExlbmd0aCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VCdWZmZXJbYnl0ZXNSZWFkKytdID0gdmFsdWVbaW5kZXhdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSdyZSBkb25lIHJlYWRpbmcgdGhlIGpwZWcuIFRpbWUgdG8gcmVuZGVyIGl0LgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW2ltYWdlQnVmZmVyXSwge3R5cGU6IFRZUEVfSlBFR30pKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1lcysrCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudExlbmd0aCA9IDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBieXRlc1JlYWQgPSAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVycyA9ICcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwdW1wKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgfQoKICAgIHZpc2liaWxpdHlDaGFuZ2VkKGlzVmlzaWJsZTogYm9vbGVhbikgewogICAgICAgIHRoaXMuaXNWaXNpYmxlID0gaXNWaXNpYmxlCgogICAgICAgIGlmIChpc1Zpc2libGUpIHsKICAgICAgICAgICAgdGhpcy5zdGFydFN0cmVhbSgpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5zdG9wU3RyZWFtKCkKICAgICAgICB9CiAgICB9CgogICAgYmVmb3JlRGVzdHJveSgpIHsKICAgICAgICB0aGlzLnN0b3BTdHJlYW0oKQogICAgfQoKICAgIHN0b3BTdHJlYW0oKSB7CiAgICAgICAgaWYgKHRoaXMudGltZXJGUFMpIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyRlBTKQogICAgICAgIGlmICh0aGlzLnRpbWVyUmVzdGFydCkgY2xlYXJUaW1lb3V0KHRoaXMudGltZXJSZXN0YXJ0KQogICAgICAgIHRoaXMuY29udHJvbGxlcj8uYWJvcnQoKQogICAgICAgIHRoaXMuc3RyZWFtPy5jYW5jZWwoKQogICAgfQoKICAgIGFzeW5jIHJlc3RhcnRTdHJlYW0oKSB7CiAgICAgICAgdGhpcy5zdG9wU3RyZWFtKCkKICAgICAgICB0aGlzLnN0YXJ0U3RyZWFtKCkKICAgIH0KCiAgICBAV2F0Y2goJ3VybCcpCiAgICB1cmxDaGFuZ2VkKCkgewogICAgICAgIHRoaXMucmVzdGFydFN0cmVhbSgpCiAgICB9Cn0K"},null]}