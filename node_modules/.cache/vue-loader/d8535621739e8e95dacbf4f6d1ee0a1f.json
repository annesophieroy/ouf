{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/FarmPrinterPanel.vue?vue&type=style&index=0&id=2292b2c0&scoped=true&lang=css&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/panels/FarmPrinterPanel.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1645990066541},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645990070825},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/postcss-loader/src/index.js","mtime":1645990067674},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52LWNhcmQuZGlzYWJsZWRQcmludGVyIHsKICAgIG9wYWNpdHk6IDAuNjsKICAgIGZpbHRlcjogZ3JheXNjYWxlKDcwJSk7Cn0KCi53ZWJjYW1Db250YWluZXIsCi53ZWJjYW1Db250YWluZXIgLnZ1ZS1sb2FkLWltYWdlLAoud2ViY2FtQ29udGFpbmVyPmRpdiwKLndlYmNhbUNvbnRhaW5lciBpbWcgewogICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7CiAgICB0b3A6IDA7IGxlZnQ6IDA7IHJpZ2h0OiAwOyBib3R0b206IDA7Cn0KCi53ZWJjYW1Db250YWluZXIgaW1nIHsKICAgIGhlaWdodDogMTAwJTsKfQoKLndlYmNhbUNvbnRhaW5lciAud2ViY2FtRnBzT3V0cHV0IHsKICAgIGRpc3BsYXk6IG5vbmU7Cn0KCi52LW92ZXJsYXkgewogICAgdG9wOiA0OHB4Owp9Cg=="},{"version":3,"sources":["FarmPrinterPanel.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"FarmPrinterPanel.vue","sourceRoot":"src/components/panels","sourcesContent":["<style scoped>\n    .v-card.disabledPrinter {\n        opacity: 0.6;\n        filter: grayscale(70%);\n    }\n\n    .webcamContainer,\n    .webcamContainer .vue-load-image,\n    .webcamContainer>div,\n    .webcamContainer img {\n        position: absolute !important;\n        top: 0; left: 0; right: 0; bottom: 0;\n    }\n\n    .webcamContainer img {\n        height: 100%;\n    }\n\n    .webcamContainer .webcamFpsOutput {\n        display: none;\n    }\n\n    .v-overlay {\n        top: 48px;\n    }\n</style>\n\n<template>\n    <panel\n        icon=\"mdi-printer-3d\"\n        :title=\"printer_name\"\n        :card-class=\"'farmprinter-panel '+(!printer.socket.isConnected && !printer.socket.isConnecting ? 'disabledPrinter' : '')\"\n        :loading=\"printer.socket.isConnecting\"\n        :toolbar-color=\"isCurrentPrinter ? 'primary' : ''\"\n    >\n        <template v-slot:buttons>\n            <v-menu :offset-y=\"true\" title=\"Webcam\" v-if=\"showWebcamSwitch\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn text v-bind=\"attrs\" v-on=\"on\">\n                        <v-icon small>mdi-webcam</v-icon>\n                        <v-icon small>mdi-menu-down</v-icon>\n                    </v-btn>\n                </template>\n                <v-list dense class=\"py-0\">\n                    <v-list-item link @click=\"currentCamId = 'off'\">\n                        <v-list-item-icon class=\"mr-0\">\n                            <v-icon small>mdi-webcam-off</v-icon>\n                        </v-list-item-icon>\n                        <v-list-item-content>\n                            <v-list-item-title>{{ $t('Panels.FarmPrinterPanel.WebcamOff') }}</v-list-item-title>\n                        </v-list-item-content>\n                    </v-list-item>\n                    <v-list-item v-for=\"webcam of printer_webcams\" v-bind:key=\"webcam.index\" link @click=\"currentCamId = webcam.id\">\n                        <v-list-item-icon class=\"mr-0\">\n                            <v-icon small>{{ webcam.icon }}</v-icon>\n                        </v-list-item-icon>\n                        <v-list-item-content>\n                            <v-list-item-title v-text=\"webcam.name\"></v-list-item-title>\n                        </v-list-item-content>\n                    </v-list-item>\n                </v-list>\n            </v-menu>\n        </template>\n        <v-hover>\n            <template v-slot:default=\"{ hover }\">\n                <div>\n                    <v-img\n                        :height=\"imageHeight\"\n                        :src=\"printer_image\"\n                        class=\"d-flex align-end\"\n                        ref=\"imageDiv\"\n                    >\n                        <div v-if=\"printer.socket.isConnected && currentCamId !== 'off' && currentWebcam\" class=\"webcamContainer\">\n                            <template v-if=\"'service' in currentWebcam && currentWebcam.service === 'mjpegstreamer'\">\n                                <webcam-mjpegstreamer :cam-settings=\"currentWebcam\" :printer-url=\"printerUrl\" :show-fps=\"false\"></webcam-mjpegstreamer>\n                            </template>\n                            <template v-if=\"'service' in currentWebcam && currentWebcam.service === 'mjpegstreamer-adaptive'\">\n                                <webcam-mjpegstreamer-adaptive :cam-settings=\"currentWebcam\" :printer-url=\"printerUrl\" :show-fps=\"false\"></webcam-mjpegstreamer-adaptive>\n                            </template>\n                        </div>\n                        <v-card-title class=\"white--text py-2\" style=\"background-color: rgba(0,0,0,0.3); backdrop-filter: blur(3px);\">\n                            <v-row>\n                                <v-col class=\"col-auto pr-0 d-flex align-center\" style=\"width: 58px\">\n                                    <template v-if=\"printer_logo\">\n                                        <img :src=\"printer_logo\" style=\"width: 100%;\" class=\"my-auto\" alt=\"Logo\" />\n                                    </template>\n                                    <template v-else>\n                                        <mainsail-logo :color=\"printerLogoColor\" style=\"width: 100%;\" class=\"my-auto\"></mainsail-logo>\n                                    </template>\n                                </v-col>\n                                <v-col class=\"col\" style=\"width: 100px\">\n                                    <h3 class=\"font-weight-regular\">{{ printer_status }}</h3>\n                                    <span class=\"subtitle-2 text-truncate px-0 text--disabled d-block\" v-if=\"printer_current_filename !== ''\"><v-icon small class=\"mr-1\">mdi-file-outline</v-icon>{{ printer_current_filename }}</span>\n                                </v-col>\n                            </v-row>\n                        </v-card-title>\n                    </v-img>\n                    <v-card-text class=\"px-0 py-2\" v-if=\"printer_preview.length\">\n                        <v-container class=\"py-0\">\n                            <v-row>\n                                <v-col :class=\"object.name === 'ETA' ? 'col-auto' : 'col' + ' px-2'\" v-for=\"object in printer_preview\" v-bind:key=\"object.name\">\n                                    <strong class=\"d-block text-center\">{{ object.name }}</strong>\n                                    <span class=\"d-block text-center\">{{ object.value }}</span>\n                                </v-col>\n                            </v-row>\n                        </v-container>\n                    </v-card-text>\n                    <v-fade-transition>\n                        <v-overlay v-if=\"hover\" absolute :z-index=\"4\" >\n                            <v-btn color=\"primary\" @click=\"clickPrinter\">{{ printer.socket.isConnected ? $t(\"Panels.FarmPrinterPanel.SwitchToPrinter\") : $t(\"Panels.FarmPrinterPanel.ReconnectToPrinter\") }}</v-btn>\n                        </v-overlay>\n                    </v-fade-transition>\n                </div>\n            </template>\n        </v-hover>\n    </panel>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Mixins, Prop, Ref, Vue} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\nimport { FarmPrinterState } from '@/store/farm/printer/types'\nimport Mjpegstreamer from '@/components/webcams/Mjpegstreamer.vue'\nimport MjpegstreamerAdaptive from '@/components/webcams/MjpegstreamerAdaptive.vue'\nimport MainsailLogo from '@/components/ui/MainsailLogo.vue'\nimport Panel from '@/components/ui/Panel.vue'\n\n@Component({\n    components: {\n        Panel,\n        'webcam-mjpegstreamer': Mjpegstreamer,\n        'webcam-mjpegstreamer-adaptive': MjpegstreamerAdaptive,\n        'mainsail-logo': MainsailLogo\n    }\n})\nexport default class FarmPrinterPanel extends Mixins(BaseMixin) {\n    private imageHeight = 200;\n\n    @Prop({ type: Object, required: true }) printer!: FarmPrinterState\n    @Ref() readonly imageDiv!: Vue\n\n    get printerUrl() {\n        const thisUrl = window.location.href.split('/')\n        const protocol = thisUrl[0]\n\n        let url = protocol+'//'+this.printer.socket.hostname\n        if (80 !== this.printer.socket.webPort) url += ':'+this.printer.socket.webPort\n\n        return url\n    }\n\n    get isCurrentPrinter() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/isCurrentPrinter']\n    }\n\n    get currentCamId() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getSetting']('currentCamId', 'off')\n    }\n\n    set currentCamId(newVal) {\n        this.$store.dispatch('farm/'+this.printer._namespace+'/setSettings', { currentCamId: newVal })\n    }\n\n    get printer_name() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getPrinterName']\n    }\n\n    get printer_status() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getStatus']\n    }\n\n    get printer_current_filename() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getCurrentFilename']\n    }\n\n    get printer_image() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getImage']\n    }\n\n    get printer_logo() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getLogo']\n    }\n\n    get printerLogoColor() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getLogoColor']\n    }\n\n    get printer_position() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getPosition']\n    }\n\n    get printer_preview() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getPrinterPreview']\n    }\n\n    get showWebcamSwitch() {\n        return (this.printer.socket.isConnected && this.printer_webcams.length > 0)\n    }\n\n    get printer_webcams() {\n        return this.$store.getters['farm/'+this.printer._namespace+'/getPrinterWebcams']\n    }\n\n    get currentWebcam() {\n        const currentCam = this.printer_webcams.find((webcam: any) => webcam.id === this.currentCamId)\n        if (currentCam) return currentCam\n\n        return false\n    }\n\n    clickPrinter() {\n        if (this.printer.socket.isConnected)\n            this.$store.dispatch('changePrinter', { printer: this.printer._namespace })\n        else\n            this.$store.dispatch('farm/'+this.printer._namespace+'/reconnect')\n    }\n\n    mounted() {\n        window.addEventListener('resize', this.resize)\n        this.resize()\n    }\n\n    beforeDestroy() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    resize() {\n        if (this.imageDiv?.$el?.clientWidth) {\n            this.imageHeight = Math.round(this.imageDiv.$el.clientWidth / 3 * 2)\n        } else this.imageHeight = 200\n    }\n\n}\n</script>"]}]}