{"remainingRequest":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/webcams/MjpegstreamerAdaptive.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/src/components/webcams/MjpegstreamerAdaptive.vue","mtime":1644874918000},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/babel-loader/lib/index.js","mtime":1645990067759},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/ts-loader/index.js","mtime":1645990068168},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/cache-loader/dist/cjs.js","mtime":1645990064605},{"path":"/Users/anne-sophieroy/Downloads/Mainsail/mainsail-maintenance/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1645990069130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgQ29tcG9uZW50IGZyb20gJ3Z1ZS1jbGFzcy1jb21wb25lbnQnCmltcG9ydCB7TWl4aW5zLCBQcm9wfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgQmFzZU1peGluIGZyb20gJ0AvY29tcG9uZW50cy9taXhpbnMvYmFzZScKCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWpwZWdzdHJlYW1lckFkYXB0aXZlIGV4dGVuZHMgTWl4aW5zKEJhc2VNaXhpbikgewogICAgcHJpdmF0ZSByZWZyZXNoID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiBNYXRoLnBvdygxMCwgMTIpKQogICAgcHJpdmF0ZSBpc1Zpc2libGUgPSB0cnVlCiAgICBwcml2YXRlIGlzTG9hZGVkID0gdHJ1ZQogICAgcHJpdmF0ZSB0aW1lcjogbnVtYmVyIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkCgogICAgcHJpdmF0ZSByZXF1ZXN0X3N0YXJ0X3RpbWUgPSBwZXJmb3JtYW5jZS5ub3coKQogICAgcHJpdmF0ZSBzdGFydF90aW1lID0gcGVyZm9ybWFuY2Uubm93KCkKICAgIHByaXZhdGUgdGltZSA9IDAKICAgIHByaXZhdGUgcmVxdWVzdF90aW1lID0gMAogICAgcHJpdmF0ZSB0aW1lX3Ntb290aGluZyA9IDAuNgogICAgcHJpdmF0ZSByZXF1ZXN0X3RpbWVfc21vb3RoaW5nID0gMC4xCiAgICBwcml2YXRlIGN1cnJlbnRGUFMgPSAwCgogICAgJHJlZnMhOiB7CiAgICAgICAgbWpwZWdzdHJlYW1lckFkYXB0aXZlOiBhbnkKICAgIH0KCiAgICBAUHJvcCh7IHJlcXVpcmVkOiB0cnVlIH0pIGNhbVNldHRpbmdzOiBhbnkKICAgIEBQcm9wKCkgcHJpbnRlclVybDogc3RyaW5nIHwgdW5kZWZpbmVkCiAgICBAUHJvcCh7IGRlZmF1bHQ6IHRydWUgfSkgc2hvd0ZwcyE6IGJvb2xlYW4KCiAgICBnZXQgd2ViY2FtU3R5bGUoKSB7CiAgICAgICAgbGV0IHRyYW5zZm9ybXMgPSAnJwogICAgICAgIGlmICgnZmxpcFgnIGluIHRoaXMuY2FtU2V0dGluZ3MgJiYgdGhpcy5jYW1TZXR0aW5ncy5mbGlwWCkgdHJhbnNmb3JtcyArPSAnIHNjYWxlWCgtMSknCiAgICAgICAgaWYgKCdmbGlwWCcgaW4gdGhpcy5jYW1TZXR0aW5ncyAmJiB0aGlzLmNhbVNldHRpbmdzLmZsaXBZKSB0cmFuc2Zvcm1zICs9ICcgc2NhbGVZKC0xKScKICAgICAgICBpZiAodHJhbnNmb3Jtcy50cmltTGVmdCgpLmxlbmd0aCkgcmV0dXJuIHsgdHJhbnNmb3JtOiB0cmFuc2Zvcm1zLnRyaW1MZWZ0KCkgfQoKICAgICAgICByZXR1cm4gJycKICAgIH0KCiAgICBnZXQgZnBzT3V0cHV0KCkgewogICAgICAgIHJldHVybiAodGhpcy5jdXJyZW50RlBTIDwgMTApID8gJzAnK3RoaXMuY3VycmVudEZQUy50b1N0cmluZygpIDogdGhpcy5jdXJyZW50RlBTCiAgICB9CgogICAgdmlzaWJpbGl0eUNoYW5nZWQoaXNWaXNpYmxlOiBib29sZWFuKSB7CiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSBpc1Zpc2libGUKICAgICAgICBpZiAoaXNWaXNpYmxlKSB0aGlzLnJlZnJlc2hGcmFtZSgpCiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKQogICAgICAgICAgICB0aGlzLnRpbWVyID0gdW5kZWZpbmVkCiAgICAgICAgfQogICAgfQoKICAgIHJlZnJlc2hGcmFtZSgpIHsKICAgICAgICBpZiAodGhpcy5pc1Zpc2libGUpIHsKICAgICAgICAgICAgdGhpcy5yZWZyZXNoID0gbmV3IERhdGUoKS5nZXRUaW1lKCkKICAgICAgICAgICAgdGhpcy5zZXRGcmFtZSgpCiAgICAgICAgfQogICAgfQoKICAgIG9uTG9hZCgpIHsKICAgICAgICB0aGlzLmlzTG9hZGVkID0gdHJ1ZQoKICAgICAgICBjb25zdCB0YXJnZXRGcHMgPSB0aGlzLmNhbVNldHRpbmdzLnRhcmdldEZwcyB8fCAxMAogICAgICAgIGNvbnN0IGVuZF90aW1lID0gcGVyZm9ybWFuY2Uubm93KCkKICAgICAgICBjb25zdCBjdXJyZW50X3RpbWUgPSBlbmRfdGltZSAtIHRoaXMuc3RhcnRfdGltZQogICAgICAgIHRoaXMudGltZSA9ICh0aGlzLnRpbWUgKiB0aGlzLnRpbWVfc21vb3RoaW5nKSArIChjdXJyZW50X3RpbWUgKiAoMS4wIC0gdGhpcy50aW1lX3Ntb290aGluZykpCiAgICAgICAgdGhpcy5zdGFydF90aW1lID0gZW5kX3RpbWUKCiAgICAgICAgY29uc3QgdGFyZ2V0X3RpbWUgPSAxMDAwIC8gdGFyZ2V0RnBzCgogICAgICAgIGNvbnN0IGN1cnJlbnRfcmVxdWVzdF90aW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSB0aGlzLnJlcXVlc3Rfc3RhcnRfdGltZQogICAgICAgIHRoaXMucmVxdWVzdF90aW1lID0gKHRoaXMucmVxdWVzdF90aW1lICogdGhpcy5yZXF1ZXN0X3RpbWVfc21vb3RoaW5nKSArIChjdXJyZW50X3JlcXVlc3RfdGltZSAqICgxLjAgLSB0aGlzLnJlcXVlc3RfdGltZV9zbW9vdGhpbmcpKQogICAgICAgIGNvbnN0IHRpbWVvdXQgPSBNYXRoLm1heCgwLCB0YXJnZXRfdGltZSAtIHRoaXMucmVxdWVzdF90aW1lKQoKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KHRoaXMucmVmcmVzaEZyYW1lLCB0aW1lb3V0KQogICAgICAgIH0pCiAgICB9CgogICAgYXN5bmMgc2V0RnJhbWUoKSB7CiAgICAgICAgY29uc3QgYmFzZVVybCA9IHRoaXMuY2FtU2V0dGluZ3MudXJsU25hcHNob3QKICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGJhc2VVcmwsIHRoaXMucHJpbnRlclVybCA9PT0gdW5kZWZpbmVkID8gdGhpcy5ob3N0VXJsLnRvU3RyaW5nKCkgOiB0aGlzLnByaW50ZXJVcmwpCgogICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCdieXBhc3NDYWNoZScsIHRoaXMucmVmcmVzaC50b1N0cmluZygpKQoKICAgICAgICB0aGlzLnJlcXVlc3Rfc3RhcnRfdGltZSA9IHBlcmZvcm1hbmNlLm5vdygpCiAgICAgICAgdGhpcy5jdXJyZW50RlBTID0gKHRoaXMudGltZSA+IDApID8gTWF0aC5yb3VuZCgxMDAwIC8gdGhpcy50aW1lKSA6IDAKCiAgICAgICAgbGV0IGNhbnZhcyA9IHRoaXMuJHJlZnMubWpwZWdzdHJlYW1lckFkYXB0aXZlCiAgICAgICAgaWYgKGNhbnZhcykgewogICAgICAgICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKQogICAgICAgICAgICBjb25zdCBmcmFtZTogYW55ID0gYXdhaXQgdGhpcy5sb2FkSW1hZ2UodXJsLnRvU3RyaW5nKCkpCgogICAgICAgICAgICBjYW52YXMud2lkdGggPSBjYW52YXMuY2xpZW50V2lkdGgKICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IGNhbnZhcy5jbGllbnRXaWR0aCAqIChmcmFtZS5oZWlnaHQgLyBmcmFtZS53aWR0aCkKCiAgICAgICAgICAgIGN0eD8uZHJhd0ltYWdlKGZyYW1lLAogICAgICAgICAgICAgICAgMCwgMCwgZnJhbWUud2lkdGgsIGZyYW1lLmhlaWdodCwKICAgICAgICAgICAgICAgIDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCkKICAgICAgICAgICAgdGhpcy5pc0xvYWRlZCA9IHRydWUKICAgICAgICB9CgogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgdGhpcy5vbkxvYWQoKQogICAgICAgIH0pCiAgICB9CgogICAgbG9hZEltYWdlKHVybDogc3RyaW5nKSB7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHIgPT4gewogICAgICAgICAgICBsZXQgaW1hZ2UgPSBuZXcgSW1hZ2UoKQogICAgICAgICAgICBpbWFnZS5vbmxvYWQgPSAoKCkgPT4gcihpbWFnZSkpCiAgICAgICAgICAgIGltYWdlLm9uZXJyb3IgPSAoKCkgPT4gc2V0VGltZW91dCh0aGlzLnJlZnJlc2hGcmFtZSwgMTAwMCkpCiAgICAgICAgICAgIGltYWdlLnNyYyA9IHVybAogICAgICAgIH0pCiAgICB9Cn0K"},{"version":3,"sources":["MjpegstreamerAdaptive.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MjpegstreamerAdaptive.vue","sourceRoot":"src/components/webcams","sourcesContent":["<style scoped>\n    .webcamFpsOutput {\n        display: inline-block;\n        position:absolute;\n        bottom: 6px;\n        right: 0;\n        background: rgba(0,0,0,0.8);\n        padding: 3px 10px;\n        border-top-left-radius: 5px;\n    }\n</style>\n\n<template>\n    <div v-observe-visibility=\"visibilityChanged\" style=\"position: relative;\">\n        <div class=\"text-center py-5\" v-if=\"!isLoaded\">\n            <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n        </div>\n        <canvas ref=\"mjpegstreamerAdaptive\" width=\"600\" height=\"400\" :style=\"webcamStyle\" :class=\"'webcamImage '+(isLoaded ? '' : 'hiddenWebcam')\"></canvas>\n        <span class=\"webcamFpsOutput\" v-if=\"isLoaded && showFps\">{{ $t('Panels.WebcamPanel.FPS')}}: {{ fpsOutput }}</span>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Component from 'vue-class-component'\nimport {Mixins, Prop} from 'vue-property-decorator'\nimport BaseMixin from '@/components/mixins/base'\n\n@Component\nexport default class MjpegstreamerAdaptive extends Mixins(BaseMixin) {\n    private refresh = Math.ceil(Math.random() * Math.pow(10, 12))\n    private isVisible = true\n    private isLoaded = true\n    private timer: number | undefined = undefined\n\n    private request_start_time = performance.now()\n    private start_time = performance.now()\n    private time = 0\n    private request_time = 0\n    private time_smoothing = 0.6\n    private request_time_smoothing = 0.1\n    private currentFPS = 0\n\n    $refs!: {\n        mjpegstreamerAdaptive: any\n    }\n\n    @Prop({ required: true }) camSettings: any\n    @Prop() printerUrl: string | undefined\n    @Prop({ default: true }) showFps!: boolean\n\n    get webcamStyle() {\n        let transforms = ''\n        if ('flipX' in this.camSettings && this.camSettings.flipX) transforms += ' scaleX(-1)'\n        if ('flipX' in this.camSettings && this.camSettings.flipY) transforms += ' scaleY(-1)'\n        if (transforms.trimLeft().length) return { transform: transforms.trimLeft() }\n\n        return ''\n    }\n\n    get fpsOutput() {\n        return (this.currentFPS < 10) ? '0'+this.currentFPS.toString() : this.currentFPS\n    }\n\n    visibilityChanged(isVisible: boolean) {\n        this.isVisible = isVisible\n        if (isVisible) this.refreshFrame()\n        else {\n            clearTimeout(this.timer)\n            this.timer = undefined\n        }\n    }\n\n    refreshFrame() {\n        if (this.isVisible) {\n            this.refresh = new Date().getTime()\n            this.setFrame()\n        }\n    }\n\n    onLoad() {\n        this.isLoaded = true\n\n        const targetFps = this.camSettings.targetFps || 10\n        const end_time = performance.now()\n        const current_time = end_time - this.start_time\n        this.time = (this.time * this.time_smoothing) + (current_time * (1.0 - this.time_smoothing))\n        this.start_time = end_time\n\n        const target_time = 1000 / targetFps\n\n        const current_request_time = performance.now() - this.request_start_time\n        this.request_time = (this.request_time * this.request_time_smoothing) + (current_request_time * (1.0 - this.request_time_smoothing))\n        const timeout = Math.max(0, target_time - this.request_time)\n\n        this.$nextTick(() => {\n            this.timer = setTimeout(this.refreshFrame, timeout)\n        })\n    }\n\n    async setFrame() {\n        const baseUrl = this.camSettings.urlSnapshot\n        const url = new URL(baseUrl, this.printerUrl === undefined ? this.hostUrl.toString() : this.printerUrl)\n\n        url.searchParams.append('bypassCache', this.refresh.toString())\n\n        this.request_start_time = performance.now()\n        this.currentFPS = (this.time > 0) ? Math.round(1000 / this.time) : 0\n\n        let canvas = this.$refs.mjpegstreamerAdaptive\n        if (canvas) {\n            const ctx = canvas.getContext('2d')\n            const frame: any = await this.loadImage(url.toString())\n\n            canvas.width = canvas.clientWidth\n            canvas.height = canvas.clientWidth * (frame.height / frame.width)\n\n            ctx?.drawImage(frame,\n                0, 0, frame.width, frame.height,\n                0, 0, canvas.width, canvas.height)\n            this.isLoaded = true\n        }\n\n        this.$nextTick(() => {\n            this.onLoad()\n        })\n    }\n\n    loadImage(url: string) {\n        return new Promise(r => {\n            let image = new Image()\n            image.onload = (() => r(image))\n            image.onerror = (() => setTimeout(this.refreshFrame, 1000))\n            image.src = url\n        })\n    }\n}\n</script>"]}]}